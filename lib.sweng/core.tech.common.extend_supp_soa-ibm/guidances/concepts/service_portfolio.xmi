<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-vGqCTb2y75k4RqPSJTUsgA" name="service_portfolio,_qDmYcFbAEd6MCpkuB85p5g" guid="-vGqCTb2y75k4RqPSJTUsgA" changeDate="2010-08-20T09:20:46.289-0700" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    &quot;IT portfolio management&quot; -- the application of systematic management to large classes of items managed by enterprise&#xD;
    IT capabilities -- presupposes that the items being managed are reasonably well understood.&amp;nbsp;Traditionally, we have&#xD;
    dealt with portfolios of applications and projects.&amp;nbsp; As the industry moves toward the use of services -- generally&#xD;
    much finer-grained than applications -- to realize business functions, understanding and effectively managing&amp;nbsp;the&#xD;
    portfolio of services that an organization uses and/or maintains&amp;nbsp;becomes increasingly important.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;4&quot;>&lt;strong>The Enterprise View&lt;/strong>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Both projects and development teams have a limited scope and also a limited visibility into the wider capabilities,&#xD;
    requirements and goals of the IT services and more importantly the business the services support. It is therefore&#xD;
    critical that, during&amp;nbsp;the move toward &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/termdefinitions/service_oriented_solution.supp_soa_B0376546.html&quot; guid=&quot;_Frp-0IROEd6jqtIeWlQI8A&quot;>Service-Oriented Solutions&lt;/a> and the horizontal view of integrated solutions, the&#xD;
    architects on the IT side are able to visualize the portfolio of services supporting the business solutions required&#xD;
    for the business itself to operate. One advantage to modeling services is that an abstract model is able to elide&#xD;
    certain details and therefore present the broad view of the service portfolio in a scalable manner.&amp;nbsp;&amp;nbsp;In the&#xD;
    presence of many services the model is able to present views of the portfolio, supporting decision making for&#xD;
    the&amp;nbsp;SOA architect and the application architect.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As organizations transition to &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_oriented_architecture_956B2631.html&quot; guid=&quot;_xvH6UEo2Ed6D_7XK49c0nw&quot;>Service-Oriented Architecture&lt;/a>, there will be a growth in services.&amp;nbsp;&#xD;
    So,&amp;nbsp;the portfolio will not start as a large model, but it is possible to capture the state of the transition in&#xD;
    terms of available as well as planned services. &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/solution_partitioning_B6A1C6D8.html&quot; guid=&quot;_Ezt5QFIREd6lNtylJFsPIg&quot;>Service Partitioning&lt;/a>&amp;nbsp;is also vital in organizing the model and categorizing&#xD;
    services as the portfolio is developed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>&lt;font size=&quot;4&quot;>Categorizing Services&lt;/font>&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>By Service's Lifecycle&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    From a lifecycle perspective, we can think of&amp;nbsp;&lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/candidate_service_277B23D6.html&quot; guid=&quot;_R5GZYEo1Ed6D_7XK49c0nw&quot;>Candidate Services&lt;/a>, services that are under development, and services that are in&#xD;
    production.&amp;nbsp; Candidate services&amp;nbsp;(Capabilities for which a service exposure decision has not been&#xD;
    made)&amp;nbsp;can be&amp;nbsp;organized and described within a separate &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/candidate_services_portfolio_A1269E3C.html&quot; guid=&quot;_YDPAYEo1Ed6D_7XK49c0nw&quot;>Candidate Services Portfolio&lt;/a>, if desired.&amp;nbsp;&amp;nbsp;If the organization wishes to&#xD;
    lump all services together into a unified list, some information with respect to service&amp;nbsp;lifecycle&#xD;
    state&amp;nbsp;needs to&amp;nbsp;be associated with each service.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>By Organizational or Functional Considerations&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    We commonly see categorization language in terms of a service's purpose, ownership, or organization.&amp;nbsp;&amp;nbsp;As has&#xD;
    been mentioned before, some type of partitioning strategy that&amp;nbsp;realizes the chosen taxonomies&amp;nbsp;needs to be&#xD;
    used.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For example, the following diagram (or some variant) has been developed by a number of companies to help visualize the&#xD;
    &quot;types&quot; of services in the portfolio. This categorization, while common, is simply one possible way to segment the&#xD;
    service portfolio.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;253&quot; alt=&quot;Diagram is described in the textual content.&quot; src=&quot;./resources/co_soa_portfolio-01.gif&quot;     width=&quot;337&quot; border=&quot;0&quot; />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>User Interaction Services&lt;/b> are used to describe how the user interacts with the application; for example,&#xD;
        for&amp;nbsp;a service that might need to assign work to a human user, there needs to be services that know how to&#xD;
        notify the user of this work and then notify the originating service of the work completion.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Application-Specific Services&lt;/b> are services that are developed as a part of a development activity that have&#xD;
        been deemed as not appropriate for reuse and so are not considered a part of the portfolio. It is also possible&#xD;
        that, as services are composable entities, that a service might be part of the portfolio, yet nested services it&#xD;
        uses are not published.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Process Integration Services&lt;/b> are services, usually provided by commercial middleware, that provide the&#xD;
        choreography of services so that processes can be enacted in the middleware and utilize the services in the&#xD;
        portfolio to implement a process.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Information Integration Services&lt;/b> are again commercial middleware services that provide services for the&#xD;
        mediation of data formats and message content between services. For example, a customer message can be generated by&#xD;
        the service which is an aggregation of data retrieved from other services in the portfolio.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Business Services&lt;/b> are those services specific to the business, developed for the business, and providing&#xD;
        direct support to the applications developed to support the business. Examples might be CustomerMgmt, Inventory,&#xD;
        HR, etc.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Infrastructure Services&lt;/b> are services that provide common IT functions required not only by the Business&#xD;
        Services but by the integration services as well. Examples might be Messaging, Directory, Authentication, Legacy&#xD;
        access, etc.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Service_Repositories&quot; name=&quot;Service_Repositories&quot;>Service Repositories&lt;/a>&amp;nbsp;&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    So, apart from a model of the service portfolio, it is important that Designers and Developers have access to service&#xD;
    specifications in a detailed fashion at design and implementation. It is also possible for multiple services to&#xD;
    implement the same specification.&amp;nbsp; So,&amp;nbsp;a registry allowing queries of the form &quot;all services implementing the&#xD;
    IOrdering specification&quot;&amp;nbsp;enables developers to compose solutions from existing services, and integration&#xD;
    developers to identify which services to use to satisfy business or technical requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Service repositories are also able to use the classification values introduced using the service partitions above to&#xD;
    pre-populate the values as meta-data describing the services held by the repository.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For example, a solution might call for a shipping service.&amp;nbsp; The registry might identify&amp;nbsp;three services that&#xD;
    provide shipping.&amp;nbsp; Two provide secure message exchange.&amp;nbsp; One does so over Java Message Service (JMS), while&#xD;
    the other provides SOAP over HTTP. Business requirements only specify that customer information be kept private, and so&#xD;
    a secure message exchange is required. IT standards recommend that JMS not be used to a remote service, and so we have&#xD;
    narrowed down our choice.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following presents some of the technical implementations available currently for service registries.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>UDDI&lt;/b>; The web services standard registry, this has wide adoption and was intended to support both&#xD;
        development and integration time queries. However, the level of customization required to keep track of all of the&#xD;
        data associated with a service specification has certainly led to some questions about whether UDDI as it stands&#xD;
        today is enough to support the enterprise service portfolio we discuss here.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>RAS Repository&lt;/b>; The Reusable Asset Specification was intended to support a customizable meta-data&#xD;
        description for reusable assets, and does have a meta-data profile for web services. While it was not the intent&#xD;
        for RAS to provide a service portfolio, it would be possible to do so for development time meta-data, although it&#xD;
        is not currently appropriate for integration time queries.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Custom&lt;/b>; Many organizations, faced with these choices, have chosen to implement custom service repositories,&#xD;
        managing a set of meta-data or design documents for services at design time and associated web service artifacts&#xD;
        for implementation time. In most cases a separate UDDI repository is then used when deploying production services&#xD;
        for integration time queries.&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
