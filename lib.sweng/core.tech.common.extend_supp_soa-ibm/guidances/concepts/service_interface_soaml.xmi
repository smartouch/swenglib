<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-nKFwACr7S9qs05sB2JsFkg" name="service_interface_soaml,_N5e2oFbBEd6MCpkuB85p5g" guid="-nKFwACr7S9qs05sB2JsFkg" changeDate="2009-09-22T21:16:19.093-0700" version="7.5.0">
  <copyrightStatement href="uma://_4eYbIEcWEd6GBq2DuQ5crg#_6LLxwLNfEd6JDp2szLeSrA"/>
  <mainDescription>&lt;p>&#xD;
    Usage:&amp;nbsp; &quot;ServiceInterface&quot; stereotypes UML Class, Interface&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>A ServiceInterface defines the interface and responsibilities of a &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/participant_soaml_1A392457.html&quot; guid=&quot;_zL3kgFbAEd6MCpkuB85p5g&quot;>participant&lt;/a> to provide or consume a service. It is used as the type of a &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_point_soaml_E250D92A.html&quot; guid=&quot;_9jRdMFbAEd6MCpkuB85p5g&quot;>ServicePoint&lt;/a> or &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/request_point_soaml_DD83CF2.html&quot; guid=&quot;_5DYKcFbAEd6MCpkuB85p5g&quot;>RequestPoint&lt;/a>. A ServiceInterface is the means for specifying how a participant is to&#xD;
    interact to provide or consume a Service. A ServiceInterface&amp;nbsp;can include specific protocols, commands, and&#xD;
    information exchange by which actions are initiated and the result of the real world effects are made available as&#xD;
    specified through the functionality portion of a service. A ServiceInterface&amp;nbsp;can address the concepts associated&#xD;
    with ownership, ownership domains, actions communicated between legal peers, trust, business transactions, authority,&#xD;
    delegation, etc.&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>A ServicePoint or RequestPoint or role&amp;nbsp;can be typed by either a ServiceInterface or a simple UML2&#xD;
    Interface. In the latter case, there is no protocol associated with the Service. Consumers simply invoke the operations&#xD;
    of the Interface. A ServiceInterface&amp;nbsp;can also specify various protocols for using the functional capabilities&#xD;
    defined by the service interface. This provides reusable protocol definitions in different Participants providing or&#xD;
    consuming the same Service.&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>A ServiceInterface&amp;nbsp;can specify &quot;parts&quot; and &quot;owned behaviors&quot; to further define the responsibilities&#xD;
    of participants in the service. The parts of a ServiceInterface are typed by the Interfaces realized (provided) and&#xD;
    used (required) by the ServiceInterface.&amp;nbsp; They represent the potential consumers and providers of the functional&#xD;
    capabilities defined in those interfaces. The owned behaviors of the ServiceInterface specify how the functional&#xD;
    capabilities are to be used by consumers and implemented by providers. A ServiceInterface therefore represents a formal&#xD;
    agreement between consumer Requests and providers that&amp;nbsp;can be used to match needs and capabilities.&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>A service interface might itself have service points or request points that define more granular&#xD;
    services that serve to make up a larger composite service. This allows &quot;enterprise scale&quot; services to be composed from&#xD;
    multiple, smaller services. Internal to a participant, connections can be made for the entire service or any one of the&#xD;
    subservices, allowing delegation of responsibility for specific parts of the service contract.&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>A ServiceInterface&amp;nbsp;can fulfill zero or one ServiceContracts by binding the parts of the service&#xD;
    contract to the ServiceInterface. Fulfilled contracts&amp;nbsp;can define the functional and nonfunctional requirements for&#xD;
    the service interface, the objectives that are intended to be fulfilled by providers of the service, and the value to&#xD;
    consumers. In all cases, the specifications of the ServiceContract and the ServiceInterface must not be in&#xD;
    conflict.&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>There is&amp;nbsp;a stylistic difference between specifying service roles and behavior inside&#xD;
    of a service interface or in a service contract. In general, the service contract is used for more involved services,&#xD;
    such as &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend-ibm/guidances/termdefinitions/composite_service_2B492DE6.html&quot; guid=&quot;_Hm7qcIQnEd6pOcahJ5wBfA&quot;>composite services&lt;/a>,&amp;nbsp;and where a service architecture is being defined.&amp;nbsp;&#xD;
    &quot;Standalone&quot; service interfaces with locally-defined behaviors&amp;nbsp;can be used for context independent services.&#xD;
    However, there is some overlap in specification capability, and either or both&amp;nbsp;can be used in some&#xD;
    cases.&lt;/font>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;3&quot;>&lt;strong>Semantics&lt;/strong>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>A ServiceInterface defines a semantic interface to a Service or&#xD;
    Request.&amp;nbsp;It defines&amp;nbsp;the structural and behavioral semantics of the service necessary for consumers to&#xD;
    determine if a service typed by a ServiceInterface meets their needs.&amp;nbsp; It also defines what consumers and&#xD;
    providers must do to carry out the service. A ServiceInterface defines the information shown in&amp;nbsp;the following&#xD;
    table.&amp;nbsp; All the information listed below is not required for every ServiceInterface.&lt;/font>&lt;/font>&lt;/font>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br />&#xD;
&lt;table title=&quot;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;85%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th id=&quot;&quot; scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Function&#xD;
            &lt;/th>&#xD;
            &lt;th id=&quot;&quot; scope=&quot;col&quot; abbr=&quot;&quot;>&#xD;
                Metadata&#xD;
            &lt;/th>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>An indication of what the service does or is about&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>The ServiceInterface name&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>The service defined by the ServiceInterface that will be provided by any Participant&#xD;
                    having a Service typed by the ServiceInterface, or used by a Participant having a Request typed by the&#xD;
                    ServiceInterface.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>The provided Interfaces containing Operations modeling the capabilities. As in UML2,&#xD;
                    provided interfaces are designated using an InterfaceRealization between the ServiceInterface and other&#xD;
                    Interfaces.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>Any service interaction consumers are expected to provide or consume in order to use or&#xD;
                    interact with a Service typed by this ServiceInterface.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>Required Interfaces containing Operations modeling the needs. As in UML2,&#xD;
                    required interfaces are designated using a Usage between the ServiceInterface and other&#xD;
                    Interfaces.&lt;/font>&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>The detailed specification of an interaction providing value as part of a&#xD;
                    service including:&lt;/font>&lt;/font>&#xD;
                &lt;/p>&#xD;
                &lt;ol>&#xD;
                    &lt;li>&#xD;
                        &lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>Its name, often a verb phrase indicating what it does.&lt;/font>&lt;/font>&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        &lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>Any required or optional service data inputs and&#xD;
                        outputs.&lt;/font>&lt;/font>&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        &lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>Any preconditions consumers are expected to meet before using the&#xD;
                        capability.&lt;/font>&lt;/font>&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        &lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>Any post conditions consumers participants can expect, and other&#xD;
                        providers must provide upon successful use of the service.&lt;/font>&lt;/font>&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        &lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>Any exceptions or fault conditions that might be raised if the&#xD;
                        capability cannot be provided for some reason even though the preconditions have been&#xD;
                        met.&lt;/font>&lt;/font>&#xD;
                    &lt;/li>&#xD;
                &lt;/ol>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>Each atomic interaction of a ServiceInterface is modeled as an Operation or event&#xD;
                    reception in its provided or required Interfaces. From UML2, an Operation has Parameters defining its&#xD;
                    inputs and outputs, preconditions and post-conditions, and&amp;nbsp;can raise Exceptions. Operation&#xD;
                    Parameters&amp;nbsp;also can be typed by a MessageType.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>Any communication protocol or rules that determine when a consumer can use the&#xD;
                    capabilities or in what order.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>An ownedBehavior of the ServiceInterface. This behavior expresses the expected&#xD;
                    interaction between the consumers and providers of services typed by this ServiceInterface. The&#xD;
                    ownedBehavior could be any Behavior including Activity, Interaction, StateMachine,&#xD;
                    ProtocolStateMachine, or OpaqueBehavior.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>Requirements any implementer must meet when providing the service.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>This is the same ownedBehavior that defines the consumer protocol just viewed from an&#xD;
                    implementation rather than a usage perspective.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>Constraints that reflect what successful use of the service is intended to accomplish&#xD;
                    and how it would be evaluated.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>UML2 Constraints in ownedRules of the ServiceInterface.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>Policies for using the service such as security and transaction scopes for maintaining&#xD;
                    integrity or recovering from the inability to successfully perform the service or any required&#xD;
                    service.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>Policies&amp;nbsp;also can be expressed as constraints.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>Qualities of service consumers&amp;nbsp;can expect and providers are expected to provide&#xD;
                    such as: cost, availability, performance, footprint, suitability to the task, competitive information,&#xD;
                    etc.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>The OMG QoS specification&amp;nbsp;can be used to model qualities of service constraints for&#xD;
                    a ServiceInterface.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>A service composed of other services as a composite service.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;font size=&quot;2&quot;>Service point or request point ports on the service interface.&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>A ServiceInterface specifies its provided capabilities through InterfaceRealizations. A ServiceInterface&#xD;
    can realize any number of Interfaces. Some platform specific models might restrict the number of realized interfaces to&#xD;
    at most one. A ServiceInterface specifies its required needs through Usage dependences to Interfaces. These&#xD;
    realizations and usages are used to derive the provided and required interfaces of Request and Service ports typed by&#xD;
    the ServiceInterface.&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>The parts of a ServiceInterface are typed by the interfaces realized or used by the ServiceInterface.&#xD;
    These parts (or roles)&amp;nbsp;can be used in the ownedBehaviors to indicate how potential consumers and providers of the&#xD;
    service are expected to interact. A ServiceInterface&amp;nbsp;can specify communication protocols or behavioral rules&#xD;
    describing how its capabilities and needs must be used. These protocols&amp;nbsp;can be specified using any UML2&#xD;
    Behavior.&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>A ServiceInterface&amp;nbsp;can have ownedRules which determine the successful accomplishment of its service&#xD;
    goals. An ownedRule is a UML constraint within any namespace, such as a ServiceInterface.&lt;/font>&amp;nbsp;&lt;font     size=&quot;2&quot;>&lt;font size=&quot;2&quot;>&lt;br />&#xD;
    &amp;nbsp;&lt;/font>&lt;/font>&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
