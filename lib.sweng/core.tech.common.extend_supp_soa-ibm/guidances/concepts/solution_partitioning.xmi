<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-YZjsZ_b6cK42bH52evuShg" name="service_model_partitioning,_Ezt5QFIREd6lNtylJFsPIg" guid="-YZjsZ_b6cK42bH52evuShg" changeDate="2011-06-21T15:57:08.944-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    &lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;>Introduction&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Much has been written about the decomposition of software designs into components or subsystems. Much has also been&#xD;
    written about the need to understand the deployment topology required by an application early in its lifecycle so that&#xD;
    correct architectural decisions can be made. However, there are very few mechanisms identified or used today to&#xD;
    help&amp;nbsp;logically partition&amp;nbsp;a system during architectural analysis, so that decisions regarding the logical&#xD;
    topology of a solution and the constraints imposed by non-functional requirements can easily be addressed at the model&#xD;
    level before&amp;nbsp;detailed design and implementation work products are generated. The following discussion outlines a&#xD;
    set of simple model elements that support this reasoning. While they were developed with service-oriented solutions in&#xD;
    mind, these techniques are applicable to any software architecture modeling.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Partitions_and_Layers&quot; name=&quot;Partitions_and_Layers&quot;>Partitions and Layers&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The following definitions are taken from the Rational Unified Process (RUP) glossary and contrast the notions of layers&#xD;
    and partitions. Interestingly enough, the term &lt;i>tier&lt;/i>, while common in describing the logical architecture of a&#xD;
    solution, does not appear in the RUP glossary.&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;dl>&#xD;
        &lt;dt>&#xD;
            &lt;b>Layer&lt;/b>&#xD;
        &lt;/dt>&#xD;
        &lt;dd>&#xD;
            (1) A specific way of grouping &lt;i>packages&lt;/i> in a model at the same level of abstraction.&#xD;
        &lt;/dd>&#xD;
        &lt;dd>&#xD;
            (2) The organization of &lt;i>classifiers&lt;/i> or &lt;i>packages&lt;/i> at the same level of abstraction. A layer&#xD;
            represents a horizontal slice through an architecture, whereas a partition represents a vertical slice.&#xD;
        &lt;/dd>&#xD;
        &lt;dt>&#xD;
            &lt;b>Partition&lt;/b>&#xD;
        &lt;/dt>&#xD;
        &lt;dd>&#xD;
            (1) &lt;i>activity graphs&lt;/i>: A portion of an activity graph that organizes the responsibilities for actions. See&#xD;
            also: &lt;i>swimlane&lt;/i>.&#xD;
        &lt;/dd>&#xD;
        &lt;dd>&#xD;
            (2) &lt;i>architecture&lt;/i>: A subset of classifiers or packages at the same level of abstraction. A partition&#xD;
            represents a vertical slice through an architecture, whereas a layer represents a horizontal slice.&#xD;
        &lt;/dd>&#xD;
    &lt;/dl>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    So, a partition contains a set of elements representing some part of the architecture, but how does the &lt;i>Software&#xD;
    Architect&lt;/i> slice a model? The answer is deceptively simple: Partitions and layers are organizational constructs; at&#xD;
    an architectural level they only represent logical organization. So, what aspects of the organization of a solution do&#xD;
    you want to represent? For example, if the model view you are developing is concerned with security, then you might&#xD;
    want to represent Trust Zones [&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend-ibm/guidances/supportingmaterials/tech_references_17D34A60.html&quot;&#xD;
    guid=&quot;_OKj94D8iEd2AxfTL63EayA&quot;>JHN05&lt;/a>].&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    What can a partition represent?&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    As we said above, a partition&amp;nbsp;can be used to represent any particular organization concerns the&#xD;
    architect&amp;nbsp;wishes to focus on. The following are common views that are constructed in a model.&amp;nbsp;One key aspect&#xD;
    of partitions is that they do not imply ownership/containment, so a service&amp;nbsp;can appear in multiple partitions&#xD;
    simultaneously.&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;p>&#xD;
        &lt;b>Logical Solution Organization&lt;/b>; in this case the partitions represent the logical clustering of elements in a&#xD;
        given solution. For example, in a business application we might use partitions to represent the separation into&#xD;
        user interaction services, business services, and infrastructure services. Such a view corresponds more to the use&#xD;
        of layers in RUP to describe tiers of an application. However, as services are not easily layered in the same way&#xD;
        as a component or object-based solution, we use partitions. For more information on these service classifications,&#xD;
        see the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_portfolio_ED261230.html&quot;&#xD;
        guid=&quot;_qDmYcFbAEd6MCpkuB85p5g&quot;>Concept: Service Portfolio&lt;/a>.&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &lt;strong>The following figures are partitionings used to represent logical structure of a solution.&lt;/strong>&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &lt;strong>Figure 1. User Interaction Services&lt;/strong>&#xD;
    &lt;/p>&lt;img alt=&quot;User Interaction Services Partitioning&quot; src=&quot;resources/sol_part_1_ui.gif&quot; width=&quot;502&quot;&#xD;
    height=&quot;125&quot; />&lt;br />&#xD;
    &lt;p>&#xD;
        &lt;strong>Figure 2. Business Services&lt;/strong>&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &lt;img alt=&quot;Business Services Partitioning&quot; src=&quot;resources/sol_part_1_bus.gif&quot; width=&quot;458&quot; height=&quot;130&quot; />&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &lt;strong>Figure 3. Infrastructure Services&lt;/strong>&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &lt;img alt=&quot;Infrastructure Services Partitioning&quot; src=&quot;resources/sol_part_1_infra.gif&quot; width=&quot;410&quot; height=&quot;79&quot; />&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &amp;nbsp;&lt;b>High-Level Physical Distribution&lt;/b>; in this case, partitions&amp;nbsp;can be used to denote local versus&#xD;
        remote services, at least when physical distance imposes constraints on the architecture. For example, noting that&#xD;
        the customer, account, and order services are hosted in our primary data center and that the Electronic Data&#xD;
        Interchange (EDI) gateway is hosted in a secondary data center is important when we also discover that the&#xD;
        bandwidth connection between these centers is managed and we have to carefully control communication between these&#xD;
        partitions.&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;blockquote>&#xD;
    &lt;b>Business Application/Ownership Boundaries&lt;/b>; in this case, partitions are used to represent ownership of services&#xD;
    by a business area or by an application area. For example, we might denote that certain services are &quot;owned&quot; by Human&#xD;
    Resources, some by Sales, and some by Marketing. Now, while this is not an architectural concern, most projects have to&#xD;
    deal with aspects that do not involve technology or architecture, but the social and political aspects of the&#xD;
    organization. Partitions, in this respect,&amp;nbsp;enable us to see how the interaction between services crosses such&#xD;
    boundaries and might impact the development process by requiring stakeholder support for cross-organizational change.&#xD;
    In this case, business functional areas would form the categories for this model.&#xD;
&lt;/blockquote>&#xD;
&lt;blockquote>&#xD;
    &lt;p>&#xD;
        &lt;b>Business Process Boundaries&lt;/b>; in this case, we represent end-to-end process areas with partitions, in effect&#xD;
        grouping services by the processes they support.&amp;nbsp;Figure&amp;nbsp;4&amp;nbsp;contrasts the process view (shaded) with&#xD;
        the business systems view represented as the vertical bars. It is important in many cases to relate these two views&#xD;
        of services already deployed and services planned by a project.&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &lt;strong>Figure 4.&amp;nbsp; Process view of the organization vs. business organization view&lt;/strong>&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &amp;nbsp;&lt;img border=&quot;0&quot; alt=&quot;Diagram is described in the textual content.&quot;&#xD;
        src=&quot;./resources/co_soa_partitioning-04.gif&quot; width=&quot;409&quot; height=&quot;194&quot; />&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        To understand this&amp;nbsp;relationship between the vertical business area and the cross-business processes,&#xD;
        it&amp;nbsp;is important to understand how each business area provides services to the processes that actually run the&#xD;
        business. In respect to our example, this view regroups the services we identified earlier into new partitions as&#xD;
        shown in&amp;nbsp;the&amp;nbsp;following two figures: &lt;strong>Alternative services grouping, aligned by business&#xD;
        area.&lt;/strong>&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &lt;strong>Figure 5. Order&amp;nbsp;Management&lt;/strong>&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &lt;img alt=&quot;Order management&quot; src=&quot;resources/sol_part_2_om.gif&quot; width=&quot;264&quot; height=&quot;190&quot; />&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &lt;strong>Figure&amp;nbsp;6. CRM&lt;/strong>&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/p>&#xD;
    &lt;p>&#xD;
        &lt;img alt=&quot;CRM&quot; src=&quot;resources/sol_part_2_crm.gif&quot; width=&quot;246&quot;&#xD;
        height=&quot;202&quot; />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    &lt;a id=&quot;Service_Partitions&quot; name=&quot;Service_Partitions&quot;>&lt;strong>&lt;font size=&quot;4&quot;>Partitions in the Service&#xD;
    Model&lt;/font>&lt;/strong>&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_model_FC39652E.html&quot;&#xD;
    guid=&quot;_T-AiUEozEd6D_7XK49c0nw&quot;>Service Model&lt;/a>, a SoaML &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/participant_soaml_1A392457.html&quot;&#xD;
    guid=&quot;_zL3kgFbAEd6MCpkuB85p5g&quot;>Participant&lt;/a> can be used to&amp;nbsp;model&amp;nbsp;partitions.&amp;nbsp;A partition&amp;nbsp;can&#xD;
    contain not only instances of service Participants, but also instances of other partitions, and so&amp;nbsp;can be further&#xD;
    decomposed where appropriate. A service partition&amp;nbsp;can also specify one or more&amp;nbsp;ServicePoints.&amp;nbsp; In the&#xD;
    context of a partition, these ServicePoints often are known as service gateways. These gateways are themselves services&#xD;
    specifying the interface to a partition.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The order management process area is accessed by the same interface&amp;nbsp;as is&amp;nbsp;the order entry service provider in&#xD;
    the diagram above. We term this promoting the interface from the service out to the partition. Figure&amp;nbsp;7 depicts&#xD;
    this and shows how the order entry service provider communicates with the other services in the partition.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Figure 7.&amp;nbsp; Promoting a service interface out to the partition&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;./resources/sol_part_3.gif&quot; width=&quot;545&quot; height=&quot;381&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The partition's&amp;nbsp;service gateway&amp;nbsp;has&amp;nbsp;the ability to mediate communication bindings between clients on the&#xD;
    outside of a partition and services on the inside. This enables services to&amp;nbsp;deal only with certain protocol&#xD;
    bindings within a partition, for example to use a higher performance or more secure protocol within the boundaries and&#xD;
    to expose certain capabilities to clients over a different protocol. For more information see the&amp;nbsp;concept &lt;a&#xD;
    class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_mediation_203F5FA1.html&quot;&#xD;
    guid=&quot;_iEqOcGtlEd6dX9uDBR7y4Q&quot;>Service Mediation&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As the partitions are based on&amp;nbsp;UML 2.0 Composite Structures, there is no &quot;containment&quot; relationship between the&#xD;
    partition and the services.&amp;nbsp; It is possible, as we have shown above, to represent the same services in multiple&#xD;
    partitions or views. If this flexibility is tied to the capability of service gateways, the software architect and&#xD;
    designer can cluster services in logical groupings and allow service gateways to expose only relevant interfaces to&#xD;
    clients.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Strict_Partitions&quot; name=&quot;Strict_Partitions&quot;>Specifying Strict Partitions&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A strict partition is a partition where all services within the partition are accessed by clients/services outside the&#xD;
    partition through service gateways. This implies that the service partition has its own set of interfaces.&amp;nbsp; As&#xD;
    such, it can be viewed as a logical higher-level service provider. This is particularly useful for partitions that&#xD;
    represent either business application boundaries or business process boundaries. This representation&amp;nbsp;enables&#xD;
    designers to&amp;nbsp;specify the interfaces the process exposes to the rest of the business and to designate&amp;nbsp;which of&#xD;
    the services that support the process area are being made publicly available. The order-management partition above is a&#xD;
    strict partition, but the concept of &quot;strictness&quot; can only be assessed by evaluating a partition.&amp;nbsp; It is not a&#xD;
    property of the model element itself.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the example below, the partition on the left&amp;nbsp;can be considered strict because the client (outside the&#xD;
    partition) can only communicate with the order entry provider (within the partition) via a gateway.&amp;nbsp;The partition&#xD;
    shown on the right hand side of the diagram cannot be considered as a strict partition, as the client communicates&#xD;
    directly with the order entry provider inside the partition.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Figure 8. A strict partition&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img alt=&quot;&quot; src=&quot;./resources/co_soa_strict_partitions.gif&quot; width=&quot;470&quot; height=&quot;85&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is important to&amp;nbsp;realize that modeling of strict partitions, even the use of gateways at all, is optional and&#xD;
    should be considered simply as a tool that allows for the modeling of explicit communications between partitions&#xD;
    (whatever they themselves represent).&amp;nbsp; For many purposes the additional overhead might not be warranted.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
