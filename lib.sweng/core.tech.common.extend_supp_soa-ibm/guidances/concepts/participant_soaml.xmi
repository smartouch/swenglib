<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-32Gt8nPQjm3pBQuYlOmJLQ" name="participant_soaml,_zL3kgFbAEd6MCpkuB85p5g" guid="-32Gt8nPQjm3pBQuYlOmJLQ" changeDate="2009-09-21T20:32:22.734-0700" version="7.5.0">
  <copyrightStatement href="uma://_4eYbIEcWEd6GBq2DuQ5crg#_6LLxwLNfEd6JDp2szLeSrA"/>
  <mainDescription>&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>Usage:&amp;nbsp; &quot;Participant&quot; stereotypes UML Class, Component&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>A Participant represents some (possibly concrete) party or component that provides and/or consumes &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp-ibm/guidances/concepts/service_2D3C4FFE.html&quot; guid=&quot;_OMw8cEozEd6D_7XK49c0nw&quot;>services&lt;/a>.&amp;nbsp;Participants can represent people, organizations, or systems that&#xD;
    provide and/or use services. A Participant is a service provider if it offers a service. A Participant is a service&#xD;
    consumer if it uses a service.&amp;nbsp; A Participant can both provide or consume any number of services. Service consumer&#xD;
    and provider are roles Participants play.&amp;nbsp; A Participant can play&amp;nbsp;the role of provider in some services and&#xD;
    consumer in others.&amp;nbsp; Because most consumers and providers have both services and requests, Participant is used to&#xD;
    model both.&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>Participants have &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_point_soaml_E250D92A.html&quot; guid=&quot;_9jRdMFbAEd6MCpkuB85p5g&quot;>ServicePoint&lt;/a> and &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/request_point_soaml_DD83CF2.html&quot; guid=&quot;_5DYKcFbAEd6MCpkuB85p5g&quot;>RequestPoint&lt;/a> ports that are the interaction points where services are offered or&#xD;
    consumed, respectively.&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>A Participant can have&amp;nbsp;&lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/collaboration_use_soaml_CD661F65.html&quot; guid=&quot;_iLYT8GajEd65K8S2sWS35w&quot;>CollaborationUses&lt;/a> that indicate what &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_contract_soaml_E57B30D4.html&quot; guid=&quot;_IhtgsFbBEd6MCpkuB85p5g&quot;>ServiceContracts&lt;/a> and &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_architecture_soaml_22F25B9A.html&quot; guid=&quot;_wYQYkEo3Ed6D_7XK49c0nw&quot;>ServicesArchitectures&lt;/a> it fulfills.&amp;nbsp; The parts of a Participant, its services&#xD;
    and requests as well as other properties,&amp;nbsp;can be bound to the roles they play in these services architectures. A&#xD;
    concrete Participant&amp;nbsp;can realize any number of &quot;specification&quot; Participants (see UML2.x specification keyword and&#xD;
    specification components). The full scope of a SOA is realized when the relationship between Participants is described&#xD;
    using a services architecture. A services architecture shows how Participants work together for a purpose, providing&#xD;
    and using services.&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>&lt;font size=&quot;3&quot;>Semantics&lt;/font>&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>A Participant is an Agent, Person, Organization, Organizational Unit, or Component that provides and/or&#xD;
    consumes services through its Service and Request points. It represents a component that (if not a specification or&#xD;
    abstract) can be instantiated in some execution environment or organization and connected to other participants through&#xD;
    &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_channel_soaml_11F0BAA8.html&quot; guid=&quot;_pOTTMGaaEd65K8S2sWS35w&quot;>ServiceChannels&lt;/a> in order to provide its services. Participants might be&#xD;
    organizations or individuals (at the business level) or system components or agents (at the I.T. level). A Participant&#xD;
    implements each of its provided service operations. UML2 provides three possible ways a Participant&amp;nbsp;can implement&#xD;
    a service operation:&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        &lt;font size=&quot;2&quot;>Method: A provided service operation might be the specification of an ownedBehavior of the&#xD;
        Participant. The ownedBehavior is the method of the operation. When the operation is invoked by some other&#xD;
        participant through a ServiceChannel connecting its Request to this Participant's Service, the method is invoked&#xD;
        and runs in order to provide the service.&amp;nbsp; Any Behavior,&amp;nbsp;including Interaction, Activity, StateMachine,&#xD;
        ProtocolStateMachine, or OpaqueBehavior, can be used as the method of an Operation.&lt;/font>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;font size=&quot;2&quot;>Event Handling: A Participant might have already-running ownedBehaviors. These behaviors&amp;nbsp;can&#xD;
        have forked threads of control and&amp;nbsp;can contain AcceptEventActions or AcceptCallActions. An&#xD;
        AcceptEventAction&amp;nbsp;enables the Participant to respond to a triggered SignalEvent. An&#xD;
        AcceptCallAction&amp;nbsp;enables the Participant to respond to a CallEvent. These actions enable Participants to&#xD;
        control when they are willing to respond to an event or service request. Contrast with the method approach&amp;nbsp;for&#xD;
        implementing a service operation, where the consumer determines when the method will be invoked.&lt;/font>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>Delegation: A Participant&amp;nbsp;can delegate a service to a service provided by one of&#xD;
        its parts, or to a user. A part of a Participant can also delegate a Request to a Request of the containing&#xD;
        Participant. This allows Participants to be composed of other Participants or components, and control what Services&#xD;
        and R&lt;/font>&lt;/font>&lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>equests are exposed. Delegation is the pattern often used for&#xD;
        legacy wrapping in services implementations.&lt;/font>&lt;/font>&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>&lt;font size=&quot;2&quot;>SoaML does not constrain how a Particular participant implements its service operations.&#xD;
    A single Participant&amp;nbsp;can mix delegation, method behaviors, and accept event actions to implement its services. A&#xD;
    Participant might also use different kinds of behavior to implement operations of the same service or interface&#xD;
    provided through a service. Different concrete Participants&amp;nbsp;can realize or subclass the responsibilities of an&#xD;
    abstract participant.&lt;/font>&lt;/font>&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
