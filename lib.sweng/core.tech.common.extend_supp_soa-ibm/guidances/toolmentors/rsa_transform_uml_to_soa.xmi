<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-E1v3JEpuiuVJW4hwYrL_nw" name="rsa_transform_uml_to_soa,_XXFJQHLrEd6dsJb1-FWFSQ" guid="-E1v3JEpuiuVJW4hwYrL_nw" changeDate="2009-09-14T18:34:23.765-0700" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    &lt;strong>&lt;font size=&quot;4&quot;>Introduction&lt;/font>&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Rational Software Architect for WebSphere Software (henceforth &quot;RSA&quot;) provides an extensible&amp;nbsp;UML-to-SOA&#xD;
    transform.&amp;nbsp; The&amp;nbsp;productized implementation generates artifacts that are targeted for downstream consumption&#xD;
    by WebSphere Integration Developer version 6.0.2 or later, for&amp;nbsp;use in process choreography and service deployment&#xD;
    into WebSphere Process Server.&amp;nbsp; These artifacts include a set of Module and Library projects that&#xD;
    contain&amp;nbsp;SCDL artifacts, as well as referenced XML Schema Definition (XSD), Web Services Description Language&#xD;
    (WSDL), and Business Process Execution Language (&lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.bus.common.extend-ibm/guidances/termdefinitions/bpel_E0043DD7.html&quot; guid=&quot;_uv8g0IhaEd6oeZacNg1BdA&quot;>BPEL&lt;/a>) resources.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        See &lt;img height=&quot;16&quot; alt=&quot;&quot; src=&quot;./resources/helpbook.gif&quot; width=&quot;16&quot; />&amp;nbsp;&lt;em>Transforming UML models into&#xD;
        software services artifacts&lt;/em> for full information on the UML-to-SOA transform.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        See &lt;img height=&quot;16&quot; alt=&quot;&quot; src=&quot;./resources/helpbook.gif&quot; width=&quot;16&quot; />&amp;nbsp;&lt;em>UML-to-SOA transforms&lt;/em> for&#xD;
        essential information regarding:&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Valid transformation sources and targets&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Transformation output&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        See &lt;img height=&quot;16&quot; alt=&quot;&quot; src=&quot;./resources/helpbook.gif&quot; width=&quot;16&quot; />&amp;nbsp;&lt;em>UML-to-SCDL transforms&lt;/em> for&#xD;
        essential information on the UML-to-SCDL transform.&amp;nbsp; This is an internal transform, called by UML-to-SOA to&#xD;
        generate the WebSphere Integration Developer input artifacts.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        See&amp;nbsp; &lt;img height=&quot;16&quot; alt=&quot;&quot; src=&quot;./resources/helpbook.gif&quot; width=&quot;16&quot; />&amp;nbsp;&lt;em>Configuring&#xD;
        Transformations&lt;/em> for instruction as to how to create and configure a new UML-to-SOA transformation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        See &lt;img height=&quot;16&quot; alt=&quot;&quot; src=&quot;./resources/helpbook.gif&quot; width=&quot;16&quot; />&amp;nbsp;&lt;em>Running and rerunning UML-to-SOA&#xD;
        transformations&lt;/em>&amp;nbsp;for guidance regarding how to run a UML-to-SOA transformation.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;4&quot;>&lt;strong>BPEL Generation&lt;/strong>&lt;/font>&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The UML-to-SCDL transform calls an internal UML-to-BPEL transform, see&amp;nbsp;&lt;img height=&quot;16&quot; alt=&quot;&quot;     src=&quot;./resources/helpbook.gif&quot; width=&quot;16&quot; />&amp;nbsp;&lt;em>UML-to-BPEL transformations&lt;/em> for&#xD;
    details.&amp;nbsp;&amp;nbsp;This&amp;nbsp;generates BPEL for each service operation whose provider owns an Activity-based&#xD;
    description of the operation's implementation.&amp;nbsp; So, the generated BPEL is based upon&amp;nbsp;the IT&#xD;
    organization's&amp;nbsp;considerations as to how&amp;nbsp;each such operation&amp;nbsp;needs to&amp;nbsp;be realized.&amp;nbsp; An&#xD;
    integration developer who begins his&amp;nbsp;service choreography with this BPEL&amp;nbsp;largely will be relieved of the&#xD;
    responsibility of conceiving the IT solution to the business problem.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>&lt;font size=&quot;4&quot;>Considerations for Modeling&amp;nbsp;Elements in UML Activities&lt;/font>&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See the Help topics, &lt;img height=&quot;16&quot; alt=&quot;&quot; src=&quot;./resources/helpbook.gif&quot; width=&quot;16&quot; />&amp;nbsp;&lt;em>Considerations for&#xD;
    modeling&amp;nbsp;elements in UML Activities&lt;/em> and&amp;nbsp; &lt;img height=&quot;16&quot; alt=&quot;&quot; src=&quot;./resources/helpbook.gif&quot;     width=&quot;16&quot; />&amp;nbsp;&lt;em>Interpretation of UML elements by UML-to-BPEL transformations,&lt;/em>&amp;nbsp;to understand the&#xD;
    requirements for Activity models that are intended to be the source for BPEL generation.&amp;nbsp; For a detailed example&#xD;
    of an Activity diagram that can be used to successfully generate BPEL, examine the sample service model that is&#xD;
    provided with &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/examples/soaml_design_model_sample_83612289.html&quot; guid=&quot;_AfQisHNIEd6va-EJWoOsvg&quot;>Example: Sample SoaML Design Model&lt;/a>&amp;nbsp;and see the OrderProcessor's Activity for&#xD;
    the processPurchaseOrder operation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Here are some modeling points that are easy to miss:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The Activity's Specification property --&amp;nbsp;reachable&amp;nbsp;using the General tab of its Properties View -- must&#xD;
        be set to the operation it is describing.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Activity needs to own Activity Parameter Nodes that are set to the parameters and return type of the operation&#xD;
        it is describing. With the Activity diagram being open, create these nodes using the diagram palette.&amp;nbsp; Apply&#xD;
        the nodes to the outer border of the diagram.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;p>&#xD;
            The name of each input pin and output pin that is associated with a call operation action or an accept call&#xD;
            action, except the target input pin and the return information of the action, is the name of either an activity&#xD;
            parameter or a property.&amp;nbsp;&#xD;
        &lt;/p>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    If you examine the processPurchaseOrder Activity, you will note that&amp;nbsp;its collective Call Operation Actions and&#xD;
    Accept Call Actions&amp;nbsp;used five data elements as action parameters, three of which are&amp;nbsp;satisfied by the&#xD;
    parameters of the Activity.&amp;nbsp; The other two data elements -- a Schedule and a Manifest -- were added to the&#xD;
    Activity as Data Store Nodes, to satisfy the third point that is listed above.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
