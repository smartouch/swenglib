<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-R6AoOUwbJLgAHbe1JRuQOQ" name="pattern_07_service_enable_non_service_oriented_legacy,_wgdUYH8TEd6EC8v3b_fCaQ" guid="-R6AoOUwbJLgAHbe1JRuQOQ" changeDate="2009-10-06T22:34:54.625-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Context&#xD;
&lt;/h3>SOA is a relatively new way of building software systems. All enterprises have a large amount of&amp;nbsp;legacy systems,&#xD;
application, or solutions that are not service-oriented (SO).&lt;br />&#xD;
&lt;h3>&#xD;
    Problem&#xD;
&lt;/h3>There is no clear way to achieve effective application or method level integration with non-SO legacy.&lt;br />&#xD;
&lt;h3>&#xD;
    Forces&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The communication technology options for integrating with these systems&amp;nbsp;can differ wildly, and using these&#xD;
        technologies requires specialist development skills.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Building point-to-point integrations with these systems from each of the service components that have to integrate&#xD;
        with them is inefficient because integration code is duplicated.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Solution&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Service-enable non-SO&amp;nbsp;legacy using a special kind of service-Integration services.&amp;nbsp; Integration services are&#xD;
    specified using the same kind of artifacts as&amp;nbsp;other services. However:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The service specification for an integration service needs to be a service-based interpretation of a&#xD;
        distinguishable interface (or similar) that exists on the non-SO system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This interpretation&amp;nbsp;needs to&amp;nbsp;be as literal as possible.&amp;nbsp;It should be as similar to the existing&#xD;
        interface as is possible.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The implementation of the integration service uses an appropriate communication technology to talk to the non-SO&#xD;
        system (for example, CICS). This is hidden from consumers of the service who only have to deal with the service&#xD;
        using the standard service communications technology in use.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Position these integration services&amp;nbsp;in the Operational Systems layer of the &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/soa_solution_stack_1DD21069.html&quot; guid=&quot;_PlxhEGWuEd6Zd-lbA790BQ&quot;>SOA Solution Stack&lt;/a> reference architecture.&amp;nbsp; These integration services are&#xD;
        called from atomic services in the Services layer of that reference architecture.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The data owned by the non-SO system&amp;nbsp;needs to&amp;nbsp;be owned by an atomic business application service provider.&#xD;
        This means that the integration service itself becomes part of the implementation of the atomic business&#xD;
        application service provider that owns its data&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Rationale&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Wrapping non-SO&amp;nbsp;legacy using integration services allows us to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Isolate the areas in our software that are implemented using the kind of specialist communication technologies&#xD;
        required to integrate with non-SO systems. Even if these technologies are not specialist as such,&amp;nbsp;most are&#xD;
        different&amp;nbsp;from the ones used to communicate inside your service architecture between your service consumers&#xD;
        and providers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Define clear reuse points for integration logic.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Important Note&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    This pattern only talks about one&amp;nbsp;way&amp;nbsp;of &quot;service-enabling&quot; non &quot;service-oriented&quot; legacy: Using integration&#xD;
    services. There are other&amp;nbsp;patterns and techniques&amp;nbsp;to go about this, such as Enterprise Service Bus (ESB)&#xD;
    architectural patterns and enterprise modernization techniques.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
