<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1">
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-aXbjp3zzCZwiLNgsDuoHrw" name="Security Vulnerability Assessment - Auditor,_hI8c0TyYEd2Am8Mv_CHShg" guid="-aXbjp3zzCZwiLNgsDuoHrw" version="7.5.0"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uUlmSQssi_zYZOMY_YvC8A" name="develop_security_test_policy,_jVUNwDyYEd2Am8Mv_CHShg" guid="-uUlmSQssi_zYZOMY_YvC8A">
    <refinedDescription>&lt;p>&#xD;
    In this context, a Test Policy describes the types of tests to perform to test a Web application for security&#xD;
    vulnerabilities. The types of tests included in a test policy depend on the vulnerability assessment objectives,&#xD;
    and on the role of the person performing the assessment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For example, a Security Lead may decide to focus on addressing some key, high severity issues first. She will&#xD;
    then include in the test policy only tests for those types of issues. The user performing a vulnerability assessment&#xD;
    has to be able to act on the results (that is, he has to have that necessary skill set to address the discovered security&#xD;
    issues. A test policy for a security auditor should be comprehensive and include both infrastructure and application&#xD;
    tests). A test policy for developers should include only some key application tests that are easy for developers to&#xD;
    understand and address (for instance, SQL Injection and Cross-Site Scripting).&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OgbxzHSG182ooRNR4raX8A" name="security_test_policy,_jVUNwjyYEd2Am8Mv_CHShg" guid="-OgbxzHSG182ooRNR4raX8A">
    <refinedDescription>&lt;p> The policy should include the following information, organized by role (Security &#xD;
  Auditor, Tester, Developer): &lt;/p>&#xD;
&lt;ul>&#xD;
  &lt;li> Test environment &lt;/li>&#xD;
  &lt;li> Test approach, techniques, processes &lt;/li>&#xD;
  &lt;li> Automated tests to perform &#xD;
    &lt;ul>&#xD;
      &lt;li> Application &lt;/li>&#xD;
      &lt;li> Infrastructure &lt;/li>&#xD;
      &lt;li> Noninvasive &lt;/li>&#xD;
      &lt;li> Invasive &lt;/li>&#xD;
      &lt;li> Custom &lt;/li>&#xD;
    &lt;/ul>&#xD;
  &lt;/li>&#xD;
  &lt;li> Manual tests to perform &lt;/li>&#xD;
  &lt;li> Vulnerabilities to exploit &lt;/li>&#xD;
  &lt;li> Vulnerability prioritization criteria &lt;/li>&#xD;
  &lt;li> Reports to generate &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qLqmXNQgdBQUyVsH27OX-A" name="develop_security_test_plan,_kDp6cDyYEd2Am8Mv_CHShg" guid="-qLqmXNQgdBQUyVsH27OX-A">
    <refinedDescription>&lt;p>&#xD;
    Before you start your Web application vulnerability assessment, you need to build a test plan. Building a test plan&#xD;
    starts with establishing your test target. Depending on your assignment, a test target could consist of a range of IP&#xD;
    addresses, a set of Web applications, or a single Web application. If your target is an IP address range, this means&#xD;
    that you have to identify all of the Web properties in the given range first, and then test each of them for security&#xD;
    vulnerabilities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Once you establish your target, you need to select your test environment. A security test could potentially deface or&#xD;
    destabilize a Web application. Therefore, it is highly recommended that you test a Web application in a pre-production&#xD;
    environment. If you need to test a Web application that is already in production, you must use only tests that are&#xD;
    safe.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Defining the test scope or the types of security tests that you will employ during your assessment depends on your&#xD;
    security test policy, your role, and the scope of your assignment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should also take into account any test restrictions. Perhaps you are testing in a production environment and, by&#xD;
    testing certain application functions, you run the risk of crashing the application. It is recommended that you speak&#xD;
    with the application owner and application developers to identify any potential risks and corresponding test&#xD;
    restrictions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    All application stakeholders should agree on the date and time of the vulnerability assessment. This is necessary to&#xD;
    ensure that the test has minimal impact on any of the stakeholders.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Most applications have some sort of a mechanism for identifying and authorizing their users. You will need access&#xD;
    credentials to test an application that requires its users to log in. It is best to create a special account for the&#xD;
    purposes of the test. After the test is completed, you can simply delete the account, which will make &quot;cleaning up&quot; a&#xD;
    lot easier. If the application supports multiple user roles, you may need to obtain an account for each user role.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Conducting a security assessment may involve exploiting vulnerabilities to prove the risks associated with them. Also,&#xD;
    as mentioned previously, security testing may have side effects (for example, crashing the application, inserting garbage data into&#xD;
    the database, and so on). Therefore, it is important to obtain an approval from all stakeholders before you begin testing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is recommended to obtain the contact information of key stakeholders who you may need to contact during your&#xD;
    assessment. For example, if the application crashes and you need to reboot the Web or application servers, you will&#xD;
    need to know who to contact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uMU3MTIrRE6XABC-FeA-Kw" name="analyze_target,_kymEEDyYEd2Am8Mv_CHShg" guid="-uMU3MTIrRE6XABC-FeA-Kw">
    <refinedDescription>&lt;p>&#xD;
    Conducting a thorough security assessment requires that you obtain a certain degree of understanding about the Web&#xD;
    application that you plan to test. Knowing something about the architecture of the application and its functionality will go&#xD;
    a long way toward ensuring a successful assessment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In some cases, your assignment may have a broader scope. You may be given a range of IP addresses and required to&#xD;
    assess if there are any Web properties on that range that expose the organization to a security risk. If that is the&#xD;
    case, you will have to identify all of the hosts of Web properties (applications) on the given IP range. There are&#xD;
    different tools and techniques for doing this. Security auditors often utilize port scanners for this task.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In other cases, your assignment may include testing only several or a single Web application. It is generally&#xD;
    recommended that you request a walk-through of the application by one of its developers.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Here are some examples of what you need to learn about an application:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Application hosts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Web server type&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Web technologies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Authentication and authorization mechanisms&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Login management details (for instance, concurrent logins and logout links)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Session state implementation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Application functions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Areas that require user input&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GA-ijczWKTXLeolyLjuKTw" name="conduct_security_assessment,_wPI_4DyYEd2Am8Mv_CHShg" guid="-GA-ijczWKTXLeolyLjuKTw">
    <refinedDescription>&lt;p>&#xD;
    Conducting a Web application vulnerability assessment is both a science and an art. The way you approach it will depend&#xD;
    on your objectives, your security test policy, and your skill level. There are many different tools and techniques that&#xD;
    can be employed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Automated security testing tools alleviate a lot of the tedious work involved in security testing. Also, automated&#xD;
    tools enable developers and QA specialists who are not security experts to perform vulnerability assessments of their&#xD;
    Web applications.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If you are using an automated tool, your first step will be to configure your security scan based on your test policy&#xD;
    and the characteristics of your test target. After running the scan, you will need to verify each finding and remove&#xD;
    false positives.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Skilled security auditors may choose to perform additional manual tests, which were not covered by the automated&#xD;
    scanner.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Sometimes, security testers face a challenge when communicating their findings to application owners and developers, because&#xD;
    their reports of vulnerabilities might be met with a degree of skepticism. In some cases, the security testers might&#xD;
    need to exploit certain key vulnerabilities, so that they can demonstrate the threat to the application stakeholders.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Furthermore, during the process of exploiting identified security vulnerabilities, a security auditor could find&#xD;
    additional vulnerabilities.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-J84SxEcQ_gtqwIZxhHBh5g" name="evaluate_security_risks,_xIzy0DyYEd2Am8Mv_CHShg" guid="-J84SxEcQ_gtqwIZxhHBh5g">
    <refinedDescription>&lt;p>&#xD;
    Some Web application vulnerabilities expose an organization to higher risk than others. It is important to evaluate the&#xD;
    risks associated with each vulnerability in order to prioritize their resolution. For example, a vulnerability that is&#xD;
    easy to discover and exploit (and would allow an attacker to steal sensitive user data or crash the application) should&#xD;
    be fixed before a vulnerability that is very difficult to discover, takes a very highly skilled attacker, and has a low&#xD;
    damage potential.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are different methodologies for evaluating the risks associated with security vulnerabilities. These&#xD;
    methodologies typically take into account factors such as ease of discovery, time to exploit, attacker skill level, and&#xD;
    so on.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Once you have evaluated the security risks, you should rank the vulnerabilities, and then create a list starting with&#xD;
    the highest priority ones on the top.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ARQBRySXqWjMXy4WFVN82Q" name="build_reports,_yAY7EDyYEd2Am8Mv_CHShg" guid="-ARQBRySXqWjMXy4WFVN82Q">
    <refinedDescription>&lt;p>&#xD;
    This task begins with identifying all of the stakeholders, and the type of information that each needs. For example, a Chief Security&#xD;
    Officer would be interested in knowing the security risk associated with the discovered vulnerabilities. A Compliance&#xD;
    Officer would be interested to know how the discovered security issues affect your organization's compliance with&#xD;
    particular government or industry standards. Developers would need to know the technical details about the discovered&#xD;
    vulnerabilities and, if possible, the steps they need to take to fix them.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Once you have all of the reports ready, you should present them to the different stakeholders.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DQUL8rq1bolhRezd-YG3_w" name="refine_security_policy,_4QfAIDyYEd2Am8Mv_CHShg" guid="-DQUL8rq1bolhRezd-YG3_w">
    <refinedDescription>&lt;p>&#xD;
    In this context, a Test Policy describes the types of tests to perform to test a Web application for security&#xD;
    vulnerabilities. The types of tests included in a test policy depend on the vulnerability assessment objectives,&#xD;
    and on the role of the person performing the assessment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For example, a Security Lead may decide to focus on addressing some key, high severity issues first. She will&#xD;
    then include in the test policy only tests for those types of issues. The user performing a vulnerability assessment&#xD;
    has to be able to act on the results (that is, he has to have that necessary skill set to address the discovered security&#xD;
    issues. A test policy for a security auditor should be comprehensive and include both infrastructure and application&#xD;
    tests). A test policy for developers should include only some key application tests that are easy for developers to&#xD;
    understand and address (for instance, SQL Injection and Cross-Site Scripting).&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KUDWh3kYFJIj9LqQbdwzZQ" name="refine_security_test_plan,_VrGEADyZEd2Am8Mv_CHShg" guid="-KUDWh3kYFJIj9LqQbdwzZQ">
    <refinedDescription>&lt;p>&#xD;
    Before you start your Web application vulnerability assessment, you need to build a test plan. Building a test plan&#xD;
    starts with establishing your test target. Depending on your assignment, a test target could consist of a range of IP&#xD;
    addresses, a set of Web applications, or a single Web application. If your target is an IP address range, this means&#xD;
    that you have to identify all of the Web properties in the given range first, and then test each of them for security&#xD;
    vulnerabilities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Once you establish your target, you need to select your test environment. A security test could potentially deface or&#xD;
    destabilize a Web application. Therefore, it is highly recommended that you test a Web application in a pre-production&#xD;
    environment. If you need to test a Web application that is already in production, you must use only tests that are&#xD;
    safe.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Defining the test scope or the types of security tests that you will employ during your assessment depends on your&#xD;
    security test policy, your role, and the scope of your assignment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should also take into account any test restrictions. Perhaps you are testing in a production environment and, by&#xD;
    testing certain application functions, you run the risk of crashing the application. It is recommended that you speak&#xD;
    with the application owner and application developers to identify any potential risks and corresponding test&#xD;
    restrictions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    All application stakeholders should agree on the date and time of the vulnerability assessment. This is necessary to&#xD;
    ensure that the test has minimal impact on any of the stakeholders.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Most applications have some sort of a mechanism for identifying and authorizing their users. You will need access&#xD;
    credentials to test an application that requires its users to log in. It is best to create a special account for the&#xD;
    purposes of the test. After the test is completed, you can simply delete the account, which will make &quot;cleaning up&quot; a&#xD;
    lot easier. If the application supports multiple user roles, you may need to obtain an account for each user role.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Conducting a security assessment may involve exploiting vulnerabilities to prove the risks associated with them. Also,&#xD;
    as mentioned previously, security testing may have side effects (for example, crashing the application, inserting garbage data into&#xD;
    the database, and so on). Therefore, it is important to obtain an approval from all stakeholders before you begin testing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is recommended to obtain the contact information of key stakeholders who you may need to contact during your&#xD;
    assessment. For example, if the application crashes and you need to reboot the Web or application servers, you will&#xD;
    need to know who to contact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WPRuFQa1F0ph_kAsqN0Iqg" name="test_plan,_K_oAYEk9Ed2xQrTvzKDpNQ" guid="-WPRuFQa1F0ph_kAsqN0Iqg">
    <refinedDescription>&lt;p>&#xD;
    The Test Plan forms the framework within which the team performing the testing will work for the given schedule. It&#xD;
    directs, guides, and constrains the test effort, focusing the work on the useful and necessary deliverables. It also&#xD;
    communicates the intent of the effort to stakeholders. As such, the Test Plan should avoid detail that would not be&#xD;
    understood, or would be considered irrelevant by the stakeholders in the test effort.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In cultures or domains in which this work product is not recognized as a formal work product, it is still important to&#xD;
    address the different aspects represented by the Test Plan as part of the planning effort, and make appropriate&#xD;
    decisions about what testing will be undertaken, and how the test effort will be conducted.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tIQQj8igK1-qCO1gS5XG-w" name="test_findings,_WPYn8Ek-Ed2Rkvxo29Uglw" guid="-tIQQj8igK1-qCO1gS5XG-w">
    <refinedDescription>Test Findings are sometimes a large set of many Test Findings.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
</xmi:XMI>
