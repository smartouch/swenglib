<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-XJ6SwVMbvWtrf_Zl6zwzNQ" name="technical_proof_of_concept,_C5b_8DDIEdyz_pzDMsV8FQ" guid="-XJ6SwVMbvWtrf_Zl6zwzNQ" changeDate="2010-07-27T10:28:31.642-0700" version="v.2">
  <mainDescription>&lt;p>&#xD;
    A Technical Proof-of-Concept may take many forms, for example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        a list of known technologies (frameworks, patterns, executable architectures) which seem appropriate to the&#xD;
        solution&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        a sketch of a conceptual model of a solution using a notation such as UML&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        a simulation of a solution&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        an executable prototype&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The Technical Proof of Concept typically addresses any new or challenging technical aspects of a proposed design. It&#xD;
    may be needed for a number of reasons:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        To assess the technical viability of the design of a specific component&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To assess a specific area of the application from a usability perspective&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To collect key technical information regarding the service-level characteristics of the entire solution as&#xD;
        documented in the Operational Model: Unsized, or of a specific component within that planned solution&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To verify the compatibility of a component with other parts of the solution&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        And many others&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Technical Proofs of Concept often involve the construction of partial or complete systems from hardware and software,&#xD;
    or the development of application or technical code. The earlier a Technical Proof of Concept is built, the better. It&#xD;
    will usually be developed during the early stages of a project, and will involve an early build of the component, or&#xD;
    components, under investigation. It quickly addresses the particular characteristics to be investigated for the&#xD;
    component.&lt;br />&#xD;
&lt;/p></mainDescription>
  <keyConsiderations>&lt;p>&#xD;
    When considering whether or not to create a Technical Proof of Concept, it is advisable to consider the&#xD;
    following: &#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The cost associated with developing a Technical Proof of Concept is generally not small, since it produces&#xD;
        executable code itself; therefore, the cost must be seriously weighed against the expected benefits.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Since only certain high risk components are validated in a Technical Proof of Concept, and it in itself may not go&#xD;
        through formal design and build cycles, it is not intended for a Technical Proof of Concept to grow into the&#xD;
        project's overall solution. Highly-focused components may be used in the solution, but a Technical Proof of&#xD;
        Concept must not become the foundation of the solution.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  <purpose>&lt;p>&#xD;
    The purpose of a Technical Proof of Concept is to explore a technology new to the project team, or to resolve a&#xD;
    significant technical issue within the design. For each release (or build cycle), there may be areas of&#xD;
    uncertainty for which you may decide to build a Technical Proof of Concept. The findings and experience gained&#xD;
    from building a Technical Proof of Concept not only benefit the current project, but potentially future projects facing&#xD;
    similar situations.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In addition to its primary goal of resolving key technical issues, a Technical Proof of Concept may also point to other&#xD;
    issues, or shed a light on complementary issues.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A Technical Proof of Concept is only developed when needed. Many projects do not need to construct one. &#xD;
    However, if the suitability or performance characteristics of any proposed component is in question, and information is&#xD;
    not available from another source (for example, a Technical Proof of Concept from a previous project), then developing a&#xD;
    Technical Proof of Concept should be considered.&#xD;
&lt;/p></purpose>
  <impactOfNotHaving>A Technical Proof of Concept is built as needed. Many projects do not need one. However, if a project has areas&#xD;
of technical uncertainty or technical risk, then a Technical Proof of Concept should be seriously considered. Without&#xD;
it, there is increased risk of encountering technical problems at the end of the project. The primary goal of this&#xD;
work product is to lessen the risk of failure due to unforeseen technical problems.</impactOfNotHaving>
  <reasonsForNotNeeding>The project may not have areas of technical uncertainty or risk. It may be composed of tried, tested, and understood&#xD;
technology, or reliable technical data may be available for the performance characteristics of the proposed components (for&#xD;
example, from the Technology Research activity). In these cases, a Technical Proof of Concept may not be&#xD;
necessary.</reasonsForNotNeeding>
  <representationOptions>&lt;p>&#xD;
    Generally, a Technical Proof of Concept will result in executable code and some findings.&lt;span     style=&quot;mso-spacerun: yes&quot;> &lt;/span> The representation for this varies as widely as the technology being proven.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Notation&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Because of the wide range of possible activities, including executable code, no specific notation applies.&#xD;
&lt;/p></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
