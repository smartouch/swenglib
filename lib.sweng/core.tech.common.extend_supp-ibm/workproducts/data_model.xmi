<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-GNe04Td1v1mfs45pafLkBg" name="data_model,_pEaKYDDBEdyz_pzDMsV8FQ" guid="-GNe04Td1v1mfs45pafLkBg" changeDate="2010-07-27T11:58:00.109-0700" version="1.0.0">
  <mainDescription>&lt;p>&#xD;
    The figure below illustrates that a data model has an association to an overall logical data design that is obtained&#xD;
    via the progression of the data model through different states - entity relationship model, conceptual data model, and&#xD;
    logical data model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;300&quot; alt=&quot;ERD - CDM - LDM transitions&quot; src=&quot;resources/ldm.gif&quot; width=&quot;399&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Though the above figure diagrammatically shows development of a logical data design as a cascading serious of steps,&#xD;
    the delineation between these steps is not that clear-cut.&amp;nbsp; In reality, a logical data design expands, contracts,&#xD;
    and interplays across these data model states throughout the development.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Entity Relationship Model (ERM)&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An ERM level of a logical data design presents a high-level view of the significant information of interest to the&#xD;
    business and establishes the foundation from which data design will progress.&amp;nbsp; It depicts the significant business&#xD;
    notions and concepts associated with an application as entities, potentially some elaboration as to the important&#xD;
    business characteristics of those notions/concepts via the attributes listed for each entity, and the relationship&#xD;
    between these business notions/concepts in the form or data relationships.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Conceptual Data Model (CDM)&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A CDM level of a logical data design depicts a high level statement of the main entities needed to support an&#xD;
    application, along with known (but not necessarily complete) listings of the attributes associated with the entities in&#xD;
    the data design.&amp;nbsp; It is an expansion of the information conveyed in the ERM level of a logical data model as&#xD;
    usually discovered via top-down analysis.&amp;nbsp; Development of a logical data design to a CDM level is closely&#xD;
    integrated with the development of&amp;nbsp; an application's process models.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Logical Data Model (LDM)&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A LDM is an implementation-independent data model and generally represents the final deliverable in the logical data&#xD;
    design efforts of a project.&amp;nbsp; Using the CDM as input, it reflects the dynamic nature of the entities in the&#xD;
    logical data design and optimizes the entities in the data model toward ensuring each strongly and uniquely represents&#xD;
    a business notion.&lt;br />&#xD;
    &lt;br />&#xD;
    &amp;nbsp;&#xD;
&lt;/p></mainDescription>
  <keyConsiderations>&lt;ul class=&quot;noindent&quot;>&#xD;
    &lt;li>&#xD;
        Focus on staying within the boundaries of the solution under development.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Any existing data models should be used as a starting point.&amp;nbsp; These models may be broad, enterprise models or&#xD;
        more specific application data models. If an existing model is used as a starting point, it should not be simply&#xD;
        accepted &quot;as is.&quot; Instead, some time should be invested to ensure that it is of sufficient quality and that it&#xD;
        provides an accurate representation of business data requirements for the solution.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Draw from standard data model constructs in shaping and forming the logical data model as they can assist in&#xD;
        providing a good framework from which the data details of the solution being developed can be initially understood&#xD;
        and further refined.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Database refactoring can be difficult, so it is important to balance how much future design is included in your&#xD;
        data model versus what is left for later refactoring.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The later instance of the model are typically normalized to third normal form.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  <purpose>&lt;p>&#xD;
    It serves the following purposes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Promotes understanding and communication between stakeholders and the database modeler&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Provides an implementation-free set of requirements as input to physical database design&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Validates the data stores and flows in a functional model against the analysis of data storage and processing needs&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
  <impactOfNotHaving>Without this artifact, stored business information is captured solely by a functional model which describes where data&#xD;
stores are created and placed to serve the data needs of the functional processes. There is no unified view of all data,&#xD;
and data normalization is not possible. The physical database design can only be developed from a functional model, leaving&#xD;
data ambiguities and redundancies resulting from the lack of normalization.&amp;nbsp; This leads to an inefficient physical&#xD;
database design which could be missing critical data or lead to inadvertent data duplication and inconsistency.</impactOfNotHaving>
  <reasonsForNotNeeding>&lt;p>&#xD;
    Some reasons for not needing:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The solution does not require a database.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The database is simple enough that no data models are needed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The database is simple enough that a physical database design can be based on the identified set of persistent&#xD;
        classes and their associations.&#xD;
    &lt;/li>&#xD;
&lt;/ul></reasonsForNotNeeding>
  <briefOutline>&lt;p>&#xD;
    This artifact typically includes the following constructs:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Entities&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Attributes &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Primary keys that can be used to uniquely identify entity occurrences&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Foreign keys&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Alternate keys&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Data types&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Valid values (domains)&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Relationships&#xD;
    &lt;/li>&#xD;
&lt;/ul></briefOutline>
  <representationOptions>&lt;p>&#xD;
    Informal data models can be created using whiteboards or drawing tools.&amp;nbsp;However, if the model needs to be&#xD;
    maintained, a data modeling tool is advised.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When selecting which data modeling notation should be used, consider the following pros and cons:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Information Engineering (IE) notation is a widely accepted standard for logical data models. Simple and concise, it&#xD;
        is very readable by even non-technical stakeholders. Some variations of this notation describe attributes in a&#xD;
        separate document rather than in the model itself.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Integration Definition for Information Modeling (IDEF1X) is a federal standard notation originally developed for&#xD;
        physical data modeling. It is very complex, and can result in models that are difficult to review with&#xD;
        stakeholders.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Unified Modeling Language (UML) does not have explicit data modeling constructs as part of its notation. Class&#xD;
        diagrams are frequently used for logical data modeling.&#xD;
    &lt;/li>&#xD;
&lt;/ul></representationOptions>
  <representation>&lt;p dir=&quot;ltr&quot;>&#xD;
    Rational Data Architect is used for developing the logical data model. Information Engineering (IE) notation is its&#xD;
    selected notation.&#xD;
&lt;/p></representation>
  <notation>&lt;p>&#xD;
    There are three commonly used logical data modeling notations. While they all reflect common data modeling concepts,&#xD;
    each has its own graphical syntax briefly described below.&amp;nbsp; For a more detailed description of these notations,&#xD;
    see the references.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Information Engineering (IE)&#xD;
&lt;/h4>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Entities are represented by a box with the entity name placed inside.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img&#xD;
     alt=&quot;IE Entity&quot; src=&quot;resources/ie_entity.gif&quot; width=&quot;127&quot;&#xD;
    height=&quot;68&quot; />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Attributes are handled differently according to the variation of IE used.&amp;nbsp; They can be described outside of&#xD;
        the model in&amp;nbsp;a separate document, or placed inside the entity box, with identifying attributes above a&#xD;
        horizontal line, and non-identifying attributes below it.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;img alt=&quot;IE Entity with Attributes&quot; src=&quot;resources/ie_entity_with_attributes.gif&quot; width=&quot;130&quot; height=&quot;127&quot; />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Relationships are described by a line between two entities. Solid lines indicate an identifying relationship, while&#xD;
        dashed lines indicate a non-identifying relationship. Terminating symbols on each end describe optionality and&#xD;
        cardinality rules.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img&#xD;
    alt=&quot;IE Relationships&quot; src=&quot;resources/ie_relationships.gif&quot; width=&quot;234&quot;&#xD;
    height=&quot;86&quot; />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;img&#xD;
    alt=&quot;IE Multiplicity&quot; src=&quot;resources/ie_multiplicity.gif&quot; width=&quot;162&quot; height=&quot;92&quot; />&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Integration Definition for Information Modeling (IDEF1X)&#xD;
&lt;/h4>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Entities are represented with square or round-cornered boxes. Round corners indicate dependence for identification&#xD;
        on another entity. Each entity is assigned a label which is placed above the box.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;img alt=&quot;IDEF1X Entity&quot; src=&quot;resources/idef1x_entity.gif&quot; width=&quot;252&quot; height=&quot;127&quot; />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        To include attributes, entity boxes are divided with identifying attributes appearing above the line, and&#xD;
        non-identifying attributes below it.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;img alt=&quot;IDEF1X Attributes&quot; src=&quot;resources/idef1x_attributes.gif&quot; width=&quot;150&quot; height=&quot;150&quot; />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Relationships between entities (connection relationships) are described with lines and terminating symbols. A solid&#xD;
        line indicates an identifying foreign key. Dashed lines indicate that it is non-identifying. There are a number of&#xD;
        terminating symbols that are combined to describe optionality and cardinality. These symbols cannot be interpreted&#xD;
        independently of each other. It is the combination that describes the rules.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;img alt=&quot;IDEF1X Relationships&quot; src=&quot;resources/idef1x_relationships.gif&quot; width=&quot;234&quot;&#xD;
    height=&quot;151&quot; />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img alt=&quot;IDEF1X Multiplicity&quot;&#xD;
    src=&quot;resources/idef1x_multiplicity.gif&quot; width=&quot;162&quot; height=&quot;151&quot; />&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    The Unified Modeling Language&#xD;
&lt;/h4>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Entities are represented by class boxes divided into three compartments.&amp;nbsp;The top compartment contains the name&#xD;
        of the class (entity), the middle compartment contains its attributes, and when present, the bottom compartment&#xD;
        contains behavioral descriptions.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img&#xD;
     alt=&quot;UML Class with Attributes&quot; src=&quot;resources/uml_class_attributes.gif&quot; width=&quot;115&quot; height=&quot;118&quot; />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Relationships between entities are described with UML associations&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img&#xD;
    alt=&quot;UML Relationships&quot; src=&quot;resources/uml_relationships.gif&quot; width=&quot;252&quot; height=&quot;92&quot; />&amp;nbsp;&amp;nbsp; &lt;img&#xD;
    alt=&quot;UML Multiplicity&quot; src=&quot;resources/uml_multiplicity.gif&quot; width=&quot;229&quot; height=&quot;108&quot; />&#xD;
&lt;/p></notation>
</org.eclipse.epf.uma:ArtifactDescription>
