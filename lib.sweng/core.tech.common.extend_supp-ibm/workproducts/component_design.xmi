<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-hEK_HkDnvybxd6kDixlUdQ" name="component_design,_31uc8M5FEdu7c6SGcTVf1A" guid="-hEK_HkDnvybxd6kDixlUdQ" changeDate="2009-08-07T17:42:08.553-0700" version="v.4">
  <mainDescription>&lt;p>&#xD;
    This artifact is a specification of the internal structure and behavior of one or more major structural elements&#xD;
    (components) of a system.&amp;nbsp; Each component realization describes the internal behaviors of a component that realize&#xD;
    its interfaces.&#xD;
&lt;/p></mainDescription>
  <keyConsiderations>&lt;p>&#xD;
    In circumstances where the design of a component involves applying well understood, existing strategies, it is possible&#xD;
    that you will not need a &lt;em>new&lt;/em> design. In those cases, you can simply refer to some existing design.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Decide on the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Properties to include&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Whether or not any extensions to the Unified Modeling Language (UML) are needed; for example, your project may&#xD;
        require additional stereotypes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The level of formality applied to the model&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        If the model is mapped to other models, such as an architectural models and how&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Whether a single model or multiple models will be used&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How the model is mapped to an implementation model (this is very much affected by the decision to use&#xD;
        reverse-engineering, code generation, or round-trip engineering); see Concept: Mapping from Code to Design&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  <purpose>&lt;p>&#xD;
    This artifact&amp;nbsp;serves as an abstraction of the implementation and technology choices and is also used to the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Conceive&amp;nbsp;and/or&amp;nbsp;document the design&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Establish traceability from the design back to the architecture as the component realizations described in this&#xD;
        artifact conform to their corresponding specifications in the architecture&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assist with the partitioning of work, particularly in large systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensure that design principles, patterns and mechanisms are applied in a consistent fashion&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Gain agreement before implementation or to document key aspects of the design after implementation, or both&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br />&#xD;
&lt;br /></purpose>
  <impactOfNotHaving>&lt;p>&#xD;
    The absence of this artifact may result in:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Incomplete specification of code with design decisions left undocumented and not easily recognizable from the&#xD;
        source code&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Poor extensibility and maintainability of components&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Incomplete coverage of objects, relationships, and constraints to the design&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Incomplete and erroneous realization of the interfaces required by the components of the system&#xD;
    &lt;/li>&#xD;
&lt;/ul></impactOfNotHaving>
  <reasonsForNotNeeding>&lt;p>&#xD;
    Reasons for not needing this artifact include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        There is no code or minimal code in this project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The implementation language is not an object-oriented language&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The project is configuring packaged products rather than developing custom components&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The design is expressed using another form, such as CRC cards&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The implementation is understandable without design documentation&#xD;
    &lt;/li>&#xD;
&lt;/ul></reasonsForNotNeeding>
  <briefOutline>&lt;p>&#xD;
    This artifact typically contains:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Overview and context information&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Design packages&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Component realizations&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Overview of the design, constraints, and goals for the component&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Key relationships between internal component elements&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Diagrams describing how the component's internal elements realize its specified interface operations&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Design-level collaborations focused around a particular set of requirements, for example, use case realizations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementation guidance&#xD;
    &lt;/li>&#xD;
&lt;/ul></briefOutline>
  <representationOptions>&lt;p>&#xD;
    &lt;font size=&quot;2&quot;>This artifact can be lightweight and informal, or substantial and formal according to the level of&#xD;
    design that should be documented for the project.&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Possible representations include the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;font size=&quot;2&quot;>Design documented directly in the code&lt;/font>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;font size=&quot;2&quot;>A visual model created in a tool like Rational Software Architect&lt;/font>&#xD;
    &lt;/li>&#xD;
&lt;/ul></representationOptions>
  <notation>&lt;p>&#xD;
    UML 2.0 provides the graphical notation and semantics for component design modeling. Key constructs and diagrams are&#xD;
    briefly described below.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Component&lt;/strong>&lt;br />&#xD;
    The black-box view of a component is represented in UML 2.0 as a rectangle with the name of the component inside. It&#xD;
    has a stereotype of &amp;lt;&amp;lt;component&amp;gt;&amp;gt; and can include a tabbed rectangle icon. It can include compartments for&#xD;
    interfaces as well as artifacts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;img alt=&quot;Black Box Component&quot; src=&quot;./resources/black_box_component.gif&quot; width=&quot;146&quot;     height=&quot;61&quot; />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img     alt=&quot;Black Box Component with Interface Compartments&quot; src=&quot;./resources/black_box_component_interface_compartments.gif&quot;     width=&quot;238&quot; height=&quot;127&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;strong>Figure 1: Black Box Component Representations&lt;/strong>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;p>&#xD;
    White-box component realizations can be represented a few ways depending on the complexity of the component or the&#xD;
    amount of documentation required.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The simplest approach is to add a compartment stereotyped &amp;lt;&amp;lt;realizations&amp;gt;&amp;gt; to the black-box component and&#xD;
    list the classifiers that realize it.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;img alt=&quot;White Box Component - simple representation&quot; src=&quot;./resources/white_box_component_simple.gif&quot; width=&quot;238&quot;     height=&quot;173&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;strong>Figure 2: White Box Component - Simple Representation&lt;/strong>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;p>&#xD;
    Another approach shows each classifier with a dependency to the component it realizes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img     alt=&quot;White box Component - showing dependencies&quot; src=&quot;./resources/white_box_component_medium.gif&quot; width=&quot;510&quot;     height=&quot;159&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &amp;nbsp;&lt;strong>Figure 3: White Box Component - Representation Showing Dependencies&lt;/strong>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;p>&#xD;
    When a detailed view of component internals is required, place the component's classifiers inside of the black-box&#xD;
    component rectangle.&amp;nbsp; Ports specify a point of interaction between the component and its environment and between&#xD;
    the component and its internal classifiers. Connectors map a port to the internal classifier that realizes the&#xD;
    functionality.&amp;nbsp; A connector is described by a solid line with a filled arrow from the port (a small square symbol)&#xD;
    to the classifier.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img     alt=&quot;White Box Component - complex representation&quot; src=&quot;./resources/white_box_component_complex.gif&quot; width=&quot;528&quot;     height=&quot;307&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;strong>Figure 4: White Box Component - Detailed Representation&lt;/strong>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;p>&#xD;
    For white-box views of very complex components you can create a separate class diagram that links to its component.&#xD;
    Note that components can be nested inside other components.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;p>&#xD;
    &lt;strong>Representing Static and Dynamic Aspects of a Component&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Class Diagram&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The static aspects of a component's internal design are described by UML class diagrams. The class diagram is a&#xD;
    structural representation of objects and their static relationships described using the following structuring&#xD;
    constructs:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Classes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &amp;nbsp;Attributes (representing the knowledge responsibilities or data)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Methods (representing operational responsibilities or functions)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Association relationships between classes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Aggregation relationships between aggregate and component classes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Inheritance relationships between superclasses and subclasses&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Formal or informal constraint descriptions&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;img alt=&quot;Class Diagram&quot; src=&quot;./resources/class_diagram.gif&quot; width=&quot;296&quot; height=&quot;314&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;strong>Figure 5: Class Diagram&lt;/strong>&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Interaction Diagram&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    The dynamic aspects of a component's internal design are described by UML interaction diagrams (sequence or&#xD;
    communication diagrams).&amp;nbsp; These diagrams show how the sequence of interactions between the component's internal&#xD;
    classifiers realizes its specified interfaces.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    Sequence diagrams are better for displaying and understanding the trace of messages or communication patterns.&#xD;
    Collaboration diagrams are better for displaying the relationships between the objects involved in the interaction.&#xD;
    Sequence diagrams tend to be the most common form of interaction diagram,&amp;nbsp;because&amp;nbsp;the goal of most&#xD;
    interaction diagrams is to describe communications rather than relationships.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img     alt=&quot;Collaboration Diagram&quot; src=&quot;./resources/collaboration_diagram.gif&quot; width=&quot;546&quot; height=&quot;299&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;strong>Figure 6:&amp;nbsp; Collaboration Diagram&lt;/strong>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br />&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img alt=&quot;Sequence Diagram&quot; src=&quot;./resources/sequence_diagram.gif&quot;     width=&quot;600&quot; height=&quot;246&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span     style=&quot;FONT-FAMILY: Arial; FONT-SIZE: 10pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;strong>Figure 7: Sequence Diagram&lt;/strong>&lt;/span>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br />&#xD;
&lt;p>&#xD;
    &lt;span     style=&quot;FONT-FAMILY: Arial; FONT-SIZE: 10pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>For&#xD;
    more notation information, see Guideline: &lt;a href=&quot;./../../core.tech.common.extend_supp-ibm/guidances/guidelines/component_design_modeling_333D845E.html&quot; guid=&quot;_-D22AApEEdyQC7HwSt7FXA&quot;>Component Design Modeling&lt;/a>&lt;/span>&amp;nbsp;&#xD;
&lt;/p></notation>
</org.eclipse.epf.uma:ArtifactDescription>
