<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-FiYNDC8DWofEza_XHyyBhw" name="class_diagram,4.2570304587974485E-305" guid="-FiYNDC8DWofEza_XHyyBhw" changeDate="2005-06-16T20:26:06.665-0700" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Explanation&quot; name=&quot;Explanation&quot;>Explanation&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Class diagrams show the static structure of the model (in particular, the things that exist, such as classes, their&#xD;
    internal structure, and their relationships to other classes). Class diagrams do not show temporal information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A class diagram is presented as a collection of (static) declarative model elements (such as classes, packages, and&#xD;
    their relationships), connected as a graph to each other and to their contents. Class diagrams may be organized into&#xD;
    (and owned by) packages, showing only what is relevant within a particular package.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Use&quot; name=&quot;Use&quot;>Use&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The following class structures are suitable for illustration in class diagrams, but you will not use all of them in all&#xD;
    situations.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The most important design subsystems, classes, interfaces, and their relationships. Diagrams of this type can&#xD;
        function as a design model summary, and are of great help in reviewing the model. These diagrams are likely to be&#xD;
        included in the logical view of the architecture.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Functionally related or coherent classes.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Classes that belong to the same package.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Important aggregation and generalization hierarchies.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Important structures of entity classes, including class structures with association, aggregation, and&#xD;
        generalization relationships. If possible, you should create a class diagram that contains all of the classes of&#xD;
        the long-lived objects and their relationships. This kind of diagram is especially useful in reviewing what is&#xD;
        stored in the system, and the storage structures.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Packages and their dependencies, possibly illustrating their layering.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Classes that participate in a specific use-case realization.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A single class, its attributes, operations, and relationships with other classes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    You should present each class in at least one diagram. Sometimes you can better understand the model if a class appears&#xD;
    several times in the same view (for example, if you want to discriminate between different objects of the class).&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
