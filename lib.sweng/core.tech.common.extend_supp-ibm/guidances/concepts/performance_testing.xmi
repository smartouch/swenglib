<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-Tm-nSDuQX8AkL8mnD8GqBw" name="performance_testing,_ovaQEHODEdyur-UVVhx-aQ" guid="-Tm-nSDuQX8AkL8mnD8GqBw" version="7.1.0">
  <mainDescription>&lt;p>&#xD;
    Performance testing is a class of tests implemented and executed to characterize and evaluate the performance-related&#xD;
    characteristics of the target-of-test, such as the timing profiles, execution flow, response times, and operational&#xD;
    reliability and limits. Different types of performance tests, each focused on a different test objective, are&#xD;
    implemented throughout the software development lifecycle (SDLC).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Early in the architecture iterations, performance tests are focused on identifying and eliminating&#xD;
    architectural-related performance bottlenecks. In the construction iterations, additional types of performance tests&#xD;
    are implemented and executed to fine-tune the software and environment (optimizing response time and resources), and to&#xD;
    verify that the applications and system acceptably handle high load and stress conditions, such as a large numbers of&#xD;
    transactions, clients, and/or volumes of data.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following types of tests are included in Performance Testing:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Benchmark testing:&lt;/b> Compares the performance of new or unknown target-of-test to a known reference standard,&#xD;
        such as existing software or measurements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Contention&lt;/b> &lt;b>test:&lt;/b> Verifies the target-of-test can acceptably handle multiple actor demands on the same&#xD;
        resource (data records, memory, and so forth).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Performance profiling:&lt;/b> Verifies the acceptability of the target-of-test's performance behavior using varying&#xD;
        configurations while the operational conditions remain constant.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Load testing:&lt;/b> Verifies the acceptability of the target-of-test's performance behavior under varying&#xD;
        operational conditions (such as number of users, number of transactions, and so on) while the configuration remains&#xD;
        constant.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Stress testing:&lt;/b> Verifies the acceptability of the target-of-test's performance behavior when abnormal or&#xD;
        extreme conditions are encountered, such as diminished resources or an extremely high number of users.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Performance evaluation is normally performed in conjunction with the &lt;i>User representative&lt;/i> and is done from a&#xD;
    multileveled approach.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The first level of performance analysis involves evaluating the results for a single actor or use-case instance and&#xD;
        comparing the results across several test executions; for example, capturing the performance behavior of a single&#xD;
        actor performing a single use case without any other activity on the target-of-test and comparing the results with&#xD;
        several other test executions of the same actor or use case. This first-level analysis can help identify trends&#xD;
        that could indicate contention among system resources, which may affect the validity of the conclusions drawn from&#xD;
        other performance test results.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A second level of analysis examines the summary statistics and actual data values for specific actor or use-case&#xD;
        execution, and the target-of-test's performance behavior. Summary statistics include standard deviations and&#xD;
        percentile distributions for the response times, which provide an indication of the variability in system responses&#xD;
        as seen by individual actors.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A third level of analysis can help in understanding the causes and significance of performance problems. This&#xD;
        detailed analysis takes the low-level data and uses statistical methods to help testers draw correct conclusions&#xD;
        from the data. Detailed analysis provides objective and quantitative criteria for making decisions, but it's more&#xD;
        time consuming and requires a basic understanding of statistics.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Detailed analysis uses the concept of &lt;i>statistical significance&lt;/i> to help understand when differences in&#xD;
    performance behavior are real or due to some random event associated with collecting the test data. The idea is that,&#xD;
    on a fundamental level, there is randomness associated with any event. Statistical testing determines whether there is&#xD;
    a systematic difference that can't be explained by random events.&lt;br />&#xD;
    &lt;br />&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
