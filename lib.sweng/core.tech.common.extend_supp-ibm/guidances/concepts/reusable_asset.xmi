<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-VSIq4FJvrQfGpczSX3vVxQ" name="new_concept,_S8L70ID3Ed2z9IawWqZSFw" guid="-VSIq4FJvrQfGpczSX3vVxQ" changeDate="2008-09-12T11:22:58.260-0700" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    A reusable software asset is any cohesive collection of artifacts that solves a specific problem or set of problems&#xD;
    encountered in the software development life cycle. A reusable asset is created with the intent of reuse.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The asset may have a variability point, which is a location in the asset that may have a value provided or customized&#xD;
    by the asset consumer. The asset has rules for usage, which are instructions describing how the asset should be used.&#xD;
    [OMG]&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Assets can be broadly categorized in terms of their level of implementation:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>No implementation.&lt;/strong> These assets have no implementation, and are represented in an abstract form&#xD;
        (such as a model or document). Such assets include architectural patterns, design patterns, architectural&#xD;
        mechanisms, architectural styles, and reference architectures.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Partial implementation.&lt;/strong> These assets are considered partial implementations, but have a&#xD;
        variability point and require additional elements before they can be instantiated. Such assets include frameworks&#xD;
        and packaged applications.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Complete implementation.&lt;/strong> These assets are considered to be complete implementations, and can be&#xD;
        instantiated as-is, without modification. Such assets include components, component libraries, and legacy systems.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The Reusable Asset Specification (RAS) defines a standard way to package reusable software assets. A reusable asset&#xD;
    packaged following this standard has a set of files that implement the solution, and a structured set of meta&#xD;
    information that defines and describes the reusable asset as a whole. The specification includes assets that are UML&#xD;
    models, source code, binary code, test cases, requirements, and so on.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information, see &lt;em>Understanding Architectural Assets&lt;/em>:&lt;br />&#xD;
    &lt;a href=&quot;http://www.ibm.com/developerworks/rational/library/sep07/eeles/index.html&quot; target=&quot;_blank&quot;>http://www.ibm.com/developerworks/rational/library/sep07/eeles/index.html&lt;/a>&lt;br />&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
