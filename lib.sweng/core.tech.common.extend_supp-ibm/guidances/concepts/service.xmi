<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-XIoOclutNw8sqG-UcTieVg" name="service,_OMw8cEozEd6D_7XK49c0nw" guid="-XIoOclutNw8sqG-UcTieVg" changeDate="2010-08-27T14:20:51.362-0700" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    A service is an offer of value to another through a well-defined interface.&amp;nbsp;A service results in work provided to&#xD;
    one by another.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Several organizations provide formal definitions of &quot;service&quot;.&amp;nbsp; Appendix B of the SoaML specification tabularizes&#xD;
    several of these, and includes this definition from the specification itself:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;i>Service is defined as a resource that enables access to one or more capabilities. Here, the access is provided using&#xD;
    a prescribed interface and is exercised consistent with constraints and policies as specified by the service&#xD;
    description. A service is provided by an entity, called the provider, for use by others. The eventual consumers of the&#xD;
    service may not be known to the service provider and may demonstrate uses of the service beyond the scope originally&#xD;
    conceived by the provider.&lt;/i>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT-centric definition might be as follows:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;em>A service is a discoverable software resource with an externalized service specification. This service&#xD;
    specification is available for searching, binding, and invocation by a service consumer. The service provider realizes&#xD;
    the service specification implementation and also delivers the quality of service requirements to the service consumer.&#xD;
    Services shall be governed by declarative policies and thus support a dynamically re-configurable architectural&#xD;
    style.&lt;/em>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following paragraphs expand upon some key words in the above IT-centric description of the concept.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;3&quot;>&lt;strong>Discoverable&lt;/strong>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Services are not a part of a monolithic application architecture. They exist independently at run time from any and all&#xD;
    other services within a given solution. This means that we require a method for the registration and discovery of&#xD;
    services based on criteria such as the ServiceInterface&amp;nbsp;it realizes, its service Participant, as well as other&#xD;
    business and technical classifications. This discovery process might take place during development time to match given&#xD;
    services to supporting services, or it might take place at run time to enable the dynamic provisioning of services&#xD;
    (mediated invocation). To be discoverable, a service must provide a set of meta-data that allows categorization. This&#xD;
    meta-data is a part of the external specification.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;font size=&quot;3&quot;>&lt;strong>Externally Specified&lt;/strong>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The external specification allows for a service to publish its details such as interface, location, policies,&#xD;
    classifications, and so on without the need for a client to have access to the service itself. Such information is then&#xD;
    usually stored in a known location or specialized service registry that supports queries of the meta-data. Currently in&#xD;
    the Web Services world, the accepted standard for the description of service interfaces is WSDL (&lt;a href=&quot;http://www.w3.org/TR/wsdl&quot; target=&quot;_blank&quot;>Web Services Description Language&lt;/a>&lt;a href=&quot;http://www.w3.org/TR/wsdl&quot;>)&lt;/a>, which comes from the World Wide Web Consortium.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The service specification work product is actually a combination of three parts: the interface, behavior, and policy&#xD;
    specification. As such, the realization of these different aspects requires more than simply the interface definition&#xD;
    provided by WSDL.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;font size=&quot;3&quot;>&lt;strong>Contract-Based&lt;/strong>&lt;/font>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In the glossary definition above, we noted that the service specification provides a view for both the service provider&#xD;
    and the service consumer. These views correspond to two halves of a contract that&amp;nbsp;enables the clear separation of&#xD;
    the specification from implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following table describes how the different aspects of a service specification affect both the provider and&#xD;
    consumer of the specification.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br />&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th valign=&quot;top&quot; width=&quot;10%&quot;>&#xD;
                Role&#xD;
            &lt;/th>&#xD;
            &lt;th valign=&quot;top&quot; width=&quot;30%&quot;>&#xD;
                Interface Specification&#xD;
            &lt;/th>&#xD;
            &lt;th valign=&quot;top&quot; width=&quot;30%&quot;>&#xD;
                Behavior Specification&#xD;
            &lt;/th>&#xD;
            &lt;th valign=&quot;top&quot; width=&quot;30%&quot;>&#xD;
                Policy Specification&#xD;
            &lt;/th>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td valign=&quot;top&quot; width=&quot;10%&quot;>&#xD;
                &lt;b>Provider&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot; width=&quot;30%&quot;>&#xD;
                Informs the set of operations and messages the service must respond to. All operations must respond to and&#xD;
                reply with the correct messages.&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot; width=&quot;30%&quot;>&#xD;
                Informs as to the behavior this service must support. If such behavior specification is formal and&#xD;
                complete, an implementation can be tested for conformance to the specification.&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot; width=&quot;30%&quot;>&#xD;
                Informs as to a set of constraints which the service implementation might work under as well as a set of&#xD;
                qualities of service that must be realized.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td valign=&quot;top&quot; width=&quot;10%&quot;>&#xD;
                &lt;b>Consumer&lt;/b>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot; width=&quot;30%&quot;>&#xD;
                Informs the set of operations that might be invoked.&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot; width=&quot;30%&quot;>&#xD;
                Informs as to the protocol requirements that the consumer must realize (operation ordering, data flows, and&#xD;
                so on). Also indicates any operations the consumer must implement to support collaborations.&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot; width=&quot;30%&quot;>&#xD;
                Informs as to constraints that the consumer must be cognizant of, such as security requirements, in&#xD;
                communicating with this service. It also identifies the qualities of service a consumer can get from a&#xD;
                given provider.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;br />&#xD;
&lt;p>&#xD;
    Such a service specification can be seen as an application of&amp;nbsp;Design by Contract.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;font size=&quot;3&quot;>&lt;strong>Business Alignment&lt;/strong>&lt;/font>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In general,&amp;nbsp;business models representing the operations of the business and the design models for supporting IT&#xD;
    applications have been at best loosely connected. In most cases, they have been completely disconnected. While the RUP&#xD;
    does provide guidance on the transition from business models to system use case models (see the guideline &lt;i>Going from&#xD;
    Business Models to Systems&lt;/i>), the connection requires a number of transformations as the level of granularity and&#xD;
    abstraction changes from the business to IT perspectives.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One important aspect of SOA is that the level of granularity of services described in a service-oriented solution is&#xD;
    such that the operations provided by services can often be identified at a business level. This increase in the level&#xD;
    of granularity in supporting IT means that, in many cases, tasks identified in business-process models can be directly&#xD;
    realized as operations on services. Therefore, the business users of IT solutions become much more a part of the&#xD;
    analysis and design process.&amp;nbsp;&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
