<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-tRYWob0Qe9s7-Ix565sImw" name="testing_techniques_by_quality_risk_test_type,_TK7s0HHUEdyzS55ez-koKA" guid="-tRYWob0Qe9s7-Ix565sImw" changeDate="2007-12-27T12:06:49.156-0800" version="7.2">
  <mainDescription>&lt;h3>&#xD;
    &lt;a id=&quot;DataAndDatabaseIntegrityTesting&quot; name=&quot;DataAndDatabaseIntegrityTesting&quot;>&lt;span     style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span> Data and Database Integrity Testing&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The databases and the database processes should be tested as an independent subsystem. This testing should test the&#xD;
    subsystems without the target-of-test's User Interface as the interface to the data. Additional research into the&#xD;
    Database Management System (DBMS) needs to be performed to identify the tools and techniques that may exist to support&#xD;
    the testing identified in the following table.&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise database access methods and processes independent of the UI so you can observe and log&#xD;
                    incorrectly functioning target behavior or data corruption.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Invoke each database access method and process, seeding each with valid and invalid data or requests&#xD;
                    for data.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Inspect the database to ensure the data has been populated as intended and all database events have&#xD;
                    occurred properly, or review the returned data to ensure that the correct data was retrieved for the&#xD;
                    correct reasons.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be made and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the following tools:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Test Script Automation Tool&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    base configuration imager and restorer&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    backup and recovery tools&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    installation-monitoring tools (registry, hard disk, CPU, memory, and so on)&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    database SQL utilities and tools&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    data-generation tools&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports the testing of all key database access methods and processes.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Testing may require a DBMS development environment or drivers to enter or modify data directly in the&#xD;
                    database.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Processes should be invoked manually.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Small or minimally sized databases (with a limited number of records) should be used to increase the&#xD;
                    visibility of any non-acceptable events.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;FunctionTesting&quot; name=&quot;FunctionTesting&quot;>&lt;span     style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span> Function Testing&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Function testing of the target-of-test should focus on any requirements for test that can be traced directly to use&#xD;
    cases or business functions and business rules. The goals of these tests are to verify proper data acceptance,&#xD;
    processing, and retrieval, and the appropriate implementation of the business rules. This type of testing is based upon&#xD;
    black box techniques; that is, verifying the application and its internal processes by interacting with the application&#xD;
    via the Graphical User Interface (GUI) and analyzing the output or results. The following table identifies an outline&#xD;
    of the testing recommended for each application.&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise target-of-test functionality, including navigation, data entry, processing, and retrieval to&#xD;
                    observe and log target behavior.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise each use-case scenario's individual use-cases flows or functions and features, using valid and&#xD;
                    invalid data, to verify that:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    the expected results occur when valid data is used&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    the appropriate error or warning messages are displayed when invalid data is used&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    each business rule is properly applied&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be mad, and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the following tools:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Test Script Automation Tool&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    base configuration imager and restorer&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    backup and recovery tools&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    installation-monitoring tools (registry, hard disk, CPU, memory, and so on)&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    data-generation tools&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports the testing of:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    all key use-case scenarios&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    all key features&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Identify or describe those items or issues (internal or external) that impact the implementation and&#xD;
                    execution of function test.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;BusinessCycle&quot; name=&quot;BusinessCycle&quot;>&lt;span style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span>&#xD;
    Business Cycle Testing&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Business Cycle Testing should emulate the tasks performed on the &amp;lt;Project Name&amp;gt; over time. A period should be&#xD;
    identified, such as one year, and transactions and tasks that would occur during a year's period should be executed.&#xD;
    This includes all daily, weekly, and monthly cycles, and events that are date-sensitive, such as ticklers.&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise target-of-test and background processes according to required business models and schedules to&#xD;
                    observe and log target behavior.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Testing will simulate several business cycles by performing the following:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    The tests used for target-of-test's function testing will be modified or enhanced to increase the&#xD;
                    number of times each function is executed to simulate several different users over a specified period.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    All time or date-sensitive functions will be executed using valid and invalid dates or time periods.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    All functions that occur on a periodic schedule will be executed or launched at the appropriate time.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Testing will include using valid and invalid data to verify the following:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    The expected results occur when valid data is used.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    The appropriate error or warning messages are displayed when invalid data is used.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Each business rule is properly applied.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be made, and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the following tools:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Test Script Automation Tool&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    base configuration imager and restorer&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    backup and recovery tools&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    data-generation tools&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports the testing of all critical business cycles.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    System dates and events may require special support tasks.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    A business model is required to identify appropriate test requirements and procedures.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;UserInterfaceTesting&quot; name=&quot;UserInterfaceTesting&quot;>&lt;span     style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span> User Interface Testing&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    User Interface (UI) testing verifies a user's interaction with the software. The goal of UI testing is to ensure that&#xD;
    the UI provides the user with the appropriate access and navigation through the functions of the target-of-test. In&#xD;
    addition, UI testing ensures that the objects within the UI function as expected and conform to corporate, or industry,&#xD;
    standards.&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise the following to observe and log standards conformance and target behavior:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Navigation through the target-of-test reflecting business functions and requirements, including&#xD;
                    window-to-window, field-to- field, and use of access methods (tab keys, mouse movements, accelerator&#xD;
                    keys).&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Window objects and characteristics can be exercised-such as menus, size, position, state, and focus.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Create or modify tests for each window to verify proper navigation and object states for each&#xD;
                    application window and object.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be made and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the Test Script Automation Tool.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports the testing of each major screen or window that will be used extensively by the&#xD;
                    user.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Not all properties for custom and third party objects can be accessed.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;PerformanceProfiling&quot; name=&quot;PerformanceProfiling&quot;>&lt;span     style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span> Performance Profiling&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Performance profiling is a performance test in which response times, transaction rates, and other time-sensitive&#xD;
    requirements are measured and evaluated. The goal of Performance Profiling is to verify performance requirements have&#xD;
    been achieved. Performance profiling is implemented and executed to profile and tune a target-of-test's performance&#xD;
    behaviors as a function of conditions, such as workload or hardware configurations.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Note&lt;/b>: Transactions in the following table refer to &quot;logical business transactions&quot;. These transactions are&#xD;
    defined as specific use cases that an actor of the system is expected to perform using the target-of-test, such as add&#xD;
    or modify a given contract.&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise behaviors for designated functional transactions or business functions under the following&#xD;
                    conditions to observe and log target behavior and application performance data:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    normal anticipated workload&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    anticipated worst-case workload&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Use Test Procedures developed for Function or Business Cycle Testing.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Modify data files to increase the number of transactions or the scripts to increase the number of&#xD;
                    iterations that occur in each transaction.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Scripts should be run on one machine (best case is to benchmark single user, single transaction) and&#xD;
                    should be repeated with multiple clients (virtual or actual, see Special Considerations below).&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be made and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the following tools:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Test Script Automation Tool&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    an application performance profiling tool, such as Rational Quantify&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    installation-monitoring tools (registry, hard disk, CPU, memory, and so on&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    resource-constraining tools; for example, Canned Heat&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports testing:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Single Transaction or single user: Successful emulation of the transaction scripts without any failures&#xD;
                    due to test implementation problems.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Multiple transactions or multiple users: Successful emulation of the workload without any failures due&#xD;
                    to test implementation problems.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Comprehensive performance testing includes having a background workload on the server.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    There are several methods that can be used to perform this, including:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    &quot;Drive transactions&quot; directly to the server, usually in the form of Structured Query Language (SQL)&#xD;
                    calls.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Create &quot;virtual&quot; user load to simulate many clients, usually several hundred. Remote Terminal Emulation&#xD;
                    tools are used to accomplish this load. This technique can also be used to load the network with&#xD;
                    &quot;traffic&quot;.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Use multiple physical clients, each running test scripts, to place a load on the system.&lt;br />&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Performance testing should be performed on a dedicated machine or at a dedicated time. This permits&#xD;
                    full control and accurate measurement.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    The databases used for Performance Testing should be either actual size or scaled equally.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;LoadTesting&quot; name=&quot;LoadTesting&quot;>&lt;span style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span> Load&#xD;
    Testing&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Load testing is a performance test that subjects the target-of-test to varying workloads to measure and evaluate the&#xD;
    performance behaviors and abilities of the target-of-test to continue to function properly under these different&#xD;
    workloads. The goal of load testing is to determine and ensure that the system functions properly beyond the expected&#xD;
    maximum workload. Additionally, load testing evaluates the performance characteristics, such as response times,&#xD;
    transaction rates, and other time-sensitive issues.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Note&lt;/b>: Transactions in the following table refer to &quot;logical business transactions&quot;. These transactions are&#xD;
    defined as specific functions that an user of the system is expected to perform using the application, such as add or&#xD;
    modify a given contract.&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise designated transactions or business cases under varying workload conditions to observe and log&#xD;
                    target behavior and system performance data.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Use Transaction Test Scripts developed for Function or Business Cycle Testing as a basis, but remember&#xD;
                    to remove unnecessary interactions and delays.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Modify data files to increase the number of transactions or the tests to increase the number of times&#xD;
                    each transaction occurs.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Workloads should include-for example, daily, weekly, and monthly-peak loads.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Workloads should represent both average as well as peak loads.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Workloads should represent both instantaneous and sustained peaks.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    The workloads should be executed under different Test Environment Configurations.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be made and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the following tools:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Test Script Automation Tool&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Transaction load scheduling and control tool&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    installation-monitoring tools (registry, hard disk, CPU, memory, and so on)&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    resource-constraining tools; for example, Canned Heat&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    data-generation tools&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports the testing of Workload Emulation, which is the successful emulation of the&#xD;
                    workload without any failures due to test implementation problems.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Load testing should be performed on a dedicated machine or at a dedicated time. This permits full&#xD;
                    control and accurate measurement.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    The databases used for load testing should be either actual size or scaled equally.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;StressTesting&quot; name=&quot;StressTesting&quot;>&lt;span style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span>&#xD;
    Stress Testing&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Stress testing is a type of performance test implemented and executed to understand how a system fails due to&#xD;
    conditions at the boundary, or outside of, the expected tolerances. This typically involves low resources or&#xD;
    competition for resources. Low resource conditions reveal how the target-of-test fails that is not apparent under&#xD;
    normal conditions. Other defects might result from competition for shared resources, like database locks or network&#xD;
    bandwidth, although some of these tests are usually addressed under functional and load testing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Note&lt;/b>: References to transactions in the following table refer to logical business transactions.&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise the target-of-test functions under the following stress conditions to observe and log target&#xD;
                    behavior that identifies and documents the conditions under which the system &lt;b>fails&lt;/b> to continue&#xD;
                    functioning properly:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    little or no memory available on the server (RAM and persistent storage space)&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    maximum actual or physically capable number of clients connected or simulated&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    multiple users performing the same transactions against the same data or accounts&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    &quot;overload&quot; transaction volume or mix (see Performance Profiling above)&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Use tests developed for Performance Profiling or Load Testing.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    To test limited resources, tests should be run on a single machine, and RAM and persistent storage&#xD;
                    space on the server should be reduced or limited.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    For remaining stress tests, multiple clients should be used, either running the same tests or&#xD;
                    complementary tests to produce the worst-case transaction volume or mix.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be made and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the following tools:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Test Script Automation Tool&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Transaction load scheduling and control tool&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    installation-monitoring tools (registry, hard disk, CPU, memory, and so on&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    resource-constraining tools; for example, Canned Heat&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    data-generation tools&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports the testing of Stress Emulation. The system can be emulated successfully in one&#xD;
                    or more conditions defined as stress conditions, and an observation of the resulting system state,&#xD;
                    during and after the condition has been emulated, can be captured.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Stressing the network may require network tools to load the network with messages or packets.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    The persistent storage used for the system should temporarily be reduced to restrict the available&#xD;
                    space for the database to grow.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Synchronize the simultaneous clients accessing of the same records or data accounts.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;VolumeTesting&quot; name=&quot;VolumeTesting&quot;>&lt;span style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span>&#xD;
    Volume Testing&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Volume testing subjects the target-of-test to large amounts of data to determine if limits are reached that cause the&#xD;
    software to fail. Volume testing also identifies the continuous maximum load or volume the target-of-test can handle&#xD;
    for a given period. For example, if the target-of-test is processing a set of database records to generate a report, a&#xD;
    Volume Test would use a large test database, and would check that the software behaved normally and produced the&#xD;
    correct report.&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise the target-of-test functions under the following high volume scenarios to observe and log&#xD;
                    target behavior:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Maximum (actual or physically-capable) number of clients connected, or simulated, all performing the&#xD;
                    same, worst case (performance) business function for an extended period.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Maximum database size has been reached (actual or scaled) and multiple queries or report transactions&#xD;
                    are executed simultaneously.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Use tests developed for Performance Profiling or Load Testing.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Multiple clients should be used, either running the same tests or complementary tests to produce the&#xD;
                    worst-case transaction volume or mix (see Stress Testing) for an extended period.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Maximum database size is created (actual, scaled, or filled with representative data), and multiple&#xD;
                    clients are used to run queries and report transactions simultaneously for extended periods.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be made and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the following tools:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Test Script Automation Tool&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Transaction load scheduling and control tool&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    installation-monitoring tools (registry, hard disk, CPU, memory, and so on&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    resource-constraining tools; for example, Canned Heat&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    data-generation tools&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports the testing of Volume Emulation. Large quantities of users, data, transactions,&#xD;
                    or other aspects of the system use under volume can be successfully emulated and an observation of the&#xD;
                    system state changes over the duration of the volume test can be captured.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    What period of time would be considered an acceptable time for high volume conditions, as noted above?&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;SecurityAndAccessControlTesting&quot; name=&quot;SecurityAndAccessControlTesting&quot;>&lt;span     style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span> Security and Access Control Testing&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Security and Access Control Testing focuses on two key areas of security:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Application-level security, including access to the Data or Business Functions&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    System-level Security, including logging into or remotely accessing to the system&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Based on the security you want, application-level security ensures that actors are restricted to specific functions or&#xD;
    use cases, or they are limited in the data that is available to them. For example, everyone may be permitted to enter&#xD;
    data and create new accounts, but only managers can delete them. If there is security at the data level, testing&#xD;
    ensures that &quot;user type one&quot; can see all customer information, including financial data, however, &quot;user type two&quot; only&#xD;
    sees the demographic data for the same client.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    System-level security ensures that only those users granted access to the system are capable of accessing the&#xD;
    applications and only through the appropriate gateways.&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise the target-of-test under the following conditions to observe and log target behavior:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Application-level Security: an actor can access only those functions or data for which their user type&#xD;
                    is provided permissions.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    System-level Security: only those actors with access to the system and applications are permitted to&#xD;
                    access them.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Application-level Security: Identify and list each user type and the functions or data for which each&#xD;
                    type has permissions.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Create tests for each user type and verify each permission by creating transactions specific to each&#xD;
                    user type.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Modify user type and rerun tests for same users. In each case, verify those additional functions or&#xD;
                    data are correctly available or denied.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    System-level Access: See Special Considerations below.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be made and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the following tools:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Test Script Automation Tool&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    &quot;Hacker&quot; security breach and probing tools&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    OS Security Administration tools&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports the testing of the appropriate functions or data affected by security settings&#xD;
                    can be tested for each known actor type.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Access to the system must be reviewed or discussed with the appropriate network or systems&#xD;
                    administrator. This testing may not be required as it may be a function of network or systems&#xD;
                    administration.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;FailoverAndRecoveryTesting&quot; name=&quot;FailoverAndRecoveryTesting&quot;>&lt;span     style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span> Failover and Recovery Testing&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Failover and recovery testing ensures that the target-of-test can successfully failover and recover from a variety of&#xD;
    hardware, software, or network malfunctions with undue loss of data or data integrity.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For those systems that must be kept running, failover testing ensures that when a failover condition occurs, the&#xD;
    alternate or backup systems properly &quot;take over&quot; for the failed system without any loss of data or transactions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Recovery testing is an antagonistic test process in which the application or system is exposed to extreme conditions,&#xD;
    or simulated conditions, to cause a failure, such as device Input/Output (I/O) failures, or invalid database pointers&#xD;
    and keys. Recovery processes are invoked, and the application or system is monitored and inspected to verify proper&#xD;
    application, or system, and data recovery has been achieved.&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Simulate the failure conditions and exercise the recovery processes (manual and automated) to restore&#xD;
                    the database, applications, and system to a desired, known state. The following types of conditions are&#xD;
                    included in the testing to observe and log behavior after recovery:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    power interruption to the client&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    power interruption to the server&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    communication interruption via network servers&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    interruption, communication, or power loss to DASD (Direct Access Storage Devices) and DASD controllers&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    incomplete cycles (data filter processes interrupted, data synchronization processes interrupted)&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    invalid database pointers or keys&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    invalid or corrupted data elements in database&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The tests already created for Function and Business Cycle testing can be used as a basis for creating a&#xD;
                    series of transactions to support failover and recovery testing, primarily to define the tests to be&#xD;
                    run to test that recovery was successful.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Power interruption to the client: power down the PC.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Power interruption to the server: simulate or initiate power down procedures for the server.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Interruption via network servers: simulate or initiate communication loss with the network (physically&#xD;
                    disconnect communication wires or power down network servers or routers).&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Interruption, communication, or power loss to DASD and DASD controllers: simulate or physically&#xD;
                    eliminate communication with one or more DASDs or DASD controllers.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Once the above conditions or simulated conditions are achieved, additional transactions should be&#xD;
                    executed and upon reaching this second test point state, recovery procedures should be invoked.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Testing for incomplete cycles utilizes the same technique as described above except that the database&#xD;
                    processes themselves should be aborted or prematurely terminated.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Testing for the following conditions requires that a known database state be achieved. Several database&#xD;
                    fields, pointers, and keys should be corrupted manually and directly within the database (via database&#xD;
                    tools). Additional transactions should be executed using the tests from Application Function and&#xD;
                    Business Cycle Testing and full cycles executed.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be made and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the following tools:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    base configuration imager and restorer&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    installation-monitoring tools (registry, hard disk, CPU, memory, and so on&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    backup and recovery tools&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports the testing of:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    One of more simulated disasters involving one or more combinations of the application, database, and&#xD;
                    system.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    One or more simulated recoveries involving one or more combinations of the application, database, and&#xD;
                    system to a known desired state.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Recovery testing is highly intrusive. Procedures to disconnect cabling (simulating power or&#xD;
                    communication loss) may not be desirable or feasible. Alternative methods, such as diagnostic software&#xD;
                    tools may be required.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Resources from the Systems (or Computer Operations), Database, and Networking groups are required.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    These tests should be run after hours or on an isolated machine.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;ConfigurationTesting&quot; name=&quot;ConfigurationTesting&quot;>&lt;span     style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span> Configuration Testing&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Configuration testing verifies the operation of the target-of-test on different software and hardware configurations.&#xD;
    In most production environments, the particular hardware specifications for the client workstations, network&#xD;
    connections, and database servers vary. Client workstations may have different software loaded (for example,&#xD;
    applications, drivers, and so on) and, at any one time, many different combinations may be active using different&#xD;
    resources.&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise the target-of-test on the required hardware and software configurations to observe and log&#xD;
                    target behavior under different configurations and identify changes in configuration state.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Use Function Test scripts.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Open and close various non-target-of-test related software, such as the Microsoft&amp;reg; Excel&amp;reg; and&#xD;
                    Microsoft&amp;reg; Word&amp;reg; applications, either as part of the test or prior to the start of the test.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Execute selected transactions to simulate actors interacting with the target-of-test and the&#xD;
                    non-target-of-test software.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Repeat the above process, minimizing the available conventional memory on the client workstation.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be made and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the following tools:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    base configuration imager and restorer&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    installation-monitoring tools (registry, hard disk, CPU, memory, and so on)&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports the testing of one or more combinations of the target test items running in&#xD;
                    expected, supported deployment environments.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    What non-target-of-test software is needed, is available, and is accessible on the desktop?&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    What applications are typically used?&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    What data are the applications running; for example, a large spreadsheet opened in Excel or a 100-page&#xD;
                    document in Word?&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    The entire systems' netware, network servers, databases, and so on, also need to be documented as part&#xD;
                    of this test.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;InstallationTesting&quot; name=&quot;InstallationTesting&quot;>&lt;span     style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span> Installation Testing&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Installation testing has two purposes. The first is to ensure that the software can be installed under different&#xD;
    conditions (such as a new installation, an upgrade, and a complete or custom installation) under normal and abnormal&#xD;
    conditions. Abnormal conditions include insufficient disk space, lack of privilege to create directories, and so on.&#xD;
    The second purpose is to verify that, once installed, the software operates correctly. This usually means running a&#xD;
    number of tests that were developed for Function Testing.&lt;b>&lt;span style=&quot;FONT-SIZE: 12pt; FONT-FAMILY: Arial&quot;>&lt;br     style=&quot;PAGE-BREAK-BEFORE: always&quot; clear=&quot;all&quot; />&#xD;
    &lt;/span>&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;table width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique Objective:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Exercise the installation of the target-of-test onto each required hardware configuration under the&#xD;
                    following conditions to observe and log installation behavior and configuration state changes:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    new installation: a new machine, never installed previously with &amp;lt;Project Name&amp;gt;&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    update: a machine previously installed &amp;lt;Project Name&amp;gt;, same version&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    update: a machine previously installed &amp;lt;Project Name&amp;gt;, older version&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Technique:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Develop automated or manual scripts to validate the condition of the target machine.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    new: &amp;lt;project Name&amp;gt; never installed&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    &amp;lt;project Name&amp;gt; same or older version already installed&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Launch or perform installation.&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Using a predetermined subset of Function Test scripts, run the transactions.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Oracles:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    Outline one or more strategies that can be used by the technique to accurately observe the outcomes of&#xD;
                    the test. The oracle combines elements of both the method by which the observation can be made and the&#xD;
                    characteristics of specific outcome that indicate probable success or failure. Ideally, oracles will be&#xD;
                    self-verifying, allowing automated tests to make an initial assessment of test pass or failure,&#xD;
                    however, be careful to mitigate the risks inherent in automated results determination.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Required Tools:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique requires the following tools:&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    base configuration imager and restorer&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    installation-monitoring tools (registry, hard disk, CPU, memory, and so on)&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Success Criteria:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    The technique supports the testing of the installation of the developed product in one or more&#xD;
                    installation configurations.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot; width=&quot;31%&quot;>&#xD;
                &lt;font size=&quot;2&quot;>Special Considerations:&lt;/font>&#xD;
            &lt;/th>&#xD;
            &lt;td width=&quot;69%&quot;>&#xD;
                &lt;p>&#xD;
                    What &amp;lt;project Name&amp;gt; transactions should be selected to comprise a confidence test that&#xD;
                    &amp;lt;project Name&amp;gt; application has been successfully installed and no major software components are&#xD;
                    missing?&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
