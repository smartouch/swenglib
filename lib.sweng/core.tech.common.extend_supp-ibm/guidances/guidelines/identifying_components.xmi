<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-iHSSK1hrpDNR-ooprK1NBA" name="new_guideline,_DJSD8IEcEd2z9IawWqZSFw" guid="-iHSSK1hrpDNR-ooprK1NBA" changeDate="2008-09-17T15:45:43.717-0700" version="7.5.0">
  <mainDescription>&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    This guideline explains how to partition the system into subsystems, identify components, and assign responsibilities&#xD;
    based on an analysis of one or more of the following:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; mso-list: l1 level1 lfo2&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Business processes&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; mso-list: l1 level1 lfo2&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Business entities&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; mso-list: l1 level1 lfo2&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Business rules&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; mso-list: l1 level1 lfo2&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Use cases&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; mso-list: l1 level1 lfo2&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Non-functional requirements&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; mso-list: l1 level1 lfo2&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Existing systems&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    A number of project artifacts usually exist when you start your work. A stakeholder may have provided them, or you may&#xD;
    have created them as part of an earlier phase of the project. Review these artifacts to identify any components that&#xD;
    they suggest.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    The following sections describe the key artifacts that you may use as input to identifying components.&#xD;
&lt;/p>&#xD;
&lt;h4 style=&quot;MARGIN: 6pt 0in 0pt&quot;>&#xD;
    Business processes&#xD;
&lt;/h4>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Business processes typically appear on diagrams made with drawing tools or business modeling tools. For example, A UML&#xD;
    activity diagram (as shown in Figure 1) may capture business processes.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    &lt;img height=&quot;600&quot; alt=&quot;&quot; src=&quot;./resources/identifying_-_business_processes.jpg&quot; width=&quot;600&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoCaption&quot; style=&quot;MARGIN: 6pt 0in; TEXT-ALIGN: center&quot; align=&quot;center&quot;>&#xD;
    &lt;a id=&quot;_Ref169924224&quot; name=&quot;_Ref169924224&quot;>&lt;strong>Figure 1.&lt;/strong>&lt;/a> &lt;strong>Business processes using a UML&#xD;
    activity diagram&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Initially, assign a component to each business process, and then assign responsibilities to that component based on the&#xD;
    activities the business process performs. You will not expose all of these responsibilities as interfaces or functions&#xD;
    in the final model. However, by examining business process models, you can initially assess the required functionality&#xD;
    and re-factor it later on.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    The business model in Figure 1 indicates the need for some kind of Order Management component with these&#xD;
    responsibilities:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Receive orders&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Fulfill orders&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Establish delivery arrangements&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Send invoice&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Handle payments&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Complete orders&#xD;
&lt;/p>&#xD;
&lt;h4 style=&quot;MARGIN: 6pt 0in 0pt&quot;>&#xD;
    &lt;span lang=&quot;IT&quot; style=&quot;mso-ansi-language: IT&quot;>Logical data model&lt;/span>&#xD;
&lt;/h4>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot; style=&quot;mso-ansi-language: EN-GB&quot;>If you have a logical data model, use it to identify components by&#xD;
    clustering related entities together, and then assigning each cluster to a managing component. See [Guideline &lt;i     style=&quot;mso-bidi-font-style: normal&quot;>Managing Data with Components]&lt;/i>.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;h4 style=&quot;MARGIN: 6pt 0in 0pt&quot;>&#xD;
    Business rules catalog&#xD;
&lt;/h4>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Business rules describe the operations, policies, and constraints that an organization puts in place to achieve its&#xD;
    goals. Rules help the organization achieve its business goals by acting as a communication mechanism between the&#xD;
    organization and interested third parties. This is done by allowing the organization to meet its legal and other&#xD;
    statutory obligations. An organization can use rules to operate more efficiently by automating and analyzing rules to&#xD;
    look for time and cost savings.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Types of business rules include:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo3&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Rules that provide the conditions to govern business behavior (legislative,&#xD;
    cultural, and business).&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo3&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Rules that provide the criteria for successful or unsuccessful completion of&#xD;
    an action.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo3&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Rules that stipulate what other actions can or cannot be performed as a result&#xD;
    of successful or unsuccessful completion.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo3&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Rules that specify the response to some external event that impinges on the&#xD;
    enterprise.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo3&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Rules that govern relationships that apply among various business entities.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Identify and specify business rules during the requirements gathering process. Analyze those rules, and verify that the&#xD;
    architecture can support them. Place rules as responsibilities on one or more components. To properly place business&#xD;
    rules, address these questions:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l5 level1 lfo4&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> &lt;b style=&quot;mso-bidi-font-weight: normal&quot;>Is the business rule likely to apply&#xD;
    in every situation, or is it specific to a particular usage?&lt;/b> This dictates the software layer in which to place the&#xD;
    business rule. Place rules as responsibilities on components in lower layers to make them reusable in many situations.&#xD;
    Place them in higher layers if they have very a specific usage.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l5 level1 lfo4&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> &lt;b style=&quot;mso-bidi-font-weight: normal&quot;>Is the business rule likely to change&#xD;
    frequently, or is it fixed for a given application?&lt;/b> The answer to this question dictates how much flexibility you&#xD;
    must provide for updating the business rule. A business rule that is likely to change frequently may have more than one&#xD;
    algorithm associated with it. For example, encapsulate a rule that calculates interest rates as a fine-grained&#xD;
    component with an interface that simply executes that rule. You can then switch the component with another component&#xD;
    that provides a different algorithm. This is an example using the Strategy pattern [GAMMA95].&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l5 level1 lfo4&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> &lt;b style=&quot;mso-bidi-font-weight: normal&quot;>Does the user of the application need&#xD;
    visibility to the business rules?&lt;/b> The need for visibility dictates how much information needs to be provided on the&#xD;
    execution of the business rule. For example, in a loan application, you may need to query the basis on which a loan is&#xD;
    given. A user may also need to have the ability to change business rules. Place such rules carefully, so that changes&#xD;
    to one rule do not affect another, and also provide a query and an update interface.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l5 level1 lfo4&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> &lt;b style=&quot;mso-bidi-font-weight: normal&quot;>Where does the data that the business&#xD;
    rule uses reside?&lt;/b> Locate components that handle a business rule as close as possible to the data that they need to&#xD;
    read or update.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l5 level1 lfo4&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> &lt;b style=&quot;mso-bidi-font-weight: normal&quot;>What middleware components are&#xD;
    available or mandated to manage business rules?&lt;/b> If a rules engine has already been selected as part of the system,&#xD;
    use it. Specialized middleware components (such as WebSphere Message Broker) provide the ability to define, manage, and&#xD;
    run business rules. These components mandate where and how to place such rules.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Specify a rule as one of the following:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l1 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> A relationship between components. For example, an order must have one or more&#xD;
    line items.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l1 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> An invariant or constraint on the data managed by a component. For example, an&#xD;
    order number has to be eight characters in length.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l1 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Pre- or post-conditions on an operation signature. For example, 'order amount'&#xD;
    must be less than some pre-defined limit for any given order.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l1 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> An algorithm that calculate results or manipulates or checks data in some way.&#xD;
    For example, the rule 'Validate Credit Card Number' would apply the standard algorithms issued by credit card numbers&#xD;
    to validate a credit card number format.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    When placing business rules on components, be sure that the business logic only exists in one place. Of course,&#xD;
    business logic may be distributed. For example, field level validation of data is typically performed on the client&#xD;
    tier, and business-processing logic that acts on that data is usually performed on the mid-tier.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Be sure to address the logical units of work that each business rule needs when accessing data. Business rules must use&#xD;
    one or more transactions (logical units of work) when updating a database to ensure that the database is always left in&#xD;
    a logically consistent state. See [BEVINGTON00] for one proposed approach.&#xD;
&lt;/p>&#xD;
&lt;h4 style=&quot;MARGIN: 6pt 0in 0pt&quot;>&#xD;
    Use case model&#xD;
&lt;/h4>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Use cases are a well-understood technique for capturing functional requirements [COCKBURN01]. Analysis of a Use case&#xD;
    model is one of the most robust ways of identifying components. Identify the architecturally significant use cases and&#xD;
    analyze those. Architecturally significant use cases are ones that:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l2 level1 lfo6&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Capture essential functionality of the system&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l2 level1 lfo6&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Exercise many architectural elements&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l2 level1 lfo6&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Challenge the architecture&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l2 level1 lfo6&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Highlight issues and risks&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l2 level1 lfo6&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Exemplify stringent demands on the architecture (such as performance&#xD;
    requirements)&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l2 level1 lfo6&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Are likely to change&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l2 level1 lfo6&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Involve communication and synchronization with external systems&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    When looking for architecturally significant use cases, try to apply the &quot;80/20 rule.&quot; Identify 20% of the use cases&#xD;
    that account for 80% of the user activity and are most likely to drive out new components.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Identify components as follows for each use case:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;NumberList&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l0 level1 lfo7; tab-stops: list .25in&quot;>&#xD;
    &lt;a id=&quot;_Ref169933164&quot; name=&quot;_Ref169933164&quot;>&lt;span     style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Initially define a component with the same name as the use case.&lt;/a> For&#xD;
    example, a use case called 'Check Delivery Status' would result in a component of the same name.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;NumberList&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l0 level1 lfo7; tab-stops: list .25in&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> For each step in the use case that requires an actor to system interaction,&#xD;
    define a responsibility for the component to manage that interaction. 'Check Delivery Status,' which has the steps&#xD;
    shown in Figure 2, would result in the single responsibility 'obtain order status'.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;NumberList&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l0 level1 lfo7; tab-stops: list .25in&quot;>&#xD;
    &lt;a id=&quot;_Ref169933166&quot; name=&quot;_Ref169933166&quot;>&lt;span     style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Some steps imply usage of data (order, customer, and so on). Create a&#xD;
    component to act as a 'manager' for that data ('Order Manager, 'Customer Manager' and so on&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;NumberList&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l0 level1 lfo7; tab-stops: list .25in&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Identify new components if needed, or add responsibilities to an existing&#xD;
    component if it makes more sense to do so. Create a new component to handle a responsibility that does not naturally&#xD;
    fit anywhere, rather than trying to force the responsibility into an existing component.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot; />&#xD;
    &lt;img height=&quot;324&quot; alt=&quot;&quot; src=&quot;./resources/identifying_-_use_case.jpg&quot; width=&quot;545&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoCaption&quot; style=&quot;MARGIN: 6pt 0in; TEXT-ALIGN: center&quot; align=&quot;center&quot;>&#xD;
    &lt;a id=&quot;_Ref169934148&quot; name=&quot;_Ref169934148&quot;>&lt;strong>Figure&lt;/strong>&lt;/a> &lt;strong>2. Use case 'Check Delivery&#xD;
    Status'&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    The above approach is a &quot;first-cut&quot; at identifying components and their responsibilities. You will refine your&#xD;
    components later when you structure them.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    For more complex use cases where you identify a number of components, show component interactions through one or more&#xD;
    Component Interaction Diagrams, as shown in Figure 3.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    &lt;img height=&quot;406&quot; alt=&quot;&quot; src=&quot;./resources/identify_comp_interaction_dgm.jpg&quot; width=&quot;600&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoCaption&quot; style=&quot;MARGIN: 6pt 0in; TEXT-ALIGN: center&quot; align=&quot;center&quot;>&#xD;
    &lt;a id=&quot;_Ref169940190&quot; name=&quot;_Ref169940190&quot;>&lt;/a>&lt;a id=&quot;_Ref169940152&quot; name=&quot;_Ref169940152&quot;>&lt;span     style=&quot;mso-bookmark: _Ref169940190&quot;>&lt;strong>Figure&lt;/strong>&lt;/span>&lt;/a> &lt;span     style=&quot;mso-bookmark: _Ref169940190&quot;>&lt;strong>3. Component interaction diagram for use case 'Check Stock&#xD;
    Availability'&lt;/strong>&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    The above component interaction diagram was drawn while analyzing the use case shown in Figure 4.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    &lt;img height=&quot;294&quot; alt=&quot;&quot; src=&quot;./resources/identifying_-_use_case_2.jpg&quot; width=&quot;600&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoCaption&quot; style=&quot;MARGIN: 6pt 0in; TEXT-ALIGN: center&quot; align=&quot;center&quot;>&#xD;
    &lt;a id=&quot;_Ref169940289&quot; name=&quot;_Ref169940289&quot;>&lt;strong>Figure 4&lt;/strong>&lt;/a>&lt;strong>. Use case 'Check Stock&#xD;
    Availability'&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;h4 style=&quot;MARGIN: 6pt 0in 0pt&quot;>&#xD;
    Non-functional requirements&#xD;
&lt;/h4>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    A non-functional requirement (NFR) is a quality or constraint that some part of a system must satisfy.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Qualities define the expectations and characteristics that the system should support. Qualities are usually categorized&#xD;
    as runtime or non-runtime.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Runtime qualities:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l5 level1 lfo3&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Can be empirically tested (by monitoring the system)&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l5 level1 lfo3&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Are sometimes stated as the system's service level requirements&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l5 level1 lfo3&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Are also known as the observable qualities&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l5 level1 lfo3&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Provide value to the user of the system&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Non-runtime qualities:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l6 level1 lfo4&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Cannot be measured easily and may rely on other project metrics&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l6 level1 lfo4&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Are also the non-observable or development-time qualities&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l6 level1 lfo4&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Provide value to the operator of the system&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    &lt;i>Constraints&lt;/i> are limitations or specifications imposed upon a solution. A constraint is something that cannot be&#xD;
    changed during the lifetime of the project. Constraints are usually considered non-negotiable (though should sometimes&#xD;
    be questioned).&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    There is always a trade-off between the three critical constraints:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; mso-list: l0 level1 lfo9&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Scope&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; mso-list: l0 level1 lfo9&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Time&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; mso-list: l0 level1 lfo9&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Resources (people and budget)&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    When faced with architecting a new system, take into account the system's non-functional requirements, as well as its&#xD;
    purely functional requirements. Address these questions:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l7 level1 lfo6&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> &lt;b style=&quot;mso-bidi-font-weight: normal&quot;>Can the system be built using the&#xD;
    preferred or mandated technologies?&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; TEXT-INDENT: 0in; mso-list: none; tab-stops: .5in&quot;>&#xD;
    Mandated technologies may include the application development environment: Platform, operating system, middleware and&#xD;
    networking choices, and interfaces to existing systems.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l4 level1 lfo7&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> &lt;b style=&quot;mso-bidi-font-weight: normal&quot;>Will the system achieve its service&#xD;
    level requirements?&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; TEXT-INDENT: 0in; mso-list: none; tab-stops: .5in&quot;>&#xD;
    Service level requirements are typically defined in terms of performance, availability, and security.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l2 level1 lfo8&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> &lt;b style=&quot;mso-bidi-font-weight: normal&quot;>Can the system be operated and&#xD;
    managed?&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL2&quot; style=&quot;MARGIN: 0in 0in 0pt 0.25in; TEXT-INDENT: 0in; mso-list: none; tab-stops: .5in&quot;>&#xD;
    Determine if your system needs to handle problem management (unscheduled events), change management (scheduled events),&#xD;
    and end user support (such as help-desk access).&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    In addition, there are usually certain products, or packages, and other constraints (such as standards or technology&#xD;
    choices) to which you must cater. These non-functional requirements may need specific components to be identified and&#xD;
    specified. Examples of such components include:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Error processing&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Links to systems management services&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Audit&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Management Information Systems&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Scalability and availability (ability to run things in parallel, across&#xD;
    machines)&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Confidentiality&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Privacy&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Non-repudiation&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;BulletsL1&quot; style=&quot;MARGIN: 3pt 0in 3pt 0.25in; mso-list: l3 level1 lfo5&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;span     style=&quot;mso-list: Ignore&quot;>·&lt;/span>&lt;/span> Authentication and authorization&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    To meet a number of potentially conflicting non-functional requirements, you may need to resolve a number of opposing&#xD;
    forces, as shown in Figure 5. If you resolve two or more opposing forces, you have a solution to a problem. Sometimes&#xD;
    patterns help resolve forces. Explore how the problem was solved before.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    &lt;img height=&quot;243&quot; alt=&quot;&quot; src=&quot;./resources/identifying_-_opposing_forces.jpg&quot; width=&quot;535&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoCaption&quot; style=&quot;MARGIN: 6pt 0in; TEXT-ALIGN: center&quot; align=&quot;center&quot;>&#xD;
    &lt;a id=&quot;_Ref170142320&quot; name=&quot;_Ref170142320&quot;>&lt;strong>Figure 5&lt;/strong>&lt;/a>&lt;strong>. Requirements as opposing&#xD;
    forces&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Often, two or more solutions exist, each with their pros and cons in terms of cost, feasibility, and other factors.&#xD;
    &quot;Ultimately, every software-intensive system has an architecture, be it intentional or accidental. &lt;a id=&quot;OLE_LINK4&quot; name=&quot;OLE_LINK4&quot;>Every such architecture serves to hold back the forces upon that system in a manner that is&#xD;
    functional, economical, and elegant&lt;/a>&quot; [BOOCH04].&#xD;
&lt;/p>&#xD;
&lt;h4 style=&quot;MARGIN: 6pt 0in 0pt&quot;>&#xD;
    IT environment&#xD;
&lt;/h4>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    The existing IT environment provides an inventory of the enterprise's installed applications, data, and computing and&#xD;
    network infrastructure. You may feature some or all elements in the architecture of the new system. For example, you&#xD;
    may reuse a particular database package. Review the IT environment and decide whether any of the components have&#xD;
    potential for reuse in the new system.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    Do not confuse logical and physical components in one model. When working with logical components, represent existing&#xD;
    physical components to be reused by abstracting them as logical components. Note in the component description that the&#xD;
    actual implementation of this component has already been decided.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    For example, suppose you have already decided that IBM WebSphere Message Broker is the messaging bus. To represent this&#xD;
    component in a logical Component Model, abstract it to a component called 'Message Bus' and capture in the component&#xD;
    specification that the implementation is IBM WebSphere Message Broker.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
