<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="_VgwH0Me0EdmYjcUf1_oIew" name="setting_up_for_a_project_using_rsa,{C4D01FEE-0C3F-4061-A0C7-06988A6E964F}" guid="_VgwH0Me0EdmYjcUf1_oIew" changeDate="2010-05-17T15:47:36.343-0700" version="7.1.0">
  <mainDescription>&lt;h3>&#xD;
    Overview&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Setting up for a project means laying the foundation that enables team members to work on the same model at the same&#xD;
    time. Developing complex systems requires that groups of analysts, architects, and developers have the ability see and&#xD;
    access the &quot;big picture&quot; at the same time as they are working on their own portion of that picture-simultaneously.&#xD;
    Successfully managing an environment in which multiple team members have different kinds of access to the same model&#xD;
    requires:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        formulating a working strategy for managing team activity&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        having the tools that can support that strategy&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In the guidance that follows, these terms will be used:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;i>Project&lt;/i> refers to a file system location that is known to the Eclipse workspace and is used to store the Eclipse&#xD;
    resources&amp;nbsp;that are the work products of a development effort&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;i>Conceptual models&lt;/i> are models that express abstract concepts like use cases, analysis classes, and design&#xD;
    components. They are not tightly bound to implementation code. They are stored in files with &lt;i>.emx&lt;/i> extensions.&#xD;
    They are distinct from &lt;i>implementation models&lt;/i>, which consist of implementation code itself, plus diagrams of the&#xD;
    code that are stored in files with &lt;i>.dnx&lt;/i> extensions. (You can think of an implementation model as equivalent to&#xD;
    the project that contains the code and code diagrams.)&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following basic steps lay this foundation:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Establishing%20the%20Role&quot;>Establishing the Role of Conceptual Modeling and the Modeling Work&#xD;
        Breakdown&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Tailor%20Templates%20and%20Defaults&quot;>Tailor Templates and Defaults&lt;/a> (optional)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Determine%20Model%20Partitioning%20Strategy&quot;>Determine Model Partitioning Strategy&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Create%20Project%20and%20Models&quot;>Create Modeling Projects and Models&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Establishing the Role&quot; name=&quot;Establishing the Role&quot;>Establishing the Role of Conceptual Modeling and the&#xD;
    Modeling Work Breakdown&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Part of laying the foundation is determining how conceptual models will be used in the development effort. Will they&#xD;
    drive development, or will they be used more retrospectively (e.g. as a form of documentation)?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If models will drive development, determine:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        What types of models (such as Use Case, Analysis, and Enterprise IT Design) will be used.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The makeup (size and skill sets) of the conceptual modeling team.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The anticipated scope of the conceptual modeling effort.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How conceptual modeling work assignments will be apportioned among the team members.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How likely it is that multiple members of the team will have to work concurrently in the same areas of the&#xD;
        conceptual models.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What configuration management tool will be used for storing and versioning conceptual model assets, and what the&#xD;
        typical CM activities will be.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Another consideration is what kinds of conceptual models will be used. The tool provides a handful of model templates&#xD;
    that can be used to instantiate new conceptual models of specific types such as Use Case Model, Analysis Model, and&#xD;
    Enterprise IT Design Model. The templates typically provide a basic UML package structure, and some example content.&#xD;
    They may also have certain UML2 profiles pre-applied.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Tailor Templates and Defaults&quot; name=&quot;Tailor Templates and Defaults&quot;>Tailor Templates and Defaults (optional)&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    In the steps that follow, you create models using standard templates, that include a basic packaging structure that&#xD;
    follows the &lt;a href=&quot;http://www.ibm.com/developerworks/rational/library/04/r-3155/&quot; target=&quot;_blank&quot;>Model Structure&#xD;
    Guidelines for RSx&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You can optionally create your own specialized templates. In this way you can preset properties and options such as&#xD;
    default fonts, colors, line styles, file storage options, the ways in which stereotypes and other information are&#xD;
    presented. You can also define your own standard package structures and seed content, and have UML profiles of your&#xD;
    choice (including profiles you create) pre-applied.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information, refer to &lt;i>&lt;a&#xD;
    href=&quot;http://publib.boulder.ibm.com/infocenter/rsahelp/v8/topic/com.ibm.xtools.prodover.doc/topics/cdesignmodel.html&quot;&#xD;
    target=&quot;_blank&quot;>The Design Model&lt;/a>&lt;/i>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Determine Model Partitioning Strategy&quot; name=&quot;Determine Model Partitioning Strategy&quot;>Determine Model Partitioning&#xD;
    Strategy&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Taking into account the modeling work breakdown you identified in the previous steps, and factoring in some other&#xD;
    considerations that are discussed in the Team Development sections of online Help, determine a strategy for allocating&#xD;
    conceptual models to physical modeling files.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tool&amp;nbsp;supports two main approaches for how to break logical model instances:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        a planned approach wherein you decompose the models at the outset, by creating multiple modeling files per model.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        an ad-hoc approach, based on model refactoring.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In the real world, a mix of these two approaches is more probable: even if the partitioning strategy has been planned&#xD;
    in advance, there will be occasions when a model refactoring is necessary for improving team activities. For a detailed&#xD;
    discussion about this topic, see the &lt;a href=&quot;http://www.ibm.com/developerworks/rational/library/04/r-3155/&quot;&#xD;
    target=&quot;_blank&quot;>Model Structure Guidelines for RSx&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information, refer to &lt;i>&lt;a&#xD;
    href=&quot;http://publib.boulder.ibm.com/infocenter/rsahelp/v8/topic/org.eclipse.platform.doc.user/tasks/tasks-1h.htm&quot;&#xD;
    target=&quot;_blank&quot;>Working in a Team Environment&lt;/a>&lt;/i>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Create Project and Models&quot; name=&quot;Create Project and Models&quot;>Create Modeling Projects and Models&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The following describes the process for establishing a set of conceptual models for a development effort. Note that you&#xD;
    will not necessarily create all of the projects and models at the outset - you may introduce them incrementally at&#xD;
    various stages of the development effort.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Create a UML Project. Give it a name that reflects the development tasks and work products it will support (e.g.&#xD;
        &quot;Timesheet Management System Models&quot; or perhaps &quot;Timesheet Management System Use Case Modeling Files&quot;)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        When you create the project you will be asked to choose a type of conceptual modeling file to be created in the&#xD;
        project: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                If your plan is to use a UML project per conceptual model type, then at this point you should select the&#xD;
                desired model type for the project.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                If your plan is to use a UML project to house more than one type of conceptual model, then the model you&#xD;
                select at this point can be any of those types that you ultimately plan to house in the project.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Either way, choose a meaningful name for the new modeling file. The name should reflect the name of the&#xD;
                solution being developed and the type of the model (e.g. &quot;Timesheet Management System Use Case Model&quot; or&#xD;
                &quot;Timesheet Management System Analysis Model&quot;). If you plan to allocate the logical content of one&#xD;
                conceptual model to multiple modeling files, the name of each modeling file should also reflect the subset&#xD;
                of the logical content that is being housed in the file (e.g. &quot;Timesheet Management System Employee&#xD;
                Management Use Cases&quot; or &quot;Timesheet Management System Project Management Use Cases&quot;).&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Add additional modeling files to the project as needed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Continue adding UML projects and adding additional modeling files to those projects until you have the set of UML&#xD;
        projects and modeling files you need.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    For a mapping between the RUP models and the&amp;nbsp;tool specific&amp;nbsp;ones and for a detailed description of the project&#xD;
    types, see the &lt;a href=&quot;http://www.ibm.com/developerworks/rational/library/04/r-3155/&quot; target=&quot;_blank&quot;>Model Structure&#xD;
    Guidelines for RSx&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information, refer to &lt;i>&lt;a&#xD;
    href=&quot;http://publib.boulder.ibm.com/infocenter/rsahelp/v8/topic/com.ibm.xtools.prodover.doc/topics/cdesignmodel.html&quot;&#xD;
    target=&quot;_blank&quot;>The Design Model&lt;/a>&lt;/i>.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
