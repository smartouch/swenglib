<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="_3ZU5MtnmEdmO6L4XMImrsA" name="define_project_organization_and_staffing,{8158A0C5-E4B3-4B9F-9DD6-0A32EB233B87}" guid="_3ZU5MtnmEdmO6L4XMImrsA" changeDate="2005-09-19T14:53:08.516-0700" version="7.1.0">
  <sections xmi:id="_Y7tqwNnnEdmO6L4XMImrsA" name="Define Project Organization" guid="_Y7tqwNnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Define Project Organization&quot; name=&quot;Define Project Organization&quot;>&lt;/a> &#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table     style=&quot;BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid&quot;      cellspacing=&quot;0&quot; bordercolordark=&quot;#808080&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bordercolorlight=&quot;#808080&quot; border=&quot;1&quot;>&#xD;
        &lt;tbody>&#xD;
            &lt;tr>&#xD;
                &lt;td width=&quot;5%&quot;>&#xD;
                    &lt;b>Purpose&lt;/b>&#xD;
                &lt;/td>&#xD;
                &lt;td width=&quot;95%&quot;>&#xD;
                    To define the organizational structure of the project in terms of positions, teams, responsibilities&#xD;
                    and hierarchy.&amp;nbsp;&#xD;
                &lt;/td>&#xD;
            &lt;/tr>&#xD;
        &lt;/tbody>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    The choice of project organizational structure depends on the characteristics of the project, and external constraints,&#xD;
    such as existing organizational policy. It is, therefore, difficult to be prescriptive about such structures, because&#xD;
    what is effective (or even feasible) will depend very much on circumstance. The issues to be addressed are canvassed&#xD;
    in&amp;nbsp;&lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.mgmt.release_planning.base/workproducts/project_plan_1CDBB7E4.html&quot; guid=&quot;_0a6vcMlgEdmt3adZL5Dmdw&quot;>Project Plan&lt;/a>, which also present a default project structure that may be adapted to&#xD;
    a project's particular needs. The default structure also suggests a mapping of (Rational Unified Process) roles to the&#xD;
    organization's positions. The shape and size of the project organization will vary across phases, and the Software&#xD;
    Development Plan, a living document, will be updated to reflect these changes.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_Y7tqwdnnEdmO6L4XMImrsA" name="Define Staffing Requirements" guid="_Y7tqwdnnEdmO6L4XMImrsA">
    <sectionDescription>&lt;a id=&quot;Define Staffing Requirements&quot; name=&quot;Define Staffing Requirements&quot;>&lt;/a> &#xD;
&lt;div align=&quot;left&quot;>&#xD;
    &lt;table     style=&quot;BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid&quot;      cellspacing=&quot;0&quot; bordercolordark=&quot;#808080&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bordercolorlight=&quot;#808080&quot; border=&quot;1&quot;>&#xD;
        &lt;tbody>&#xD;
            &lt;tr>&#xD;
                &lt;td width=&quot;5%&quot;>&#xD;
                    &lt;b>Purpose&lt;/b>&#xD;
                &lt;/td>&#xD;
                &lt;td width=&quot;95%&quot;>&#xD;
                    To define the numbers, type (skills, domain), experience and caliber of staff required for the&#xD;
                    project&amp;nbsp;&#xD;
                &lt;/td>&#xD;
            &lt;/tr>&#xD;
        &lt;/tbody>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Based on the effort estimates for the project, the desired schedule, the chosen organizational structure and mapping of&#xD;
    roles, the Project Manager determines the staffing profile (number of staff over time, and skill set) required for the&#xD;
    project. The effort estimate for a project is of course not independent of team size, experience, skills and caliber -&#xD;
    in all probability, the Project Manager will have made assumptions about staff capability, etc. when forming the effort&#xD;
    estimate. In the &lt;a href=&quot;http://sunset.usc.edu/research/COCOMOII/index.html&quot; target=&quot;_blank&quot;>COCOMO estimation&#xD;
    model&lt;/a>, staff capability and experience are major effort drivers when planning phases and iterations. Therefore,&#xD;
    selecting an acceptable total effort (by tuning the various COCOMO effort drivers) and a feasible schedule will&#xD;
    determine the staff profile.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In some cases, the Project Manager may know in advance the numbers and skills of staff that will be available.&amp;nbsp; In&#xD;
    these cases, with the staff size and skills set, only the schedule is variable, assuming the project scope stays&#xD;
    constant.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Project Manager must also be aware of the disruption that may be caused by ramping up staff levels too rapidly, and&#xD;
    the potentially catastrophic effect on productivity of attempting radical reductions in schedule, by large increases in&#xD;
    staff numbers.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;a id=&quot;Inception and Elaboration&quot; name=&quot;Inception and Elaboration&quot;>Staffing the Inception and Elaboration Phases&lt;/a>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    During Inception, the focus is on defining and bounding the scope, and developing a business case for the project.&#xD;
    Consequently, the team size is quite small: a Project Manager, a Software Architect, and perhaps a developer or two,&#xD;
    especially where a proof of concept prototype is needed to clarify the requirements or build support for the product.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    During Elaboration, the focus is primarily on the architecture and the architectural prototype. Consequently, design&#xD;
    tasks in early elaboration focus on the architectural aspects; little attention is given to the details of the classes&#xD;
    and their attributes, which although identified are not architecturally significant. During these iterations, most of&#xD;
    the effort comes from your architecture team and a designated prototyping team. The prototyping team is usually put&#xD;
    together by the more experienced programmers. At this point you have a very small design team that will focus on&#xD;
    generic mechanisms and technologies. The test group will focus on building the test environment and testing the early&#xD;
    use cases.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The choice of members of the architecture team should be made carefully: they should not only possess superior analysis&#xD;
    and design skills, but also leadership qualities. In order to communicate the architecture to the larger team during&#xD;
    the construction phase, a good practice is to distribute the members of the architecture team among the Construction&#xD;
    teams. Members of the architecture team also need to cover a broad spectrum of software engineering experience:&#xD;
    software design and implementation, performance tuning, database management, network management and configuration&#xD;
    management include the major skill sets that must be represented in the architecture team.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;a id=&quot;Construction&quot; name=&quot;Construction&quot;>Staffing the Construction Phase&lt;/a>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The Construction Phase focuses on maintaining the architectural integrity of the system while building increasing&#xD;
    functionality into the system. This requires architectural refinement (hence the &quot;baselining&quot; and not &quot;freezing&quot; of the&#xD;
    architecture following the Elaboration Phase) and an architecture team that keeps an eye on the designers and their&#xD;
    designs.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The architecture team will tend to distribute itself among the development teams, acting as technical leads and&#xD;
    coordinating inter-group issues with the other technical leads. The Construction teams themselves must be&#xD;
    cross-functional teams with both design and development expertise, as they are responsible for both the design and&#xD;
    implementation of their assigned functionality. Typically, a Construction team is responsible for one or more&#xD;
    subsystems with well-defined interfaces; changes to these interfaces or the addition of new subsystems causes&#xD;
    architectural change and needs to be carefully considered. Within the subsystem, the team is relatively free to design&#xD;
    and implement as it sees fit, but cross-team communication is needed to ensure that teams are not building the same&#xD;
    implementation mechanisms in parallel.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Typically, Construction teams are usually organized horizontally, along the lines of layering. A team may be&#xD;
    responsible for database interfaces, or communication infrastructure, while other teams focus on the application&#xD;
    functionality itself. The &quot;upper&quot; layer teams as a result require more expertise in the problem domain and with User&#xD;
    Interface design or interfacing with external systems. &quot;Lower&quot; layer teams are more intimate with the implementation&#xD;
    technology. The composition of these teams must reflect these different skill demands.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;a id=&quot;Testing&quot; name=&quot;Testing&quot;>Staffing Testing Tasks&lt;/a>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The first question in test is how much formal testing are you required to do? And then, how much of this can you afford&#xD;
    to do to meet your quality objectives and still be within reasonable limits from a cost and schedule perspective. It is&#xD;
    rare that projects have the budget to do all kind of tests. Typically, projects must select a test level they can&#xD;
    afford. Remember, each test specification must be inspected and maintained. It is very bad for project team morale if&#xD;
    there are plans to create a lot of test specifications, but cannot implement those plans because you run out of time.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Create a specific test team. At least one person in the test team must come from the requirements capture team. The&#xD;
    test team is responsible for&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Black-box testing.&lt;/b> Test the use cases from outside the system on the basis of the use case's flow of events.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>White-box testing.&lt;/b> Test the actual sending of messages in the use case on the basis of the sequence views&#xD;
        for the scenarios.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>System test.&lt;/b> Stressing the system to reveal its true nature.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Remember that testing is not just to run the tests - it is also to prepare the test environment and to write and&#xD;
    inspect the test specifications.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An independent group should test the use cases and the entire system. They should perform the tests and write the test&#xD;
    reports as well. The work of testing the use cases should be organized so that there is one individual responsible for&#xD;
    testing each use case.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If it is not possible for an independent group to test the use cases, as on a small project, you should at least make&#xD;
    sure that the person responsible for a use case in design does not test the use case.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Automated regression testing should be used on medium and large projects. The test team will require some programmers&#xD;
    to support this capability. This is even more important during an iterative development, where you do not want to&#xD;
    expend a lot of effort re-running the same test suites again and again.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;a id=&quot;Transition&quot; name=&quot;Transition&quot;>Staffing the Transition Phase&lt;/a>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In the Transition Phase, development work is completed. Beta testing is conducted, and a final release is prepared. If&#xD;
    a good job has been done in Construction, the project team can begin scaling back in size, reducing the number of&#xD;
    developers and testers. The mix of the team will shift in favor of trainers and infrastructure logistics experts who&#xD;
    are responsible for deploying the product into the user community.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The software architect, or architecture team, works in a &quot;follow up mode&quot;: they help sort out problem reports,&#xD;
    prioritize change proposals, and change orders to make sure that problems are not fixed for the sake of expediency in a&#xD;
    way that damages the architecture. Design tasks recede during the transition phase, and are limited to correcting&#xD;
    problems, or introducing last minute enhancements.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></sectionDescription>
  </sections>
  <purpose>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a> &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        To define an organizational structure for the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Based on effort estimates, to define staffing requirements - in terms of numbers, types and experience levels - for&#xD;
        the next iteration (with high confidence), and for subsequent iterations, although with lower confidence, to allow&#xD;
        action to begin on staff acquisition, if this is a risk&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
</org.eclipse.epf.uma:TaskDescription>
