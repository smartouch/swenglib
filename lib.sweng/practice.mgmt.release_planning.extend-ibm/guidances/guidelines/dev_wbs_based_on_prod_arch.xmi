<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-huHsA-5SsR-2EMy4PWnM1A" name="new_guideline,_DoYucAO6EeC8BbqEhGZqqw" guid="-huHsA-5SsR-2EMy4PWnM1A" changeDate="2011-01-10T09:48:11.656-0700" version="7.5.1">
  <mainDescription>&lt;p>&#xD;
    A work breakdown structure (WBS) divides the project into a related set of manageable components. It provides a&#xD;
    structure for identifying and organizing the logical units of work into work packages that will be managed. The WBS is&#xD;
    used as a tool and reference for assigning effort and for scheduling. It is used as the primary framework for planning,&#xD;
    organizing, and controlling the work performed on the project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Developing your work breakdown structure based on the product architecture allows you to organize and plan project work&#xD;
    around the components of the product to be developed so that relationships between WBS elements&amp;nbsp;are easily&#xD;
    understood. This organizational approach supports detailed resource planning, ensuring that assignments and the&#xD;
    responsibility for those assignments go to the appropriate resources. It also creates a structure for accurately&#xD;
    estimating cost and for allocating budget. Component-based decomposition into work packages also provides a strong&#xD;
    framework for risk and impact analysis.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Define the work breakdown structure components&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Decompose the work breakdown structure from the system (top)&amp;nbsp;level into lower-level components. Each WBS&#xD;
    component&amp;nbsp;must be described in verifiable terms so that successful completion and delivery&amp;nbsp;are easily&#xD;
    measured.&amp;nbsp;Work products such as&amp;nbsp;requirements specifications, architecture overview diagrams, and component&#xD;
    models&amp;nbsp;are useful inputs to this&amp;nbsp;effort.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The general structure should follow this pattern:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Top Level - System &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Subsystems &#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Components &#xD;
                        &lt;ul>&#xD;
                            &lt;li>&#xD;
                                lower levels of decomposition as needed.&#xD;
                            &lt;/li>&#xD;
                        &lt;/ul>&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    A WBS can be&amp;nbsp;decomposed to any level of interest depending&amp;nbsp;upon the level of risk or cost.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Assign responsibility&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Each component must be assigned to the team or resource who will take responsibility for completing the work.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The resulting structure should define the product to be developed and relate the elements of work that must be&#xD;
    performed to each other and to the end product.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Considerations for Agile teams&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Agile teams typically do not produce a formal work breakdown structure.&amp;nbsp;To achieve the benefits of a product&#xD;
    architecture-based planning&amp;nbsp;tool, the&amp;nbsp;Work Items List (WIL) can be organized by components.&amp;nbsp; Stories or&#xD;
    high level components are defined with child-level work items capturing the tasks required to complete&amp;nbsp;each story&#xD;
    or component.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
