<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-yTFmQ0MUHJ6_xY5DI13NxA" name="new_concept,_HRXuwD9KEd6kc5DY7OkMEA" guid="-yTFmQ0MUHJ6_xY5DI13NxA" changeDate="2009-07-15T13:41:54.029-0700" version="7.5.0">
  <mainDescription>&lt;h3> User story &lt;/h3>&#xD;
&lt;p> A user story is a brief description of a system requirement from the user's &#xD;
  or stakeholder's perspective.&amp;nbsp;User stories can be defined at a high level &#xD;
  and decomposed as needed into smaller stories.&amp;nbsp;User stories are a simple &#xD;
  and straightforward way to document requirements.&amp;nbsp;Because they are brief, &#xD;
  the overhead is low for creating and updating them as requirements change.&amp;nbsp;Because &#xD;
  they are focused on delivering value, they are a good basis for prioritizing &#xD;
  and implementing. &lt;/p>&#xD;
&lt;p> User stories&amp;nbsp;work well when a complete detailed requirements specification &#xD;
  is not required or desired. They tend to be relatively informal and incomplete, &#xD;
  leaving details to be resolved during implementation.&amp;nbsp;A story does not &#xD;
  include all of the information that makes up the requirement. It is just enough &#xD;
  information to identify the requirement and to remind everyone what the story &#xD;
  is about. Writing can be supplemented by a photo when that makes sense. This &#xD;
  helps the team think of the product in terms of solving needs of real people. &#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Examples:&#xD;
&lt;/p>&#xD;
&lt;ul class=&quot;noindent&quot;>&#xD;
    &#xD;
  &lt;li> As an ATM user, I want to use my debit card to pay my electricity bill.&lt;/li>&#xD;
  &lt;li> As a branch manager, I want to track transactions at my branch so that &#xD;
    I can identify customers to upsell.&lt;/li>&#xD;
  &lt;li> As a student, I want to enroll in a course so I can complete my degree.&lt;/li>&#xD;
  &lt;li> As an online customer, I want to search for items so I can add them to &#xD;
    my order.&amp;nbsp; &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3> User role&amp;nbsp; &lt;/h3>&#xD;
&lt;p> A user &lt;em>role&lt;/em> represents a population of users that share similar attributes &#xD;
  and interaction with the system.&amp;nbsp;Each different user role has different &#xD;
  characteristics or attributes that help identify different ways&amp;nbsp;that each &#xD;
  interacts with system. The use of roles while writing user stories helps us &#xD;
  avoid writing the stories from a single user's perspective. It is typical that &#xD;
  we start by identifying&amp;nbsp;individual users of the system, then we need to &#xD;
  organize, consolidate, and refine them into more generic user roles. &lt;/p>&#xD;
&lt;h3>&#xD;
    Conversation&#xD;
&lt;/h3>&#xD;
&lt;p> Another important concept is not to worry about getting all of the details &#xD;
  into the story.&amp;nbsp;It really needs to be a commitment to have a conversation &#xD;
  (actually, a lot of them).&amp;nbsp;Stakeholders can make up&amp;nbsp;their minds as &#xD;
  the story is in development.&amp;nbsp;Likewise, as&amp;nbsp;developers need more information &#xD;
  or need to ask questions, they should ask (and not expect everything to be spelled &#xD;
  out up front for estimating purposes).&amp;nbsp;What's important is to foster a &#xD;
  healthy communication between&amp;nbsp;stakeholders (or their proxies)&amp;nbsp;and &#xD;
  product owners&amp;nbsp;with the development team.&amp;nbsp;&amp;nbsp; &lt;/p>&#xD;
&lt;h3>&#xD;
    Confirmation&#xD;
&lt;/h3>&#xD;
&lt;p> It's&amp;nbsp;usual that agile teams do a lot more testing along the lines of &#xD;
  development, compared to traditional teams.&amp;nbsp;In fact, they often write a &#xD;
  test before they write sufficient production code to fulfill that test, and &#xD;
  then they proceed develop the next iteration.&amp;nbsp;These teams&amp;nbsp;work very &#xD;
  closely together and, ideally, work closely with their stakeholders. Changing &#xD;
  requirements are seen as a competitive advantage, not as something that you &#xD;
  need to prevent, as long as you can act on them. Agile teams deliver working &#xD;
  software at every iteration, thereby providing concrete evidence of actual progress &#xD;
  on the project. Daily builds, or even builds multiple times a day, are highly &#xD;
  desirable. Shorter iterations are desirable, from as short as one to two weeks. &#xD;
  Four week-long iterations&amp;nbsp;are a common recommendation, although iterations &#xD;
  of up to&amp;nbsp;eight weeks will occur at scale. &lt;/p>&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
