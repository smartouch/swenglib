<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-YFOkrAN9ryCO8B9IVhNUow" name=",_fLQVwASUEdytl_tvTY5QOQ" guid="-YFOkrAN9ryCO8B9IVhNUow" changeDate="2007-05-25T15:56:45.078-0700" version="1.0.0">
  <mainDescription>&lt;p>&#xD;
    &lt;strong>Asset Versioning Levels&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are generally two major levels for versioning with assets: the asset version and the artifact version. The&#xD;
    artifact version is typically managed and dictated by the source control management (SCM) system, whereas the asset&#xD;
    version is generally dictated by the policies of the enterprise and managed by the repository. In some cases, you may&#xD;
    want to allow the Repository to dictate, or perhaps suggest the next version&amp;nbsp;number or label of the asset. The&#xD;
    image below illustrates these two major levels for versioning.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;323&quot; alt=&quot;Two major levels for versioning: asset version and artifact version.&quot;&#xD;
    src=&quot;./resources/assetversionpolicy1.gif&quot; width=&quot;476&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is necessary to understand the nature of the relationship between the asset repository and the SCM. Some&#xD;
    Repositories store the asset artifacts in the Repository, by value, whereas others reference the artifacts in the SCM&#xD;
    by storing the references in the repository.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>What Asset Changes Constitute A New Version?&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When determining the asset versioning policies it is useful to understand the kinds of changes that can happen to&#xD;
    assets in the Repository. One way to look at this is to categorize the changes. There are two major kinds of changes,&#xD;
    &lt;em>structural changes&lt;/em>, and &lt;em>non-structural changes&lt;/em>. Structural changes include altering the content of&#xD;
    the asset, meaning the artifacts and the asset's relationships. So if the content of an artifact is changed, thereby&#xD;
    creating a new version of the artifact in the SCM, and the asset now needs to point to this new version of the&#xD;
    artifact, then this would require a new version of the asset.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;298&quot; alt=&quot;A relationship between the version 2.5 asset and the version 3 asset.&quot;&#xD;
    src=&quot;./resources/assetversionpolicy2.gif&quot; width=&quot;485&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the image above a relationship between the version 2.5 asset and the version 3 asset is illustrated. Preserving&#xD;
    these relationships between asset versions provides traceability and impact analysis.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Changing or adding relationships&amp;nbsp;to an asset is also considered a structural change, and requires a change in the&#xD;
    asset's version. In the first image above, if the XYZ Component had a new relationship to another test asset, say ABC&#xD;
    Integration Test, then the XYZ Component version should be updated.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Non-structural changes include those&amp;nbsp;that affect certain metadata of the asset. The metadata structure for assets&#xD;
    is described by the OMG Reusable Asset Specification (RAS: &lt;a href=&quot;http://www.omg.org/&quot;&#xD;
    target=&quot;_blank&quot;>www.omg.org&lt;/a>).&amp;nbsp;However, some metadata does describe structural aspects of the asset, such as&#xD;
    artifact metadata and asset relationship metadata. The image below illustrates some of the candidate non-structural&#xD;
    metadata in RAS. The intent is that if the non-structural metadata changes, then no new asset version is required.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;398&quot; alt=&quot;Candidate non-structural metadata in RAS.&quot; src=&quot;./resources/assetversionpolicy3.gif&quot;&#xD;
    width=&quot;399&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Using Impact Analysis When Versioning An Asset&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When a new asset version is required, conduct an impact analysis to determine those affected by the new version. Those&#xD;
    affected include related assets, asset consumers including people, projects, existing applications and perhaps tools.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The related asset section of the asset metadata provides a way to examine impacted assets. However, the Repository and&#xD;
    the organization needs to manage other affected parties such as Asset Consumers, Asset Producers and Owners, Sponsors&#xD;
    funding the asset, Engagements and Projects using the asset and also software release and build engineers who have&#xD;
    included the asset in a software build.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Developing Assets in A Distributed Team Environment&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another key consideration when specifying the asset versioning policy is to understand how an asset is developed in a&#xD;
    distributed team environment. There are multiple topologies possible; two are introduced here. In the first topology&#xD;
    the asset repository and the SCM are co-located in each site. This topology implies that replication is&amp;nbsp;required&#xD;
    for both the Repository as well as for the SCM. If replication occurs, then the issues of asset and artifact site or&#xD;
    location ownership needs to be established for asset and artifact versioning to be safely administered.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;408&quot; alt=&quot;The asset repository and the SCM are co-located in each site.&quot;&#xD;
    src=&quot;./resources/assetversionpolicy4.gif&quot; width=&quot;331&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the second topology, a single asset repository exists in the organization with distributed SCMs at each site. The&#xD;
    single asset repository references artifacts in the distributed SCMs. There are no asset replication issues to address,&#xD;
    but certainly there are issues of artifact replication and ensuring the asset metadata points to the proper location&#xD;
    for artifacts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;427&quot; alt=&quot;A single asset repository for the organization with distributed SCMs at each site.&quot;&#xD;
    src=&quot;./resources/assetversionpolicy5.gif&quot; width=&quot;266&quot; />&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ArtifactDescription>
