<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:PracticeDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-y_dsLfjLI0liJNSTUMx7ug" name="mb_test,_tEAYcLePEd-05egMquN4Dg" guid="-y_dsLfjLI0liJNSTUMx7ug" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    Modeling brings to the table two primary advantages: the ability to focus on different aspects of a system (such as&#xD;
    functional, state behavioral, algorithmic, or structural) and to look at those aspects at different levels of&#xD;
    abstraction from simple functions and data structures all the way up to systems of systems. Model-based engineering&#xD;
    brings these benefits to the engineering of systems. Model-based testing (MBT) brings the same benefits to testing.&#xD;
    This practice describes the application of MBT to MBE-developed systems.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A key aspect to MBT is Test-Driven Development (TDD). The fundamental idea behind TDD is to create and apply tests&#xD;
    during the creation of software and system elements rather than at some time in the future. This is typically done in a&#xD;
    very rapid cycle known as the nanocycle that executes within 20-60 minutes. MBT applies TDD to MBE so that as model&#xD;
    elements (classes, states, functions, types, etc) are created, model-based tests are created and applied at the same&#xD;
    time. The benefit is defect avoidance rather than later, much more expensive defect identification and removal.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:PracticeDescription>
