<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-pDnQxVUmc2Rvs2gek3H9iQ" name="business_worker,2.0515380886761288E-306" guid="-pDnQxVUmc2Rvs2gek3H9iQ" changeDate="2009-10-09T08:53:18.552-0700" version="7.1.0">
  <mainDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_business_worker__guidelines_for&quot; name=&quot;XE_business_worker__guidelines_for&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Explanation&quot; name=&quot;Explanation&quot;>Explanation&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A &lt;b>business worker&lt;/b> represents an abstraction of a human, software or hardware, or a composite of these,&amp;nbsp;that&#xD;
    acts within the business. A business worker object interacts with other business worker objects and manipulates&#xD;
    business entity objects in order to realize a business use-case instance.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A business worker is instantiated (&quot;staffed&quot; in the case of a business worker role bound to&amp;nbsp;a human) when the&#xD;
    workflow of its corresponding use-case instance is started or, at the latest, just in time for the&amp;nbsp;object doing&#xD;
    the job to play&amp;nbsp;its role in the use-case instance realization. A business worker object often &quot;lives&quot; (for&#xD;
    example, the person is engaged) as long as the business use case realization&amp;nbsp;executes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you choose to bind a human worker to a business worker role, you are also creating a mapping into a Worker&#xD;
    Viewpoint and its extension in business modeling, the Human Resources View (see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.bus.common.extend-ibm/guidances/concepts/business_architecture_DA6A4C.html&quot; guid=&quot;_LBT9wE-9Ed6hzZ6BBpIuVw&quot;>Concept: Business Architecture&lt;/a>). This is useful when considering the attributes,&#xD;
    operations and characteristics of the business worker, to ensure that they are supportable within the organization.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Attributes&quot; name=&quot;Attributes&quot;>Attributes&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A human business worker may have a checklist she must follow. She may also have information that she provides to other&#xD;
    workers or business entities as she executes a business use case, such as her security level, e-mail address, and so&#xD;
    on.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This kind of information can either be described implicitly in the textual description of the business worker, or&#xD;
    modeled explicitly as an attribute of the business worker.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An attribute is of a certain type. An attribute has a name, preferably a noun that describes the attribute's role in&#xD;
    relation to the class. An attribute type can be more or less primitive, starting from a simple number or string.&#xD;
    Different classes can have attributes with identical structures. Those attributes should share a description; that is,&#xD;
    they should share attribute type.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An attribute may be more or less tangible. For instance, you might model as an attribute the information that a certain&#xD;
    business worker must keep in mind as he executes a business use case. For example, characteristic &quot;suspicious&#xD;
    behaviors&quot; are kept in the minds of trained customs agents to identify who to pull aside for questioning.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note: You should only model attributes to make a business worker more understandable!&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;XE_business_worker__operations_on&quot; name=&quot;XE_business_worker__operations_on&quot;>&lt;/a>&lt;a id=&quot;Operations&quot; name=&quot;Operations&quot;>Operations&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    An &lt;b>operation&lt;/b> provided by a business worker represents a specific task to be performed by an&amp;nbsp;instance of&#xD;
    that class. The operation of a business worker is initiated by a &lt;b>message&lt;/b> from another&amp;nbsp;business worker&#xD;
    object&amp;nbsp;or from an actor. An operation has a &lt;b>name&lt;/b> and, optionally, &lt;b>parameters&lt;/b>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An operation describes a task a business worker may be asked to perform. It is initiated by a message. To perform&#xD;
    the&amp;nbsp;role in a use case realization, a business worker performs one, or several tasks.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When designing a business worker - that is, when defining what a business worker must be able to do in order to produce&#xD;
    the desired results of a business use case - you have two alternatives:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Write a general textual description of the work.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Explicitly define each task in the form of an operation, which in turn should be described textually. For each&#xD;
        operation, you define what message initiates its execution.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Each operation is defined by a name, which should&amp;nbsp;describe its purpose, and optionally, a number of parameters.&#xD;
    The parameters specify what an object of the class should expect to receive from an object that is requesting support&#xD;
    or making an access, and what the object will provide when the operation has been performed. As an example, you can&#xD;
    give parameters that reflect when a business worker should perform a particular step in the operation, or when the&#xD;
    business worker should access a certain business entity by initiating one of the business entity's operations.&#xD;
    Parameters can also represent tangible things that are exchanged.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Operations can be defined informally, or in more detail, depending on the importance or required level of detail in a&#xD;
    use case. A &quot;more detailed&quot; description might describe a behavior sequence that tells which attributes and&#xD;
    relationships are dealt with during its performance, how objects of other classes are contacted, and how it is&#xD;
    terminated.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Business Worker Characteristics&quot; name=&quot;Business Worker Characteristics&quot;>Business Worker Characteristics&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The characteristics of a business worker are really constraints on whatever is chosen to fulfill the role. For example,&#xD;
    in the case of a human business worker, you may be concerned about:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Prior knowledge and experience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Physical characteristics&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Social and physical environment&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Job, tasks, and requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Cognitive characteristics&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The successful performance of the role may depend on the performer meeting these criteria or being comfortable in a&#xD;
    particular environment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Similarly, software systems, and systems generally, may have constraints expressed on them to be suitable for use -&#xD;
    performance, capacity, responsiveness, for example.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;XE_business_worker__characteristics_of_a_good&quot; name=&quot;XE_business_worker__characteristics_of_a_good&quot;>&lt;/a>&lt;a id=&quot;Characteristics of Good Business Workers&quot; name=&quot;Characteristics of Good Business Workers&quot;>Checklist for Good&#xD;
    Business Workers&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Its name and description are clear and understandable.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each business worker has an association to the business entities it must know about.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each business worker has a link to the other business workers it must communicate with.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A business worker's relationships do not depend on each other.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each business worker participates in at least one business use case realization.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each relationship is used in the workflow of at least one business use case realization.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each of the business worker's operations is performed in the workflow of at least one business use case&#xD;
        realization.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
