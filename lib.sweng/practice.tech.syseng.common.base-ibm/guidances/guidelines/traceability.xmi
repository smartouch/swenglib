<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-v-FMFWBrlz8Uq4-pUnj01Q" name=",_0LQm8LNwEd6ufunCNQt1zA" guid="-v-FMFWBrlz8Uq4-pUnj01Q" changeDate="2009-12-03T11:35:53.046-0800" version="7.5.0">
  <mainDescription>&lt;h4>&#xD;
    Introduction&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Traceability needs to be implemented throughout any development.&amp;nbsp;This must include vertical traceability, between&#xD;
    levels of abstraction (for example, from a&amp;nbsp;system requirement&amp;nbsp;to one or more stakeholder requirements) and&#xD;
    horizontal traceability (for example from a&amp;nbsp;test case&amp;nbsp;to a system requirement).&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Uses of Traceability&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Traceability information is fundamental to impact analysis, particularly in assessing the impact of a proposed change.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is also fundamental to coverage analysis, both in the sense of ensuring that all relevant items at one level of&#xD;
    specification or development are adequately reflected at the next level, and also to assist in assessing test coverage.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For completeness, each requirement stated at one level of abstraction, must &lt;em>satisfy&lt;/em> one or more requirements&#xD;
    at the next higher level. Similarly, each requirement must be&amp;nbsp;&lt;em>verified&lt;/em> by at least one test.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Development Traceability&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The following are some examples in this domain:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Stakeholder Requirements--Trace-&amp;gt;Use Case: shows that Stakeholder Requirements&amp;nbsp;are derived from a Use Case&#xD;
        (and the Vision).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System Requirements--Trace-&amp;gt;Use Case: shows that System Requirements are derived from a Use Case (and the&#xD;
        Stakeholder Requirements).&amp;nbsp;Each&amp;nbsp;use cases groups a set of system requirements that support the capability&#xD;
        described by the use case.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Subsystem Requirements--Trace-&amp;gt;System Architecture Model: shows that Subsystem Requirements are derived from the&#xD;
        System Architecture Model (and the System Requirements).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Trade Study--Trace-&amp;gt; (Executable) Use-Case Model: shows that the Trade Study needs to consider elements of the&#xD;
        (Executable)&amp;nbsp;Use-Case Model in assessing solution candidates.&amp;nbsp;In particular, the key system functions&#xD;
        identified in the trade study are related to the system functions (action nodes on activity diagrams and operations&#xD;
        on use-case blocks) in the (Executable) Use-Case Model.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System Architecture Model--Trace-&amp;gt;Trade Study: shows that the contents of the System Architecture Model&#xD;
        represent the successful solution candidates as determined by the Trade Study. In particular, the subsystems&#xD;
        (system blocks) in the System Architecture Model are related to the winning solution candidates in the Trade Study.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Note, in some cases it is possible to reduce the amount of traceability information to manage by tracing only&#xD;
    &quot;higher-level&quot; requirements. However, the cost of doing this is that the granularity of trace information does not&#xD;
    permit detailed analysis and can become almost meaningless if taken over more than one level of requirement (for&#xD;
    example, sub-system requirement -&amp;gt; system requirement -&amp;gt; stakeholder requirement).&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Test Traceability&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    It is also necessary to be able to trace between test information and requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Both Stakeholder and System Requirements link to Test Cases that reside in the Verification Plan. They may, indeed,&#xD;
    share the same Test Cases. The relationships between Test Cases and the Use-Case Model and individual Use Cases reflect&#xD;
    the fact that it is frequently valuable to test against high level scenarios and the structure of a Test Case may be&#xD;
    informed by the structure of a Use Case.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Work Item List Traceability&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Work Items may also establish traceability between process tasks and artifacts to support tracking of work, support&#xD;
    workflows and to provide auditability.&amp;nbsp;For example,&amp;nbsp;an work item references a use case&amp;nbsp;and specifies&#xD;
    that some work needs to be done on this use case. One or more changes sets will implement the work item and maintain&#xD;
    traceability to the artifacts that are changed as a result of the work performed.&amp;nbsp;With appropriate tools this&#xD;
    traceability can be completely automated.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
