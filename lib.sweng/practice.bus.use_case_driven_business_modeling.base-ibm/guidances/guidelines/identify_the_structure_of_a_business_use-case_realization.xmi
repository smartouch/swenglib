<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-wGUORC3B4tANvU_Bd1ckzw" name="identify_the_structure_of_a_business_use-case_realization,_W9dxkHL6Ed6bjOEjgEchEQ" guid="-wGUORC3B4tANvU_Bd1ckzw" changeDate="2011-07-14T14:27:55.611-0700" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    Each message between business elements on a sequence diagram must be supported by a structural relationship.&amp;nbsp;For&#xD;
    instance, a&amp;nbsp;business worker can't request that a business entity perform an operation without having some way to&#xD;
    inform the entity of the request. The nature of the relationship depends on what the element is, so the relationship&#xD;
    could represent a network connection, an interpersonal relationship, a business contract, etc.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../practice.bus.use_case_driven_business_modeling.base-ibm/guidances/examples/class_diagram_realizing_a_use_case_48EA3ECF.html&quot;&#xD;
     guid=&quot;_VBKSYHL5Ed6bjOEjgEchEQ&quot;>Example: Class Diagram realizing a Business Use Case&lt;/a> for an example of a business&#xD;
    use-case realization structure.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Identify the Relationships in a Sequence Diagram&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Create one UML class diagram for your business use-case realization. This diagram illustrates the structure required to&#xD;
    support all relationships needed to realize the scenarios in the business use-case realization. Add all the business&#xD;
    elements from all the sequence diagrams into the class diagram. There will likely be many business elements that appear&#xD;
    in multiple sequence diagrams. These only need to be added to the class diagram once.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For each message or request that's made from one business element to another, add a one-way&amp;nbsp;association in the&#xD;
    class diagram from the requesting element to the element that performs the requested operation. If you find two&#xD;
    elements that make requests of each other, use a single bi-directional association. If a relationship from one entity&#xD;
    to another already exists, leave it alone (any number of operations can be requested using a single relationship)&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Add Multiplicity and Roles&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Examine the relationships and determine their multiplicity. Start with 1-to-1 relationships and ask if one element&#xD;
    needs to access more than one instance of another element. For example, sequence diagrams can show that a service&#xD;
    supports requests from various business elements of the same type. If it can handle those requests in parallel, there&#xD;
    will be a many-to-one relationship between the elements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Check Diagram for Readability and Consistency&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Review the diagram to assure it's readable and properly describes the relationships between business elements. Make any&#xD;
    changes necessary&amp;nbsp;that will improve the accuracy and usability of the information.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
