<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-wdjQOSUivDdtwErOHRr5ZQ" name=",_MPsycHq9Ed6TH_N7AhVgiA" guid="-wdjQOSUivDdtwErOHRr5ZQ" changeDate="2009-09-03T13:24:34.734-0700" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    This task uses conventional component design approaches to describe how &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_component_54F50804.html&quot; guid=&quot;_Gcmp8GZaEd65K8S2sWS35w&quot;>service components&lt;/a> realize the services that have been allocated to them.&amp;nbsp;&#xD;
    After this task is completed, you have the following results:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The operations and attributes of each &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/functional_component_595EAFE6.html&quot; guid=&quot;_Ocmr0GWpEd6Zd-lbA790BQ&quot;>functional component&lt;/a> and each &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/technical_component_D89DA554.html&quot; guid=&quot;_RjrxgGWpEd6Zd-lbA790BQ&quot;>technical component&lt;/a> that support the service component have been defined&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The relationships between the functional and technical components have been defined&#xD;
  &lt;/li>&#xD;
    &lt;li>&#xD;
        The interactions between the functional and technical components, which realize each service component operation,&#xD;
        have been described&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
  <sections xmi:id="_P2UyoHu0Ed6TH_N7AhVgiA" name="Describe service component attributes" guid="_P2UyoHu0Ed6TH_N7AhVgiA">
    <sectionDescription>If model-based approaches for designing the service components are being used, substantial information regarding the&#xD;
characteristics of the service components will be captured as a matter of course.&amp;nbsp; If text-based design methods are&#xD;
being used, manually capture the following information:&amp;nbsp; &#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Properties or attributes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Constraints (rules)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Variations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Dependencies&amp;nbsp;upon other service components&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Composing functional and technical components&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Services provided&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Services required&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Non-functional requirements to be satisfied.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
Leverage the service model to better understand which services need to be provided and which ones are required.&lt;br /></sectionDescription>
  </sections>
  <sections xmi:id="_YgzPcHu0Ed6TH_N7AhVgiA" name="Identify component events and messages" guid="_YgzPcHu0Ed6TH_N7AhVgiA">
    <sectionDescription>&lt;p>&#xD;
    Examine the services that have been allocated to the service component, and then do the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identify each service request (operation call)&amp;nbsp;to which&amp;nbsp;the service component must respond.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identify each outgoing request (on a required interface) that the service component sends.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identify the incoming and outgoing message content for the operations.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Identify other events, such as data changes, to which the service component must respond.&amp;nbsp; For example, a given&#xD;
    technical component might provide an interface to an external data source that is monitored for change.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Document this information in the&amp;nbsp;Component model.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_iicTgHu0Ed6TH_N7AhVgiA" name="Model service component internal flow" guid="_iicTgHu0Ed6TH_N7AhVgiA">
    <sectionDescription>&lt;p>&#xD;
    Use behavioral modeling methods, such as activity or interaction modeling, to reason through how the functional&#xD;
    components and technical components interact as the service component responds to each of the previously-identified&#xD;
    events.&amp;nbsp; If new components, operations, or attributes are discovered during behavioral modeling, add them to the&#xD;
    appropriate component.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
Document these details in the&amp;nbsp;component design. &lt;/p>&lt;br /></sectionDescription>
  </sections>
  <sections xmi:id="_m0eJYHu0Ed6TH_N7AhVgiA" name="Model service component internal structure" guid="_m0eJYHu0Ed6TH_N7AhVgiA">
    <sectionDescription>&lt;p>&#xD;
    Use prior knowledge of the&amp;nbsp;component model&amp;nbsp;structure, plus the results of the behavioral modeling, to&#xD;
    describe the operations, attributes, and relationships of the service component's internal elements.&amp;nbsp; Use patterns&#xD;
    [&lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.tech.common.base/guidances/supportingmaterials/references.tech_6CCF393.html&quot; guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>GAM95&lt;/a>, ARS00, for example] &amp;nbsp;to regularize your results.&amp;nbsp; &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.tech.common.extend_supp_soa-ibm/guidances/guidelines/service_component_patterns_24F299DA.html&quot; guid=&quot;_iQvsEGWmEd6Zd-lbA790BQ&quot;>Guideline: Service Component Patterns&lt;/a>&amp;nbsp;provides examples of some common patterns&#xD;
    that are applied to organize service components and their supporting functional and technical components.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Examine the result and refactor, if possible, to increase flexibility and reusability.&amp;nbsp; Use&amp;nbsp;&lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/variability_analysis_5DE99340.html&quot; guid=&quot;_Tt8JMEo3Ed6D_7XK49c0nw&quot;>Variability Analysis&lt;/a> techniques to&amp;nbsp;help here.&amp;nbsp; &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.tech.common.extend_supp_soa-ibm/guidances/guidelines/variability_analysis_AF5936CF.html&quot; guid=&quot;_lP-BoFbREd6MCpkuB85p5g&quot;>Guideline: Variability Analysis&lt;/a>&amp;nbsp;provides some concrete advice regarding&#xD;
    refactoring best practices.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
Document these results in the&amp;nbsp;component design. &lt;/p></sectionDescription>
  </sections>
  <purpose>&lt;p>&#xD;
    Specify the internal behavior and structure of service components, to the level of specifying the external view of the&#xD;
    functional and technical components that realize them.&#xD;
&lt;/p></purpose>
</org.eclipse.epf.uma:TaskDescription>
