<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-QA7jEX5J8MWDgtk89UABgw" name="rsa_create_and_configure_participants,_940rIJqHEd6QY_56pVRTLw" guid="-QA7jEX5J8MWDgtk89UABgw" changeDate="2011-05-02T09:38:19.938-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    &lt;font size=&quot;4&quot;>&lt;strong>Overview&lt;/strong>&lt;/font>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Along with &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_interface_soaml_CA95983A.html&quot;&#xD;
    guid=&quot;_N5e2oFbBEd6MCpkuB85p5g&quot;>ServiceInterfaces&lt;/a>, &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/participant_soaml_1A392457.html&quot;&#xD;
    guid=&quot;_zL3kgFbAEd6MCpkuB85p5g&quot;>Participants&lt;/a> (the collective term for &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/termdefinitions/service_provider.supp_soa_478061A7.html&quot;&#xD;
     guid=&quot;_ewRWAIRSEd6jqtIeWlQI8A&quot;>service providers&lt;/a> and &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend-ibm/guidances/termdefinitions/service_consumer_91384414.html&quot;&#xD;
    guid=&quot;_HDs9YIQuEd6VVeXj3w86dA&quot;>service consumers&lt;/a>) are one of the central structural elements of a &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_model_FC39652E.html&quot;&#xD;
    guid=&quot;_T-AiUEozEd6D_7XK49c0nw&quot;>service model&lt;/a>.&amp;nbsp; In this tool mentor, you do these tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Review%20Model%20Structure&quot;>Review Model Structure&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Identify%20and%20Create%20Needed%20Participants&quot;>Identify and Create Needed Participants&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Create%20ServicePoints%20and%20Type%20with%20ServiceInterfaces&quot;>Create ServicePoints and Type with&#xD;
        ServiceInterfaces&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Identify%20Composite%20Services&quot;>Identify Composite Services&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Provision%20Participants%20for%20Composite%20Services&quot;>Provision Participants for Composite Services&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Modelâ‚¾haviors%20for%20Provided%20Service%20Operations&quot;>Model Behaviors for Provided Service&#xD;
        Operations&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Create%20the%20Participant%20Overview%20Diagram&quot;>Create the Participant Overview Diagram&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Model element creation techniques are described in &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/toolmentors/rsa_create_soaml_model_elements_BD37AE8F.html&quot;&#xD;
     guid=&quot;_E-Ow8JpvEd6o74-wQ-l20w&quot;>Tool Mentor: Create SoaML Model Elements&lt;/a>. Those instructions are not repeated&#xD;
    here.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The provided instructions apply for Rational Software Architect for WebSphere Software, Version 7.5.4 or&#xD;
    later.&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Review Model Structure&quot; name=&quot;Review Model Structure&quot;>Review the model structure&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The diagram that follows illustrates the portions of the&amp;nbsp;service model structure that are used in this tool&#xD;
    mentor. These are among the notable aspects:&#xD;
&lt;/p>&#xD;
&lt;ul dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;li>&#xD;
        Participants and supporting model elements are packaged within the implementation packages portion of the service&#xD;
        model (the portion that commonly is rooted in &quot;com,&quot; &quot;org,&quot; etc.).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A building block is available for quickly creating a Participant, its enclosing package, and its supporting model&#xD;
        elements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The building block comes with a fairly rich set of supporting elements, including provision for defining a&#xD;
        privately-owned ServiceInterface and creating privately-owned service data model definitions.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p dir=&quot;ltr&quot;>&#xD;
    &amp;nbsp; &lt;img height=&quot;600&quot; alt=&quot;&quot; src=&quot;./resources/participant_model_structure.jpg&quot; width=&quot;599&quot; />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Identify and Create Needed Participants&quot; name=&quot;Identify and Create Needed Participants&quot;>Identify and Create&#xD;
    Needed Participants&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Begin by creating a Participant to provision each ServiceInterface. If you have decided to represent &quot;simple&quot;&#xD;
    ServiceInterfaces (ones that offer only a single provided interface) as unstereotyped UML Interfaces, create a&#xD;
    Participant to provision each of these UML Interfaces, as well. Henceforth in this tool mentor, we use the term&#xD;
    &quot;ServiceInterface&quot; to refer to both ServiceInterfaces and to UML interfaces which play the ServiceInterface role.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Create the Participant by following these steps:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Select the &lt;strong>&lt;font&#xD;
        face=&quot;Courier New, Courier, mono&quot;>&amp;lt;&amp;lt;serviceParticipantPackage&amp;gt;&amp;gt;&lt;/font>&lt;/strong> building block, copy&#xD;
        it, and&amp;nbsp;paste it into the appropriate location within the implementation package structure.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use standard building block text find-and-replace procedures to name the package and its contents appropriately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        If you intend to retain the internal &lt;font&#xD;
        face=&quot;Courier New, Courier, mono&quot;>&amp;lt;&amp;lt;serviceSpecPackage&amp;gt;&amp;gt;&lt;/font>, perform a second round of&#xD;
        find-and-replace to name that package, its contents, and the ServicePoint which is provided with the building&#xD;
        block.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Delete the &lt;font face=&quot;Courier New, Courier, mono&quot;>&amp;lt;&amp;lt;serviceSpecPackage&amp;gt;&amp;gt;&lt;/font> and the &lt;font&#xD;
        face=&quot;Courier New, Courier, mono&quot;>&amp;lt;&amp;lt;ServicePoint&amp;gt;&amp;gt; ${serviceSpec}&lt;/font> elements if you will not be&#xD;
        using them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Delete or retain the packages for the locally defined service data model, based upon whether you will be defining&#xD;
        and using shared data definitions or private definitions. Even if you intend to use shared definitions of&#xD;
        enumerators, &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
        href=&quot;./../../../core.tech.common.extend-ibm/guidances/termdefinitions/message_F04CD4DA.html&quot;&#xD;
        guid=&quot;_-1aDcJf7Ed6l6vBsNJSPDA&quot;>messages&lt;/a>, and &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
        href=&quot;./../../../core.tech.common.extend-ibm/guidances/termdefinitions/parameter_type_8B026E69.html&quot;&#xD;
        guid=&quot;_vZhEkJf4Ed6l6vBsNJSPDA&quot;>parameter types&lt;/a>, it often makes sense to retain the &lt;a&#xD;
        class=&quot;elementLinkWithUserText&quot;&#xD;
        href=&quot;./../../../core.tech.common.extend-ibm/guidances/termdefinitions/information_type_4B464FEE.html&quot;&#xD;
        guid=&quot;_eKae0Jf5Ed6l6vBsNJSPDA&quot;>infotypes&lt;/a> package to define&amp;nbsp;any private data that is owned by the&#xD;
        Participant.&amp;nbsp;See &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/supportingmaterials/pattern_08_model_data_control_points_8D5026CE.html&quot;&#xD;
         guid=&quot;_mCnegHobEd6spLUpguTNDw&quot;>Pattern 08: Model Data Control Points&lt;/a>&amp;nbsp;for a discussion regarding why it&#xD;
        can be useful to define private information types. If you decide to create locally defined data element&#xD;
        definitions, refer to &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../practice.tech.soma.service_specification.base-ibm/guidances/toolmentors/rsa_specify_service_interfaces_90D37F6D.html&quot;&#xD;
         guid=&quot;_1BF1cJqHEd6QY_56pVRTLw&quot;>Tool Mentor: Specify Service Interfaces&lt;/a>&amp;nbsp;for instructions on data model&#xD;
        creation procedures.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    A one-to-one mapping between Participants and ServiceInterfaces is not mandatory.&amp;nbsp;See &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../practice.tech.soma.service_specification.base-ibm/guidances/concepts/considerations_in_service_provider_selection_88883BF0.html&quot;&#xD;
     guid=&quot;_Jm4HUJgPEd6l6vBsNJSPDA&quot;>Concept: Considerations in Service Provider Selection&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Create ServicePoints and Type with ServiceInterfaces&quot;&#xD;
    name=&quot;Create ServicePoints and Type with ServiceInterfaces&quot;>Create ServicePoints and type with ServiceInterfaces&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    For each ServiceInterface that a Participant provisions, create a ServicePoint and type it with the ServiceInterface:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Select the Participant, either in Project Explorer or on a Free Form, Class, or Component diagram.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Right-click and select the &lt;strong>Add Service Modeling &amp;gt; ServicePoint&lt;/strong> menu item.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Choose the pop-up option to &lt;strong>Select Existing Element&lt;/strong>.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use the resulting dialog to select the ServiceInterface with which the ServicePoint is to&amp;nbsp;be typed.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Identify Composite Services&quot; name=&quot;Identify Composite Services&quot;>Identify composite services&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Examine the previous results from service collaboration work (&lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../practice.tech.soma.service_specification.base-ibm/guidances/toolmentors/rsa_analyze_service_collaborations_9386A599.html&quot;&#xD;
     guid=&quot;_K9IWUJqFEd6QY_56pVRTLw&quot;>Tool Mentor: Analyze Service Collaborations&lt;/a>) to identify the Roles, Properties, or&#xD;
    Partitions that represent &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend-ibm/guidances/termdefinitions/composite_service_2B492DE6.html&quot;&#xD;
    guid=&quot;_Hm7qcIQnEd6pOcahJ5wBfA&quot;>composite services&lt;/a>. To do this, identify the Lifelines (for Sequence diagrams) and&#xD;
    the Partitions (for Activities), which both provide and consume exposed services.&amp;nbsp;Examples:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Role2, in &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../practice.tech.soma.service_specification.base-ibm/guidances/examples/service_interfaces_from_a_complex_set_of_role_interactions_EC625647.html&quot;&#xD;
         guid=&quot;_4CI2wJd1Ed6K4On4I33bEg&quot;>Example: ServiceInterfaces from a Complex Set of Role Interactions&lt;/a>. Here, Role1&#xD;
        requests a service from Role2, and Role2 calls on Role3 and Role4 to implement that service. The operations of the&#xD;
        ServiceInterface that is the type for Role2 are realized by using the&amp;nbsp;operations of the ServiceInterfaces that&#xD;
        type Role3 and Role4.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        orderProcessor, in the Activity diagram in &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../practice.tech.soma.service_specification.base-ibm/guidances/examples/model_service_collaborations_A2E5155F.html&quot;&#xD;
         guid=&quot;_x4hbYJY8Ed6Ix90EO0mdwQ&quot;>Example: Model Service Collaborations&lt;/a>, is asked to provide a Process Purchase&#xD;
        Order service. It uses productions, shipper, and invoicer to realize this service. The operation of the&#xD;
        ServiceInterface that types orderProcessor is realized using the operations of the ServiceInterfaces that type&#xD;
        productions, shipper, and invoicer.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Ensure that at least one of the roles that is being asked to support the realization of the composite actually has been&#xD;
    selected to be an exposed service (by litmus testing). Otherwise, the role that appears to be &quot;composite&quot; is not.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Identify the ServiceInterface&amp;nbsp;that types each Role,&amp;nbsp;Property, or Partition&amp;nbsp;that represents a composite:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Select the composite's Role, Property, or Partition&amp;nbsp;under the Service Collaboration.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        In the Properties View, select the &lt;strong>General&lt;/strong> tab and identify the type to which the element has been&#xD;
        set.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    Using similar procedures, identify each ServiceInterface which types each Role, Property, or Partition that helps&#xD;
    realize the composite.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Provision Participants for Composite Services&quot; name=&quot;Provision Participants for Composite Services&quot;>Provision&#xD;
    participants for composite services&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    For each ServiceInterface that is to be&amp;nbsp;implemented as a composite, navigate to each Participant&#xD;
    that&amp;nbsp;provides&amp;nbsp;it.&amp;nbsp;For each&amp;nbsp;ServiceInterface that helps realize the composite,&amp;nbsp;add a&#xD;
    RequestPoint to the Participant and type it with the ServiceInterface:&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;font size=&quot;3&quot;>A. Identify Participants that provide the composite&lt;/font>&#xD;
&lt;/h4>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        From the Rational Software Architect toolbar menu, select &lt;strong>Search &amp;gt; Search... Model Search&lt;/strong>.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Under Scope, de-select &lt;strong>All Models&lt;/strong> and select the model that contains the composite's&#xD;
        ServiceInterface.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        In the Configure Search Set dialog, provide a name for the Search Set.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Under Search string, provide the name of the composite's ServiceInterface, and then select &lt;strong>Search.&lt;/strong>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        From the Search results list, identify the &lt;strong>Declaration of&#xD;
        the&amp;nbsp;ServiceInterface&lt;/strong>.&amp;nbsp;Double-click that list item.&lt;br />&#xD;
        You will be&amp;nbsp;to be taken to the ServiceInterface in Project Explorer.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Select the element, right-click, and select &lt;strong>Modeling References &amp;gt; Enclosing Model&lt;/strong>.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        From the search list, identify the ports that reference the ServiceInterface. Select&amp;nbsp;one of those entries to&#xD;
        be taken to the Participant&amp;nbsp;that provides that composite.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;h4>&#xD;
    &lt;font size=&quot;3&quot;>B. Create RequestPoints and type them with ServiceInterfaces&lt;/font>&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    For each ServiceInterface that helps realize the composite, create a RequestPoint on the Participant&amp;nbsp;and type it&#xD;
    with the ServiceInterface:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Select the Participant, either in Project Explorer or on a Free Form, Class, or Component diagram.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Right-click and select the &lt;strong>Add Service Modeling &amp;gt; RequestPoint&lt;/strong> menu item.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Choose the pop-up option to &lt;strong>Select Existing Element&lt;/strong>.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use the resulting dialog to select the ServiceInterface with which the RequestPoint&amp;nbsp;is to&amp;nbsp;be typed.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Model Behaviors for Provided Service Operations&quot; name=&quot;Model Behaviors for Provided Service Operations&quot;>Model&#xD;
    behaviors for provided service operations&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Model the implementation of each provided service operation using an ownedBehavior (an Activity or an Interaction). If&#xD;
    you&amp;nbsp;want to later use the UML-to-SOA transformation tool in Rational Software Architect to generate &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.bus.common.extend-ibm/guidances/termdefinitions/bpel_E0043DD7.html&quot;&#xD;
    guid=&quot;_uv8g0IhaEd6oeZacNg1BdA&quot;>BPEL&lt;/a> (which reflects the SOA architect's design for the operation), use an Activity.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For each provided operation, follow these steps:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Create the ownedBehavior -- either an Activity or an Interaction -- under the Participant, so that it is directly&#xD;
        owned by the Participant. If you are using an Interaction, create a Sequence diagram under that.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Name the ownedBehavior the same as the operation.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        For Activity modeling, create partitions for each of the RequestPoints that is involved in the realization. Use the&#xD;
        &lt;strong>General&lt;/strong> tab of the Partition's Properties view to assign the RequestPoint as the type of the&#xD;
        Partition. Alternatively, drag the RequestPoint from the Project Explorer onto the Partition's name.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        For Sequence diagram modeling, drag the&amp;nbsp;ServicePoint and the RequestPoints onto the diagram to create the&#xD;
        Lifelines, with the ServicePoint being left-most. Initiate the Sequence diagram by drawing a message from the left&#xD;
        edge of the Sequence diagram's border to the ServicePoint's Lifeline. This creates a Gate at the diagram's edge;&#xD;
        the message extends from the Gate to the Lifeline.&amp;nbsp;Assign the provided operation's name to the message.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Model the behavior, using the previous results of service collaboration modeling to guide your understanding of how&#xD;
        the operation needs to be realized.&amp;nbsp;Follow the guidance in &lt;img height=&quot;16&quot; alt=&quot;&quot;&#xD;
        src=&quot;./resources/helpbook.gif&quot; width=&quot;16&quot; /> &quot;Modeling user workflow by using activity diagrams&quot; if you are&#xD;
        modeling behavior using Activities. Use &lt;img height=&quot;16&quot; alt=&quot;&quot; src=&quot;./resources/helpbook.gif&quot;&#xD;
        width=&quot;16&quot; />&amp;nbsp;&quot;Modeling the interactions between objects in UML&quot; if you are using interactions.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    If you intend to generate BPEL from Activities, you must model with additional precision. See &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/toolmentors/rsa_transform_uml_to_soa_64039779.html&quot;&#xD;
    guid=&quot;_XXFJQHLrEd6dsJb1-FWFSQ&quot;>Tool Mentor: Configure and Run the UML-to-SOA Transform&lt;/a>&amp;nbsp;for a discussion of the&#xD;
    pertinent considerations.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See [&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../practice.tech.soma.service_specification.base-ibm/guidances/supportingmaterials/references.ss_236B49D1.html&quot;&#xD;
     guid=&quot;_uH07wJgPEd6l6vBsNJSPDA&quot;>JAM09c&lt;/a>] for a detailed discussion of service operation behavior modeling.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Create the Participant Overview Diagram&quot; name=&quot;Create the Participant Overview Diagram&quot;>Create the Participant&#xD;
    Overview diagram&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Open the Service Participant Free Form diagram that was precreated as part of the original Participant building&#xD;
        block.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Drag the Participant onto the diagram.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Select the Participant, right-click, and select &lt;strong>Filters &amp;gt; Show External View&lt;/strong>.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Drag the Participant's ownedBehaviors onto the diagram.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Drag onto the diagram each provided interface from a ServicePoint and each required interface from a&#xD;
        RequestPoint.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    The result is expected to be similar to the first diagram in &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/examples/participant_soaml_DAFEB6B7.html&quot;&#xD;
    guid=&quot;_uO9JIFbBEd6MCpkuB85p5g&quot;>Example: Participant (SoaML)&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the last step above, you drag the provided interfaces from the ServicePoints, plus the required interfaces from the&#xD;
    RequestPoints. These&amp;nbsp;collectively define the interfaces the&amp;nbsp;Participant's &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_component_54F50804.html&quot;&#xD;
    guid=&quot;_Gcmp8GZaEd65K8S2sWS35w&quot;>Service Component&lt;/a> will need to realize during component specification and service&#xD;
    realization. We don't show the RequestPoints' provided interfaces here for a reason. RequestPoints represent the use,&#xD;
    not the provision, of the ServiceInterfaces with which they are typed. Those ServiceInterfaces are expressed from the&#xD;
    perspective of the Participant that provides the service, which is the reverse of the perspective of the Participant&#xD;
    that uses the service. So, the underlying Service Component for the requesting Participant&amp;nbsp;actually calls&#xD;
    (requires) the interfaces that are provided by RequestPoint ServiceInterfaces. Similarly, it&amp;nbsp;provides the&#xD;
    interfaces that the RequestPoint ServiceInterface requires.&amp;nbsp;&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
