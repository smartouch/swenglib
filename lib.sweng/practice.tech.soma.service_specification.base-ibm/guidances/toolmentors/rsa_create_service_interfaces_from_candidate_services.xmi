<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-B0qrWDhXvGVwSK-eU2-CeQ" name="rsa_create_service_interfaces_from_candidate_services,_4Hs6gIlDEd65XMCQ7LtxNw" guid="-B0qrWDhXvGVwSK-eU2-CeQ" changeDate="2009-11-15T16:29:42.359-0800" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    &lt;strong>&lt;font size=&quot;4&quot;>Overview&lt;/font>&lt;/strong>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    This tool mentor describes how to create &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/service_interface_soaml_CA95983A.html&quot; guid=&quot;_N5e2oFbBEd6MCpkuB85p5g&quot;>ServiceInterfaces&lt;/a> and to note their exposure from candidate services, which are&#xD;
    modeled using SoaML &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/concepts/capability_soaml_56747F9.html&quot; guid=&quot;_A5_hYFbBEd6MCpkuB85p5g&quot;>Capabilities&lt;/a>. The instructions apply for Rational Software Architect for WebSphere&#xD;
    Software, Version 7.5.4 or later. &amp;nbsp; &amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following steps are performed in this tool mentor:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Review%20Model%20Structure&quot;>Review Model Structure&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Create%20ServiceInterface%20from%20Building%20Block&quot;>Create ServiceInterface from Building Block&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a href=&quot;#Create%20ServiceInterface%20Directly%20from%20Capability&quot;>Create ServiceInterface Directly from&#xD;
        Capability&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Model element creation techniques are described in &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/toolmentors/rsa_create_soaml_model_elements_BD37AE8F.html&quot; guid=&quot;_E-Ow8JpvEd6o74-wQ-l20w&quot;>Tool Mentor: Create SoaML Model Elements&lt;/a>. Those instructions are not repeated here.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Review Model Structure&quot; name=&quot;Review Model Structure&quot;>Review the model structure&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The following diagram illustrates the portions of the&amp;nbsp;service model structure that are used in this tool mentor.&#xD;
    &amp;nbsp; Notable aspects include:&#xD;
&lt;/p>&#xD;
&lt;ul dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;li>&#xD;
        Capabilities are created in the Capabilities package. &amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An implementation package structure -- the part of the model that&amp;nbsp;&quot;owns&quot; the ServiceInterfaces and supporting&#xD;
        model elements -- has been created.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Important elements like ServiceInterfaces are packaged with supporting elements, such as diagrams.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Two building blocks are available to create ServiceInterface packages and the elements they contain:&amp;nbsp; &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                In one case, we create a ServiceInterface that is a stereotyped Class. This is used when the service is&#xD;
                involved in more than simple request-response communication patterns and thereby requires at least one&#xD;
                provided interface and at least one required interface. &amp;nbsp;&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                In the other case, we create a ServiceInterface that is a stereotyped Interface. &amp;nbsp; This is used when&#xD;
                the service is involved only in simple request-response communication.&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p dir=&quot;ltr&quot;>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br />&#xD;
    &amp;nbsp;&amp;nbsp; &lt;img height=&quot;594&quot; alt=&quot;&quot; src=&quot;resources/svc_if_mdl_structure.jpg&quot; width=&quot;582&quot; />&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Create ServiceInterface from Building Block&quot; name=&quot;Create ServiceInterface from Building Block&quot;>Create the&#xD;
    ServiceInterface from a building block&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Determine where the ServiceInterface you are about to create needs to be located within the implementation package&#xD;
        structure. In the Package Explorer, create the&amp;nbsp;hierarchy of owning packages if it doesn't already exist.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Select the appropriate ServiceInterface building block. If you aren't certain whether the ServiceInterface you are&#xD;
        creating will be &quot;simple&quot; or &quot;collaborative,&quot; select the &quot;collaborative&quot; building block.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Copy the building block and paste it under the appropriate owning package structure.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use standard building block text find-and-replace procedures to name the elements of the building block&#xD;
        appropriately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Create an &lt;font face=&quot;Courier New, Courier, mono&quot;>&amp;lt;&amp;lt;Expose&amp;gt;&amp;gt;&lt;/font> relationship from the&#xD;
        ServiceInterface to the capability. There are many ways to do this. We describe one. &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                In the Project Explorer, select the newly created ServiceInterface.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Right-click and select the &lt;strong>Add Services Modeling &amp;gt; Expose&lt;/strong> menu item.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Use the resulting dialog to identify the Candidate Service to which the relationship&amp;nbsp;is to be created.&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    It can be useful to build one or more diagrams that graphically depict the expose decisions. A Free Form diagram under&#xD;
    either the Capabilities package or the Services View is good for this. Communicate your decision to your fellow users,&#xD;
    so that you collectively can be consistent in your approach. In our &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../core.tech.common.extend_supp_soa-ibm/guidances/examples/soaml_design_model_sample_83612289.html&quot; guid=&quot;_AfQisHNIEd6va-EJWoOsvg&quot;>sample design model&lt;/a>, we depict the &lt;font     face=&quot;Courier New, Courier, mono&quot;>&amp;lt;&amp;lt;Expose&amp;gt;&amp;gt;&lt;/font> relationships on the Capabilities -- Overview diagram.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Create ServiceInterface Directly from Capability&quot; name=&quot;Create ServiceInterface Directly from Capability&quot;>Create&#xD;
    the ServiceInterface directly from a capability&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Place the capabilities from which ServiceInterfaces are to be exposed onto a Free Form diagram under the&#xD;
    &lt;strong>Capabilities&lt;/strong> package.&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Select each such capability.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Right-click, select &lt;strong>Add Services Modeling&lt;/strong> and then either Simple or Collaborating&#xD;
        ServiceInterface, whichever is appropriate.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    A new ServiceInterface is created, owned by the package that owns the&amp;nbsp;Free Form diagram you are using. An &lt;font face=&quot;Courier New, Courier, mono&quot;>&amp;lt;&amp;lt;Expose&amp;gt;&amp;gt;&lt;/font> relationship also is created from the ServiceInterface&#xD;
    to the capability.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Relocate the ServiceInterface to the appropriate place in the implementation package structure.&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Determine where the ServiceInterface you&amp;nbsp;created needs to&amp;nbsp;be located within the implementation package&#xD;
        structure. &amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        In the Package Explorer, create the&amp;nbsp;hierarchy of owning packages, if it doesn't already exist.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Under this owning package structure, create a package with key words that indicate that it is a&#xD;
        &amp;lt;&amp;lt;serviceSpecPackage&amp;gt;&amp;gt;.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Cut and paste (or drag)&amp;nbsp;the ServiceInterface from the Capabilities package and into the serviceSpecPackage.&#xD;
    &lt;/li>&#xD;
&lt;/ol></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
