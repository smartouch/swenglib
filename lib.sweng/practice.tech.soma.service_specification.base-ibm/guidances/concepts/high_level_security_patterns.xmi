<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-wK7xVRjfK0GuYWxGLsMasw" name="new_concept,_LvomIInCEd6k5atjvRl5MQ" guid="-wK7xVRjfK0GuYWxGLsMasw" changeDate="2009-09-25T05:31:45.250-0700" version="7.5.0">
  <mainDescription>&lt;h3> Identity and authentication &lt;/h3>&#xD;
&lt;p> An end user (either a human or another system)&amp;nbsp;has an identifier (user &#xD;
  name) or a set of identifiers (titles, roles, alias) and proofs (password). &#xD;
  To authenticate, the user presents the identifier and proof to an application &#xD;
  when prompted to identify&amp;nbsp;itself to the application. If the application &#xD;
  validates the identifier and proof, the user has successfully &quot;authenticated&quot; &#xD;
  and the identity is now an &lt;em>authenticated identity&lt;/em>. When an application &#xD;
  implements business logic and enforces its own security policies, it needs to &#xD;
  keep its data and metadata in an identity data or metadata repository (file &#xD;
  system, database). On the Web, the end users no longer solely have application &#xD;
  client code on their own systems. They often accesses applications through a &#xD;
  browser, and the network locates the application through a URI (universal resource &#xD;
  identifier) that is supplied by the end user. &lt;/p>&#xD;
&lt;h4> Single sign-on &lt;/h4>&#xD;
&lt;p> When a user has multiple applications&amp;nbsp;with different identifiers&amp;nbsp;and &#xD;
  proofs, it sometimes becomes difficult to manage the identity data and metadata &#xD;
  to make the appropriate decisions. Single sign-on (SSO) is a term applied to &#xD;
  various techniques (human and automated) to reduce this complexity. &lt;/p>&#xD;
&lt;p> Solutions for SSO can be client-based or server- or service-based, and they &#xD;
  can be tightly coupled or loosely coupled to the applications. Web-based SSO &#xD;
  refers to browser-based solutions, and it typically include cookies. In tightly &#xD;
  a coupled client-based SSO, the responsibility is on the user to register and &#xD;
  synchronize multiple IDs and passwords that are maintained in multiple application &#xD;
  repositories. Some SSO relies on &quot;identity mapping.&quot; Others provide &quot;identity &#xD;
  propagation&quot; or &quot;identity assertions.&quot; New initiatives in Federated SSO&amp;nbsp;enable &#xD;
  a user to register with a third party Identity Service Provider, which then &#xD;
  manages the user information, thus providing a loosely coupled alternative. &#xD;
  In enterprises, a backend SSO can include the enterprise acting as the ISP. &#xD;
  A backend SSO includes a common repository for all applications, and each application &#xD;
  or server is reconfigured to not use a local repository. Backend SSO solutions &#xD;
  can also maintain multiple repositories for user information and use a management &#xD;
  process to force the synchronization of the identity data in multiple repositories. &#xD;
  When multiple identities are involved, there are often requirements to isolate &#xD;
  applications into realms that often correlate to administrative domains. &lt;/p>&#xD;
&lt;h4>Digital identities &lt;/h4>&#xD;
&lt;p> As people and businesses have become more dependent on computer technology, &#xD;
  there has been a proliferation of identity-related information. With the awareness &#xD;
  of identity theft, governments are legislating requirements for businesses to &#xD;
  protect the identity information for which they are serving as custodians. &lt;/p>&#xD;
&lt;p> There are two major strategies for managing digital identities: &lt;/p>&#xD;
&lt;ul>&#xD;
  &lt;li>The first is &lt;strong>user-centric.&lt;/strong> It relies on users actively &#xD;
    participating in identity protection by &amp;quot;registering&amp;quot; with third-party &#xD;
    providers, and then granting permission to providers that they trust to access &#xD;
    their identity data and metadata. The Liberty Alliance is a consortium that &#xD;
    has been leading this strategy, but there is also an open source effort underway &#xD;
    with the Higgins initiative in partnership within The Apache Foundation.&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;ul>&#xD;
  &lt;li> The second is a &lt;strong>business-centered &lt;/strong>model in which a business &#xD;
    provides identity management services to its customers, partners, and employees. &#xD;
    Businesses deal with different volumes of information than individuals do &#xD;
    and, therefore, have different scaling requirements. Businesses also need &#xD;
    to have their own systems for managing user access, based on business roles &#xD;
    and changing business conditions (that is, you might always be &amp;quot;My Name,&amp;quot; &#xD;
    but you might not always work for XYZ Company). &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>Authorization &lt;/h4>&#xD;
&lt;p> As people and businesses have become more dependent on computer technology, &#xD;
  rules about who can access what resource have become codified. When designing &#xD;
  applications, the decision about who can access what information might depend &#xD;
  on business context information, or it might be externalized to the application &#xD;
  and handled by a separate set of middleware. Most products and computer systems &#xD;
  have implemented a set of &amp;quot;access control&amp;quot; mechanisms, but each one &#xD;
  usually keeps its own record of authorized user names mapped to resource names. &#xD;
  These are called access control lists.&lt;/p>&#xD;
&lt;h3> Message protection &lt;/h3>&#xD;
&lt;p> There are two basic types of protection: &lt;/p>&#xD;
&lt;ul>&#xD;
  &lt;li>&lt;strong>Integrity protection&lt;/strong> (proof that the message has not been &#xD;
    changed while in transit) &lt;/li>&#xD;
  &lt;li>&lt;strong>Confidentiality&lt;/strong> (application of cryptography to ensure &#xD;
    that only authorized recipients can see the message)&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> When messages are sent over a protocol, each message can be digitally signed &#xD;
  or encrypted, or the network protocol can sign and encrypt all traffic between &#xD;
  the two entry points. When the protocol provides the protection, it is often &#xD;
  said to be &lt;em>point-to-point&lt;/em> (that is,&amp;nbsp;network endpoint to network &#xD;
  endpoint). &lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
