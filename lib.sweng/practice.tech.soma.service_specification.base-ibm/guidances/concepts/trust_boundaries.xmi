<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-5_B0duNzYkldzr-by91wuQ" name="new_concept,_yT8rYInAEd6k5atjvRl5MQ" guid="-5_B0duNzYkldzr-by91wuQ" changeDate="2009-10-28T22:22:13.156-0700" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    Trust is a key aspect in any security solution. The need for security is based on the premise that two parties share&#xD;
    some level of trust. That level can be on a continuum, from &quot;completely trusted&quot; (therefore, no need for security) to&#xD;
    &quot;completely untrusted&quot; (where paranoia rules).&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        &lt;b>No trust, also known as &lt;em>blind trust&lt;/em>&lt;/b>: The provider might be providing a public service and has no&#xD;
        need to trust the invoking system. The invoking system&amp;nbsp;can send an identity with no proof and expect the&#xD;
        provider to assume the identity when processing the request. There might be no measures taken to prevent&#xD;
        impersonation attacks.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Network configuration-based trust&lt;/b>: There is no software configuration that provides trust. The network is&#xD;
        configured, possibly through division into firewalled subnets, in such a way to restrict the number of machines&#xD;
        that could transmit a message to the provider. The degenerative case would see only the intended invoking system&#xD;
        and provider system on the subnet. Sometimes VPNs are used to restrict the potential invoking systems.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Infrastructure-based trust&lt;/b>: The infrastructure (for example, the&amp;nbsp;transport protocol, possibly MA SSL or&#xD;
        SSL + BA) is configured to identify the invoking system to validate that it's a trusted system. There is nothing in&#xD;
        the Web services (SOAP) message, other than the invoker's identity, that the provider needs to&amp;nbsp;assume when&#xD;
        processing the request.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Token-based trust&lt;/b>: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                &lt;strong>Point-to-point token trust.&lt;/strong> There is a token in the message that asserts an invoker's&#xD;
                identity, and it was provably created by a trusted invoking system (for example, Security Assertion Markup&#xD;
                Language, SAML, or Lightweight Third-Party Authentication, LTPA).&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                &lt;strong>Third-party token trust.&lt;/strong> There is a token in the message that asserts an invoker identity&#xD;
                and which was provably created by a trusted third party system key distribution center (KDC), such&#xD;
                as&amp;nbsp;SAML or Kerberos.&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Token context-based trust&lt;/b>: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                &lt;strong>Signature that covers the token and message.&lt;/strong> There is a signature in the message. It is&#xD;
                created by a trusted invoking system that covers the message and the token, thus it asserts the invoker's&#xD;
                identity and authenticates the invoking system.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                &lt;strong>Two tokens in the message.&lt;/strong> There is a token in the message that authenticates the invoking&#xD;
                system as a trusted system and another token that identifies the invoker. There needs to be some mechanism&#xD;
                to bind the two tokens together and to the message, such as a signature.&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>A&lt;/strong>&lt;b>uthentication.&lt;/b> This is the extreme end of trust. Any token that provides proof removes the&#xD;
        need for an extra mechanism to establish trust.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;h3>&#xD;
    Trust zones&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    In large organizations, it is often efficient to subdivide the enterprise into administrative regions and establish&#xD;
    different trust zones. Between different zones, there are various subtypes of trust relationships that can be&#xD;
    established. These are examples of some of the ways that two parties can establish a trust relationship when only one&#xD;
    of the parties has a relationship with the end user:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Direct Trust - Token Exchange&lt;/b>&lt;strong>:&lt;/strong> Trust Domain 1 authenticates the end user, and Trust Domain&#xD;
        2 requires an identity or identifier (identity propagation). In some cases (for example, where&amp;nbsp;only&#xD;
        personalization is required), authentication might not be needed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Direct Trust - Token Validation&lt;/b>&lt;strong>:&lt;/strong> Trust Domain 1 might create a new assertion (an identity&#xD;
        assertion) offering its own proof that it has authenticated the identified user. Trust Domain 2 evaluates that this&#xD;
        assertion came from someone it trusts (Trust Domain 1) and uses it in place of authenticating the user itself.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Token Services and ISPs&lt;/b>&lt;strong>:&lt;/strong> Sometimes trust relationships are established among multiple&#xD;
        parties, and the authentication of the user is separated, as an independent service (identity service provider).&#xD;
        These identity service providers have various kinds of functionality. Some can look at the destination of the&#xD;
        request and determine whether the user has been authenticated, thus know if the current token needs to be exchanged&#xD;
        for a second token and can redirect this request to the appropriate parties.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Indirect Trust&lt;/b>&lt;strong>:&lt;/strong> Sometimes parties do not have a direct trust relationship, but they work&#xD;
        with a third party that they both trust to broker an exchange.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Delegation&lt;/b>: Combinations of direct and indirect trust relationships can be established&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
