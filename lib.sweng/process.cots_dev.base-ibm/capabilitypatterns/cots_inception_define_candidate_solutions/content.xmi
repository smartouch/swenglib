<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1">
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-C3w2Cyalh73T5Z8q-qthAw" name="cots_inception_define_candidate_solutions,_P6-zYffeEdmriJhf4djjLA" guid="-C3w2Cyalh73T5Z8q-qthAw" version="7.1.0">
    <mainDescription>&lt;p>&#xD;
    Once the information has been gathered within each sphere of influence, the goal is to manage the interaction and&#xD;
    integration of the information. The focus is now on identifying and resolving mismatches across the information, and on&#xD;
    combining the information to form a candidate solution that meet the demands of the most critical use cases and&#xD;
    non-functional requirements, architectural and design constraints, and project management constraints such as time,&#xD;
    money, people, and scope, with reasonable risks. These tasks require a heavy involvement from all the stakeholders (or&#xD;
    empowered representatives) that must be at the center of the negotiation process and hence drive the forming of the&#xD;
    candidate solution.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A solution is the integrated assembly of one or more COTS packages or COTS package components, legacy systems (piece of&#xD;
    the systems being replaced), reuse libraries, other reuse sources (e.g., freeware, shareware), any required custom code&#xD;
    (including wrappers and &quot;glue&quot;), appropriate linkage to the broader organization's architecture with which the solution&#xD;
    must interface, and changes to the user business processes necessary to match the processes provided in the COTS&#xD;
    packages. In this phase, a reasonable number of solutions will be formed based on the gathered information; these&#xD;
    solutions will be considered candidates until one is selected in the elaboration phase.&#xD;
&lt;/p></mainDescription>
    <scope>&amp;nbsp;</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-n32M9oZw_PswOZsGgIBOHg" name="business_case,_s_HSQuwsEd-sjp03to1LnQ" guid="-n32M9oZw_PswOZsGgIBOHg">
    <refinedDescription>For a commercial software product, the Business Case should include a set of assumptions about the project and the order of&#xD;
magnitude return on investment (ROI) if those assumptions are true. For example, the ROI will be a magnitude of five if&#xD;
completed in one year, two if completed in two years, and a negative number after that. These assumptions are checked again&#xD;
at the end of the Elaboration phase, when the scope and plan are defined with more accuracy.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yX_hyZqDsFAa6qiJ_ahpJA" name="cots_system_architect,_JO3_oRavEeCjx5QJHD1iHA" guid="-yX_hyZqDsFAa6qiJ_ahpJA">
    <keyConsiderations>&lt;b>Relationship of System Architect to Software Architect&lt;/b> &#xD;
&lt;p>&#xD;
    There are many similarities in the roles; indeed for projects that are deemed &quot;systems&quot; developments because of their&#xD;
    size or complexity, but which are, nevertheless largely or completely software, the two roles coalesce. However, in the&#xD;
    general case, the constituency of the System Architect is larger than that of the Software Architect. The System&#xD;
    Architect must contend with physically imposed constraints that do not exist in the much more malleable world of&#xD;
    software. The very flexibility of software though makes possible paths of architectural evolution that previously could&#xD;
    not be contemplated. Therefore, the relationship of Software Architect to System Architect is not a strictly&#xD;
    subordinate one: feedback from software architectural considerations can profoundly affect the system architecture; to&#xD;
    deny this is to run the risk of potentially sub-optimal &lt;i>system&lt;/i> architectures based on the simplistic notion of&#xD;
    software architecture as derivative from the allocation of requirements (by the System Architect) to computing&#xD;
    platforms. It is true to say though that in a team of System Architect and Software Architect(s), the responsibilities&#xD;
    of the System Architect role require that the System Architect be &lt;i>primus inter pares&lt;/i>, because the system is the&#xD;
    end-product.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The System Architect establishes and refines the system's logical and physical structure and is concerned with the&#xD;
    optimization of these structures in terms of major system elements and their interfaces, and making trade-offs in&#xD;
    competing factors and constraints (for example, performance, cost, environmental impact), in evaluating potential&#xD;
    solutions that produce the required behavior. The System Architects' view spans the entire system and all factors,&#xD;
    external and internal, that might affect its development. Given the need to maintain this broad view, the System&#xD;
    Architect rarely engages in depth in the detailed engineering of a system, preferring to leave that to other&#xD;
    practitioners in the various engineering specialties.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PbA5rClYJejgg-4sO96Qrg" name="cots_system_architect,_s_HSP-wsEd-sjp03to1LnQ" guid="-PbA5rClYJejgg-4sO96Qrg">
    <keyConsiderations>&lt;b>Relationship of System Architect to Software Architect&lt;/b> &#xD;
&lt;p>&#xD;
    There are many similarities in the roles; indeed for projects that are deemed &quot;systems&quot; developments because of their&#xD;
    size or complexity, but which are, nevertheless largely or completely software, the two roles coalesce. However, in the&#xD;
    general case, the constituency of the System Architect is larger than that of the Software Architect. The System&#xD;
    Architect must contend with physically imposed constraints that do not exist in the much more malleable world of&#xD;
    software. The very flexibility of software though makes possible paths of architectural evolution that previously could&#xD;
    not be contemplated. Therefore, the relationship of Software Architect to System Architect is not a strictly&#xD;
    subordinate one: feedback from software architectural considerations can profoundly affect the system architecture; to&#xD;
    deny this is to run the risk of potentially sub-optimal &lt;i>system&lt;/i> architectures based on the simplistic notion of&#xD;
    software architecture as derivative from the allocation of requirements (by the System Architect) to computing&#xD;
    platforms. It is true to say though that in a team of System Architect and Software Architect(s), the responsibilities&#xD;
    of the System Architect role require that the System Architect be &lt;i>primus inter pares&lt;/i>, because the system is the&#xD;
    end-product.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The System Architect establishes and refines the system's logical and physical structure and is concerned with the&#xD;
    optimization of these structures in terms of major system elements and their interfaces, and making trade-offs in&#xD;
    competing factors and constraints (for example, performance, cost, environmental impact), in evaluating potential&#xD;
    solutions that produce the required behavior. The System Architects' view spans the entire system and all factors,&#xD;
    external and internal, that might affect its development. Given the need to maintain this broad view, the System&#xD;
    Architect rarely engages in depth in the detailed engineering of a system, preferring to leave that to other&#xD;
    practitioners in the various engineering specialties.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
</xmi:XMI>
