<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1">
  <org.eclipse.epf.uma:DeliveryProcessDescription xmi:id="-9i5h6kSgoY2msktt_TCPug" name="project_leadership_team,_NxOZoVC8EeCk-Pay6xRCzA" guid="-9i5h6kSgoY2msktt_TCPug" version="7.5.1"/>
  <org.eclipse.epf.uma:ActivityDescription xmi:id="-KK3QRyu43gt4PXd-aJWkPQ" name="Define Operational Objectives,_kUlUJSNREeCOWdM_goLzAA" guid="-KK3QRyu43gt4PXd-aJWkPQ">
    <mainDescription>Business and operational objectives, as well as&amp;nbsp;high level project characteristics can be used to guide the selection&#xD;
of practices. &amp;nbsp;These objectives and project characteristic may have been gathered during an assessment service (such&#xD;
as in &lt;a href=&quot;http://www-01.ibm.com/software/rational/mcif/&quot;>http://www-01.ibm.com/software/rational/mcif/&lt;/a>) or during&#xD;
the retrospective of the previous release or similar project.</mainDescription>
  </org.eclipse.epf.uma:ActivityDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yk_7eY3rHIEd3okNeyDLTw" name="setup_tools,_VBZ5gCAmEeCaxPnRDErJGw" guid="-yk_7eY3rHIEd3okNeyDLTw">
    <refinedDescription>&lt;p>
    Many software-development tools support teams of people, with several users working with information stored in a shared
    repository. Each user uses the tool on their personal computer (client) and the shared repository is stored on a
    central server.&amp;nbsp;In this case the tool must be installed on the server and on the clients. Customizing the tool is
    done both on the server and on the client.&amp;nbsp;&amp;nbsp;&amp;nbsp;
&lt;/p>
&lt;p>
    There are tools that do not use a shared repository, such as compilers, debuggers, editors, graphic tools, etc. These
    tools can simply be installed on the users' computers. It may still be needed to customize the tools so that all
    members of the project use the tool in the same way.&amp;nbsp;
&lt;/p>
&lt;p>
    The approach should be to automate as much as possible of the installation and customization procedures.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rvU7c2UzlnqPEy3UiIhFlg" name="verify_tool_config_installation,_Ve6U4CAmEeCaxPnRDErJGw" guid="-rvU7c2UzlnqPEy3UiIhFlg">
    <refinedDescription>The tools and the development infrastructure has to be verified before the project starts using them. How this is done will
clearly vary dependent upon skills, technology, and tools.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oEpIbRSY4_m2d40IyRf8Tw" name="project_defined_process,_TtW3sSAmEeCaxPnRDErJGw" guid="-oEpIbRSY4_m2d40IyRf8Tw">
    <refinedDescription>&lt;p>&#xD;
    A project process typically describes or references the following items:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        what organizational processes and policies must be adhered to.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what standard process, if any, is being adopted by the project.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        any tailoring of the standard process, or deviations from policy mandates.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        rationale for tailoring and deviations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        approvals for deviations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        which work products are reviewed at which milestones, and their level of completion.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        guidelines and information that the project wants to use in addition to the information contained in the main.&#xD;
        process&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what reviews will be performed, and their level of formality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what approvals are required, by whom, and when.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RW9HtsfY2IlpLYV6NPFJpA" name="process_engineer,_XAEncVC_EeCOOdX2nygdtA" guid="-RW9HtsfY2IlpLYV6NPFJpA">
    <refinedDescription>&lt;p>&#xD;
    This&amp;nbsp;role plays&amp;nbsp;an important part of any management team of a software project. The role is responsible for&#xD;
    all process related aspects of the project, such as :&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Tailoring the process to match the specific needs of the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Educating and mentoring project members on process related issues.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that valuable project experience is harvested and fed back into the process.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JhTEmUzm7tFUg3y1Rf8lew" name="project_defined_process,_W4UX0SAmEeCaxPnRDErJGw" guid="-JhTEmUzm7tFUg3y1Rf8lew">
    <refinedDescription>&lt;p>&#xD;
    A project process typically describes or references the following items:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        what organizational processes and policies must be adhered to.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what standard process, if any, is being adopted by the project.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        any tailoring of the standard process, or deviations from policy mandates.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        rationale for tailoring and deviations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        approvals for deviations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        which work products are reviewed at which milestones, and their level of completion.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        guidelines and information that the project wants to use in addition to the information contained in the main.&#xD;
        process&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what reviews will be performed, and their level of formality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what approvals are required, by whom, and when.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bHT48uiuUmFvjoEOjmenwg" name="process_engineer,_XAOYcVC_EeCOOdX2nygdtA" guid="-bHT48uiuUmFvjoEOjmenwg">
    <refinedDescription>&lt;p>&#xD;
    This&amp;nbsp;role plays&amp;nbsp;an important part of any management team of a software project. The role is responsible for&#xD;
    all process related aspects of the project, such as :&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Tailoring the process to match the specific needs of the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Educating and mentoring project members on process related issues.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that valuable project experience is harvested and fed back into the process.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SlWHkRdT3W0WlAzLAEflhg" name="develop_technical_vision,_D6g0kCAnEeCaxPnRDErJGw" guid="-SlWHkRdT3W0WlAzLAEflhg">
    <keyConsiderations>&lt;p>&#xD;
    Use-case modeling&amp;nbsp;is one technique that can prove useful in defining the system boundaries and system behavior.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OfASB7k-Fr6c2brkyxmUvg" name="vision,_D6g0kSAnEeCaxPnRDErJGw" guid="-OfASB7k-Fr6c2brkyxmUvg">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nm9cMJaJsz078C8lIoD80A" name="glossary,_D6g0kyAnEeCaxPnRDErJGw" guid="-nm9cMJaJsz078C8lIoD80A">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dOR0xkG3JsR-Cd8JZCxJjw" name="envision_the_arch,_4mkeICJ2EeC5IMMv0prGFg" guid="-dOR0xkG3JsR-Cd8JZCxJjw">
    <keyConsiderations>&lt;p>&#xD;
    It&amp;nbsp;is important to reduce the complexity of the&amp;nbsp;solution by raising the levels of abstraction.&amp;nbsp;For more&#xD;
    information, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/guidelines/abstract_away_complexity_DBF13AE6.html&quot;&#xD;
    guid=&quot;_we3F4ACpEdu8m4dIntu6jA&quot;>Guideline: Abstract Away Complexity&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is critical that this task be performed collaboratively with active involvement of other team members and project&#xD;
    stakeholders so that consensus and common understanding is reached. It is particularly vital to involve the&#xD;
    developer(s) throughout this task. The architecture effort&amp;nbsp;is about providing leadership and coordination of the&#xD;
    technical work rather than putting in a solo performance.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This task focuses on envisioning the initial architecture and outlining the&amp;nbsp;architectural decisions that will&#xD;
    guide development and testing. It relies on gathering experience gained in similar systems or problem domains to&#xD;
    constrain and focus the architecture so that effort is not wasted in re-inventing architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The results are captured for future reference and are communicated across the team. It is important that the team has&#xD;
    enough information to understand the technical approach being taken.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The architecture evolves organically over time by outlining and refining portions of it. A few people get together in a&#xD;
    room and sketch out what they think the architecture will be. This envisioning effort sets the foundation for&#xD;
    prototyping. If the solution is similar to a previously produced solution (or is a well-known solution domain), then it&#xD;
    will probably be good enough to reference that example as evidence of the feasibility of the approach. In some cases,&#xD;
    it may be necessary to develop one or more prototypes to validate some of the decisions or clarify some of the&#xD;
    requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The work done here does not seek to produce a detailed and comprehensive technical specification for the system.&#xD;
    Rather, the approach should be to decide the overall technical approach at a high level. The conclusion of this work&#xD;
    should produce just enough information to communicate the architecture to the team, and to demonstrate its viability to&#xD;
    the customer. This allows the project to move forward, enabling you to refine and baseline the architecture.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DqRfqCtTPHMnRzwP6ooZWw" name="architecture_notebook,_4m3ZEiJ2EeC5IMMv0prGFg" guid="-DqRfqCtTPHMnRzwP6ooZWw">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EFrv-W4p-pWAYTkxdPeISQ" name="architect,_XC55BFC_EeCOOdX2nygdtA" guid="-EFrv-W4p-pWAYTkxdPeISQ">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-E6DeumaQoYKjCghIQBUKzg" name="project_manager,_XC55B1C_EeCOOdX2nygdtA" guid="-E6DeumaQoYKjCghIQBUKzg">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FoOAJeS-lrw6pxzS-W3ViQ" name="storyboard,_XDDC8VC_EeCOOdX2nygdtA" guid="-FoOAJeS-lrw6pxzS-W3ViQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-b9zRu4GDq5aiNpuaTsweXw" name="requirements_attributes,_XDMz8VC_EeCOOdX2nygdtA" guid="-b9zRu4GDq5aiNpuaTsweXw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DfdJPBIHJoYa7AMTRLRO9w" name="requirements_traceability,_XDMz9FC_EeCOOdX2nygdtA" guid="-DfdJPBIHJoYa7AMTRLRO9w">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Z9k0zbloAQEqCTU5RHDIWg" name="requirements_management_process_description,_XDWk8VC_EeCOOdX2nygdtA" guid="-Z9k0zbloAQEqCTU5RHDIWg">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1JEy4_W2AJTM5zeLsTrffw" name="user_role,_XDWk9FC_EeCOOdX2nygdtA" guid="-1JEy4_W2AJTM5zeLsTrffw">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pufipIaXMfkKplz1m5qy1w" name="user_story,_XDWk91C_EeCOOdX2nygdtA" guid="-pufipIaXMfkKplz1m5qy1w">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KSqCdthtBiLrY8ifpMdzYA" name="stakeholder_request,_XDpf4VC_EeCOOdX2nygdtA" guid="-KSqCdthtBiLrY8ifpMdzYA">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WMxV2m7gVx7Ajl61CEDNuA" name="iteration_plan,_XDzQ4VC_EeCOOdX2nygdtA" guid="-WMxV2m7gVx7Ajl61CEDNuA">
    <keyConsiderations>&lt;p>

    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work

    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the

    remaining high priority work items, plus a few mid-priority ones from the Work Items List). When work items are assigned

    to an iteration, no matter what their previous priorities, the team has to make sure that they are able to develop

    what has been assigned to the iteration. Deciding what to develop first (or

    even to develop things in parallel) on an iteration will vary from project to project, from iteration to iteration.

&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-canCYXvYMW9jmwDe37qAkQ" name="risk_list,_XDzQ5FC_EeCOOdX2nygdtA" guid="-canCYXvYMW9jmwDe37qAkQ">
    <keyConsiderations>&lt;p>
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully consider
    whether they are really serious risks. Tracking more than 20 risks is an onerous task.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot; guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project
    activities, and is the basis around which iterations are organized.
&lt;/p>
&lt;p>
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot; guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xv49HUF_5QI4gLc0P72-BA" name="work_items_list,_XDzQ51C_EeCOOdX2nygdtA" guid="-xv49HUF_5QI4gLc0P72-BA">
    <keyConsiderations>&lt;p>
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact provides a focal point for the entire team:
&lt;/p>
&lt;ul>
    &lt;li>
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note
        that some of these requests may never be implemented, or be implemented in later projects.
    &lt;/li>
    &lt;li>
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list
        is prioritized separately.
    &lt;/li>
    &lt;li>
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be
        delivered, get references to material required to carry out the work, and report progress made.
    &lt;/li>
&lt;/ul>
&lt;p>
    These are the typical work items that go on this list:
&lt;/p>
&lt;ul>
    &lt;li>
        Use cases (and references to use-case specifications)
    &lt;/li>
    &lt;li>
        System-wide requirements
    &lt;/li>
    &lt;li>
        Changes and enhancement requests
    &lt;/li>
    &lt;li>
        Defects
    &lt;/li>
    &lt;li>
        Development tasks
    &lt;/li>
&lt;/ul>
&lt;p>
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child
    relationships, where the lowest level is a specification and tracking device for micro-increments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KP5ayJQ9HQlR4VnKONvRdw" name="project_plan,_XDzQ6lC_EeCOOdX2nygdtA" guid="-KP5ayJQ9HQlR4VnKONvRdw">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KmWL4hZHa8i3FOYft0IHKQ" name="build,_XEPVwVC_EeCOOdX2nygdtA" guid="-KmWL4hZHa8i3FOYft0IHKQ">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RMYgPLn_OoXwMbkzTj0fnA" name="design,_XEPVxFC_EeCOOdX2nygdtA" guid="-RMYgPLn_OoXwMbkzTj0fnA">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-F2_q2wSjJd1LoT8jbSSPdw" name="developer_test,_XEPVx1C_EeCOOdX2nygdtA" guid="-F2_q2wSjJd1LoT8jbSSPdw">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZuGU6JBJBNpdY30TXvu4cw" name="implementation,_XEZGwFC_EeCOOdX2nygdtA" guid="-ZuGU6JBJBNpdY30TXvu4cw">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ONLGr2Klj0F9jDooxh2GzQ" name="identify_user_roles_and_user_stories,_IFsbkCAnEeCaxPnRDErJGw" guid="-ONLGr2Klj0F9jDooxh2GzQ">
    <keyConsiderations>&lt;p> Use various techniques to make gathering requirements easier. Face-to-face &#xD;
  meetings with stakeholders&amp;nbsp;are the most effective way to understand stakeholder &#xD;
  needs and to gather and validate requirements. When face-to-face conversation &#xD;
  is not an option, you can use other means of communication, such as video conferences, &#xD;
  conference calls, instant messaging, or project collaboration tools, such as &#xD;
  &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/tools/rtc.usdd_E4B4FC27.html&quot; guid=&quot;_8xA20D53Ed6FxpOwnkUDmw&quot;>Rational Team Concert&lt;/a>. &#xD;
&lt;/p>&#xD;
&lt;p> This task is one aspect of initially envisioning requirements, as part of &#xD;
  agile modeling early in the development lifecycle. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This task is about having an initial conversation with stakeholders to identify what the objectives are for the system&#xD;
    under development. The team and stakeholders brainstorm to identify and capture the user roles and personas of those&#xD;
    who will interact with the system and what user stories provide their objectives and reasons for using the system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    User stories are captured&amp;nbsp;at a&amp;nbsp;high level (user story statement only) to encourage further conversation about&#xD;
    them when it is time to add details.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-81AbP-SBJc8QFJeA_iBjAw" name="glossary,_IF2MlCAnEeCaxPnRDErJGw" guid="-81AbP-SBJc8QFJeA_iBjAw">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7iWS20G0_ZsDWZivwcavjw" name="user_role,_IF2MliAnEeCaxPnRDErJGw" guid="-7iWS20G0_ZsDWZivwcavjw">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yKS7e3hHFrLU6Z111PWj7Q" name="user_story,_IF2MmCAnEeCaxPnRDErJGw" guid="-yKS7e3hHFrLU6Z111PWj7Q">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot; guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-286xBm09Q64FBSTFeOe-aQ" name="organize_requirements,_sJJWcEp-EeC4KeC0o100mA" guid="-286xBm09Q64FBSTFeOe-aQ">
    <refinedDescription>This task describes the decisions involved in organizing the project requirements. A large requirement set will quickly&#xD;
become unmanageable if it is not organized so that the analysts and other project team members can easily find them. The&#xD;
organizational&amp;nbsp;structure must be captured in the requirements management plan.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LFzElqMsnuu_35gjCZioRA" name="requirements_management_process_description,_sJTHcEp-EeC4KeC0o100mA" guid="-LFzElqMsnuu_35gjCZioRA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kmu32RtPahKkIERXVvNQlg" name="requirements_attributes,_sJTHckp-EeC4KeC0o100mA" guid="-kmu32RtPahKkIERXVvNQlg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uOtBhkHt0X_7yJEo7JZfhw" name="requirements_traceability,_sJTHdEp-EeC4KeC0o100mA" guid="-uOtBhkHt0X_7yJEo7JZfhw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-E1s2KjBWhXNJx23mmUXFJg" name="architect,_XFSeoVC_EeCOOdX2nygdtA" guid="-E1s2KjBWhXNJx23mmUXFJg">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nQyPnl3HwSN8FnoAJIkXQw" name="tester,_XFSeqlC_EeCOOdX2nygdtA" guid="-nQyPnl3HwSN8FnoAJIkXQw">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BsNVzDhuB1UIkxtqWRTmSQ" name="test_case,_XFbokVC_EeCOOdX2nygdtA" guid="-BsNVzDhuB1UIkxtqWRTmSQ">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-o5ktZgY3mAah78W9pAQuWw" name="test_log,_XFbolFC_EeCOOdX2nygdtA" guid="-o5ktZgY3mAah78W9pAQuWw">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-w3QRLQZTCZSOEzqFXB9nwA" name="architecture_notebook,_XFlZkVC_EeCOOdX2nygdtA" guid="-w3QRLQZTCZSOEzqFXB9nwA">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OfMQ50KVe62hhwidXqGDJQ" name="stakeholder_request,_XFvKkVC_EeCOOdX2nygdtA" guid="-OfMQ50KVe62hhwidXqGDJQ">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Etx7HGdjx28VB619RDODPQ" name="vision,_XF4UgVC_EeCOOdX2nygdtA" guid="-Etx7HGdjx28VB619RDODPQ">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0Y9CP14g-13KWMHJyb5q1g" name="storyboard,_XF4UhFC_EeCOOdX2nygdtA" guid="-0Y9CP14g-13KWMHJyb5q1g">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-G0rsN2qeIk_CP3skl823LQ" name="build,_XGCFgVC_EeCOOdX2nygdtA" guid="-G0rsN2qeIk_CP3skl823LQ">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-z7MJF9onHbH2NPsjVjrWJQ" name="design,_XGCFhFC_EeCOOdX2nygdtA" guid="-z7MJF9onHbH2NPsjVjrWJQ">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RZsj5cZI73l20unRyCd2-g" name="developer_test,_XGCFh1C_EeCOOdX2nygdtA" guid="-RZsj5cZI73l20unRyCd2-g">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ueVojgeDiX-9MEWKEgCFOg" name="implementation,_XGL2gVC_EeCOOdX2nygdtA" guid="-ueVojgeDiX-9MEWKEgCFOg">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cQQrI3N6w_Uy4xFD3wFLlA" name="work_items_list,_3AZHgSAmEeCaxPnRDErJGw" guid="-cQQrI3N6w_Uy4xFD3wFLlA">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-laaNg8708JziSpDmrRmb0Q" name="risk_list,_3AZHhyAmEeCaxPnRDErJGw" guid="-laaNg8708JziSpDmrRmb0Q">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AtVVMraJMZVRN_zz29PtNA" name="project_manager,_XAXiYVC_EeCOOdX2nygdtA" guid="-AtVVMraJMZVRN_zz29PtNA">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-U1fqk8OPEny1zPKESoKvSA" name="architect,_XAhTZFC_EeCOOdX2nygdtA" guid="-U1fqk8OPEny1zPKESoKvSA">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xCtkgAZK0K5_61AWfecfEQ" name="tester,_XAhTbVC_EeCOOdX2nygdtA" guid="-xCtkgAZK0K5_61AWfecfEQ">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fHL5wbJeJ-gQy-hkY2YCDg" name="project_plan,_XAqdUVC_EeCOOdX2nygdtA" guid="-fHL5wbJeJ-gQy-hkY2YCDg">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CPYslEAwd1LvZbdabQFZyg" name="build,_XA0OUVC_EeCOOdX2nygdtA" guid="-CPYslEAwd1LvZbdabQFZyg">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tQxLGVL6ZWnDyCE7UjwxBw" name="design,_XA9_UVC_EeCOOdX2nygdtA" guid="-tQxLGVL6ZWnDyCE7UjwxBw">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Z36DUrF5Zlug-JvW8XIHYg" name="developer_test,_XA9_VFC_EeCOOdX2nygdtA" guid="-Z36DUrF5Zlug-JvW8XIHYg">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qSkO6RmC4UfsOHL3WAEErQ" name="implementation,_XA9_V1C_EeCOOdX2nygdtA" guid="-qSkO6RmC4UfsOHL3WAEErQ">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sBngD0e30k0MFml3devL7w" name="requirements_attributes,_XBHJQVC_EeCOOdX2nygdtA" guid="-sBngD0e30k0MFml3devL7w">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lBkcDXPZFsSh-e0_JXGmGw" name="requirements_traceability,_XBQ6QVC_EeCOOdX2nygdtA" guid="-lBkcDXPZFsSh-e0_JXGmGw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6nLY8wSLZgO30vrKo87Baw" name="requirements_management_process_description,_XBQ6RFC_EeCOOdX2nygdtA" guid="-6nLY8wSLZgO30vrKo87Baw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ubO4EF8A2J6Z36OB7ie_Ug" name="vision,_XBQ6R1C_EeCOOdX2nygdtA" guid="-ubO4EF8A2J6Z36OB7ie_Ug">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-c0kVynIF4S-vn6vEkaNF7w" name="glossary,_XBQ6SlC_EeCOOdX2nygdtA" guid="-c0kVynIF4S-vn6vEkaNF7w">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-l6NbovHSE_kB37hUAh92Hw" name="storyboard,_XBarQVC_EeCOOdX2nygdtA" guid="-l6NbovHSE_kB37hUAh92Hw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eewgBIiq68a-cjB-DIIP-w" name="user_role,_XBarRFC_EeCOOdX2nygdtA" guid="-eewgBIiq68a-cjB-DIIP-w">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JO89sI3gtjDCmsoXJH1WfQ" name="user_story,_XBarR1C_EeCOOdX2nygdtA" guid="-JO89sI3gtjDCmsoXJH1WfQ">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2fvCKsI0-O3VvsX0TByrlw" name="architecture_notebook,_XBtmMVC_EeCOOdX2nygdtA" guid="-2fvCKsI0-O3VvsX0TByrlw">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VMCePLlpVOKZ2v4P2kK03w" name="stakeholder_request,_XB2wIVC_EeCOOdX2nygdtA" guid="-VMCePLlpVOKZ2v4P2kK03w">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WvVlQq88BrXLPrCFHfuHxw" name="test_case,_XB2wJFC_EeCOOdX2nygdtA" guid="-WvVlQq88BrXLPrCFHfuHxw">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gLKnVbC3lq2I7BTPSFQzKQ" name="test_log,_XCAhIVC_EeCOOdX2nygdtA" guid="-gLKnVbC3lq2I7BTPSFQzKQ">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EUQTF0RH1iy5sH5G6MlKGw" name="plan_the_project,_JuTYICAnEeCaxPnRDErJGw" guid="-EUQTF0RH1iy5sH5G6MlKGw">
    <keyConsiderations>&lt;p>&#xD;
    Gain agreement with stakeholders and the rest of the project team regarding the order of objectives and the duration of&#xD;
    the project. Make adjustments as&amp;nbsp;necessary.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>Developing the project plan provides an opportunity for the team to agree on project scope, objectives, initial timeframe,&#xD;
and deliverables. It allows the team to begin demonstrating self-organization by defining success criteria and work&#xD;
practices to be used. Collaboration and consensus by all key project participants is the goal, but the role responsible for&#xD;
this task must ensure that everybody is committed to the plan.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-o5qbjYqmI_EKYAY1NqDG1A" name="project_plan,_JuTYJSAnEeCaxPnRDErJGw" guid="-o5qbjYqmI_EKYAY1NqDG1A">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in&#xD;
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it&#xD;
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and&#xD;
    their milestones.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect&#xD;
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of&#xD;
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the&#xD;
    project.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qaniVSe19c54R6C8-eP7Tw" name="project_manager,_XG7dYVC_EeCOOdX2nygdtA" guid="-qaniVSe19c54R6C8-eP7Tw">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Aukxn10461Q8CCHdKngglg" name="architect,_XHEnUVC_EeCOOdX2nygdtA" guid="-Aukxn10461Q8CCHdKngglg">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dYcODuesnLHMQtCTz4HUcQ" name="tester,_XHEnWlC_EeCOOdX2nygdtA" guid="-dYcODuesnLHMQtCTz4HUcQ">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dn3u0El2koNzvAYic4f90A" name="iteration_plan,_XHOYUVC_EeCOOdX2nygdtA" guid="-dn3u0El2koNzvAYic4f90A">
    <keyConsiderations>&lt;p>

    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work

    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the

    remaining high priority work items, plus a few mid-priority ones from the Work Items List). When work items are assigned

    to an iteration, no matter what their previous priorities, the team has to make sure that they are able to develop

    what has been assigned to the iteration. Deciding what to develop first (or

    even to develop things in parallel) on an iteration will vary from project to project, from iteration to iteration.

&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BgzpRN-dksTPGKGZpMzkZA" name="work_items_list,_XHOYVFC_EeCOOdX2nygdtA" guid="-BgzpRN-dksTPGKGZpMzkZA">
    <keyConsiderations>&lt;p>
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact provides a focal point for the entire team:
&lt;/p>
&lt;ul>
    &lt;li>
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note
        that some of these requests may never be implemented, or be implemented in later projects.
    &lt;/li>
    &lt;li>
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list
        is prioritized separately.
    &lt;/li>
    &lt;li>
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be
        delivered, get references to material required to carry out the work, and report progress made.
    &lt;/li>
&lt;/ul>
&lt;p>
    These are the typical work items that go on this list:
&lt;/p>
&lt;ul>
    &lt;li>
        Use cases (and references to use-case specifications)
    &lt;/li>
    &lt;li>
        System-wide requirements
    &lt;/li>
    &lt;li>
        Changes and enhancement requests
    &lt;/li>
    &lt;li>
        Defects
    &lt;/li>
    &lt;li>
        Development tasks
    &lt;/li>
&lt;/ul>
&lt;p>
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child
    relationships, where the lowest level is a specification and tracking device for micro-increments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Kur0ENA0Ou7fjLkVswbrBw" name="stakeholder_request,_XHYJUVC_EeCOOdX2nygdtA" guid="-Kur0ENA0Ou7fjLkVswbrBw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-illuYTdzIT-4jXfj4c11zg" name="build,_XHhTQVC_EeCOOdX2nygdtA" guid="-illuYTdzIT-4jXfj4c11zg">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-o1dMRE-CsfhZ24e_7wq7mw" name="design,_XHhTRFC_EeCOOdX2nygdtA" guid="-o1dMRE-CsfhZ24e_7wq7mw">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OLYDYlxFveTW18rzTCBp1A" name="developer_test,_XHrEQVC_EeCOOdX2nygdtA" guid="-OLYDYlxFveTW18rzTCBp1A">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eFnMWmUALdw1HMow_-TRNA" name="implementation,_XHrERFC_EeCOOdX2nygdtA" guid="-eFnMWmUALdw1HMow_-TRNA">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_Txhi1jR9f4L9B0DNMkRAA" name="architecture_notebook,_XH0OMVC_EeCOOdX2nygdtA" guid="-_Txhi1jR9f4L9B0DNMkRAA">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mbXVbYZgDgZY03DTKlNHSg" name="test_case,_XH9_MVC_EeCOOdX2nygdtA" guid="-mbXVbYZgDgZY03DTKlNHSg">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FC86kSaa8mcJUmKNl0kirQ" name="test_log,_XH9_NFC_EeCOOdX2nygdtA" guid="-FC86kSaa8mcJUmKNl0kirQ">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BGeBdGlHkDgYjZbwe3PG_g" name="requirements_attributes,_XIHwMVC_EeCOOdX2nygdtA" guid="-BGeBdGlHkDgYjZbwe3PG_g">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xswm8sHwoOG1z5E5avSiCg" name="requirements_traceability,_XIQ6IVC_EeCOOdX2nygdtA" guid="-xswm8sHwoOG1z5E5avSiCg">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VwQ9bzZJciNQghvGydy-eQ" name="requirements_management_process_description,_XIQ6JFC_EeCOOdX2nygdtA" guid="-VwQ9bzZJciNQghvGydy-eQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Eqkdc6AoY9z4sJLk8l1GCg" name="glossary,_XIQ6J1C_EeCOOdX2nygdtA" guid="-Eqkdc6AoY9z4sJLk8l1GCg">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lzeLDq8kajP7WQJLcM-cmQ" name="storyboard,_XIQ6KlC_EeCOOdX2nygdtA" guid="-lzeLDq8kajP7WQJLcM-cmQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-X0R-jOdZUvjuDsWyVxYhKA" name="user_role,_XIarIVC_EeCOOdX2nygdtA" guid="-X0R-jOdZUvjuDsWyVxYhKA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fN0vgrr0tvvrv9iQ9Zn7tw" name="user_story,_XIarJFC_EeCOOdX2nygdtA" guid="-fN0vgrr0tvvrv9iQ9Zn7tw">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FsSGYkM8MeGmAGeE4Bmpeg" name="work_items_list,_UTkGoyAnEeCaxPnRDErJGw" guid="-FsSGYkM8MeGmAGeE4Bmpeg">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k4LzzDDIOxZXkEZRkc8vLg" name="assess_requirement_consistency,_op46UC1_EeC4EpcylkdmHQ" guid="-k4LzzDDIOxZXkEZRkc8vLg">
    <keyConsiderations>The requirements tend to degrade over time as they evolve. Periodic assessment can be&amp;nbsp;performed once per iteration or&#xD;
milestone.</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-f2X2EqFCwGlzxqTqSMUluA" name="requirements_attributes,_op46US1_EeC4EpcylkdmHQ" guid="-f2X2EqFCwGlzxqTqSMUluA">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Fen9SMDDcF1hy0HQbXB-wg" name="requirements_traceability,_op46Uy1_EeC4EpcylkdmHQ" guid="-Fen9SMDDcF1hy0HQbXB-wg">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hCPVESFs-D25UpA-P_81GA" name="project_manager,_XJdM8VC_EeCOOdX2nygdtA" guid="-hCPVESFs-D25UpA-P_81GA">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6gfLJfzga6s_ZyVx10Sw4A" name="architect,_XJm99FC_EeCOOdX2nygdtA" guid="-6gfLJfzga6s_ZyVx10Sw4A">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TNBb-xUHFJ7Yz38RCYGrmg" name="tester,_XJm9_VC_EeCOOdX2nygdtA" guid="-TNBb-xUHFJ7Yz38RCYGrmg">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dYa1kjzY3uMQNWtOcIpXqA" name="stakeholder_request,_XJwu8VC_EeCOOdX2nygdtA" guid="-dYa1kjzY3uMQNWtOcIpXqA">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NgcazxmzqzE2QE0Unyurkg" name="architecture_notebook,_XJ544VC_EeCOOdX2nygdtA" guid="-NgcazxmzqzE2QE0Unyurkg">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lMFL5DVRBOMszEQLcRrgRg" name="build,_XKDp4VC_EeCOOdX2nygdtA" guid="-lMFL5DVRBOMszEQLcRrgRg">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hOtrI5DJPk7nCUpwfcbwaA" name="design,_XKDp5FC_EeCOOdX2nygdtA" guid="-hOtrI5DJPk7nCUpwfcbwaA">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-g8Dj4z2uEW21K7RBPAv-Mw" name="developer_test,_XKDp51C_EeCOOdX2nygdtA" guid="-g8Dj4z2uEW21K7RBPAv-Mw">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cIAmjXQAfTuJccgCu4YN3g" name="implementation,_XKMz0VC_EeCOOdX2nygdtA" guid="-cIAmjXQAfTuJccgCu4YN3g">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SwBxdu6hFHiMtXRsKPVIHA" name="requirements_management_process_description,_XKWk0VC_EeCOOdX2nygdtA" guid="-SwBxdu6hFHiMtXRsKPVIHA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-X4tPney9wARrwNtQ1qUNWw" name="vision,_XKWk1FC_EeCOOdX2nygdtA" guid="-X4tPney9wARrwNtQ1qUNWw">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0A7pYqNty8pX1gnm6hDmWg" name="glossary,_XKWk11C_EeCOOdX2nygdtA" guid="-0A7pYqNty8pX1gnm6hDmWg">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-N0gA_44bO2l_584kSyHKYw" name="storyboard,_XKgV0VC_EeCOOdX2nygdtA" guid="-N0gA_44bO2l_584kSyHKYw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-emrgTOEkuzxsVOAnGJNDjA" name="user_role,_XKgV1FC_EeCOOdX2nygdtA" guid="-emrgTOEkuzxsVOAnGJNDjA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--EemQTle_IuIwxcqo8nbzw" name="user_story,_XKgV11C_EeCOOdX2nygdtA" guid="--EemQTle_IuIwxcqo8nbzw">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0urpnBsw7PqVT0V6LdtoBA" name="test_case,_XKzQwVC_EeCOOdX2nygdtA" guid="-0urpnBsw7PqVT0V6LdtoBA">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-drPxWk77FNyuo4i93QC_-Q" name="test_log,_XKzQxFC_EeCOOdX2nygdtA" guid="-drPxWk77FNyuo4i93QC_-Q">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-j2Zew6rr_50VUkJlP0lirw" name="risk_list,_XK9BwVC_EeCOOdX2nygdtA" guid="-j2Zew6rr_50VUkJlP0lirw">
    <keyConsiderations>&lt;p>
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully consider
    whether they are really serious risks. Tracking more than 20 risks is an onerous task.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot; guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project
    activities, and is the basis around which iterations are organized.
&lt;/p>
&lt;p>
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot; guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Idz6qz4MVEe6Q_2gStqEKw" name="project_plan,_XLGLsVC_EeCOOdX2nygdtA" guid="-Idz6qz4MVEe6Q_2gStqEKw">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sD-BHTdGEq5GbJ_jfH6wjw" name="risk_list,_zGeTwyNUEeCOWdM_goLzAA" guid="-sD-BHTdGEq5GbJ_jfH6wjw">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--0HLLf7vptCs0H5r59jPAw" name="vision,_0QZJMSNUEeCOWdM_goLzAA" guid="--0HLLf7vptCs0H5r59jPAw">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pF-zrzwOUiZ9K4zBgcHN1w" name="project_manager,_XL_jkVC_EeCOOdX2nygdtA" guid="-pF-zrzwOUiZ9K4zBgcHN1w">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XlIr0CLuxbIiUDDIEWSQCQ" name="architect,_XL_jl1C_EeCOOdX2nygdtA" guid="-XlIr0CLuxbIiUDDIEWSQCQ">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Bi6M5L7AZNJnjrBftZBO6Q" name="tester,_XMJUkVC_EeCOOdX2nygdtA" guid="-Bi6M5L7AZNJnjrBftZBO6Q">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-j_7p5sm15h87o0zWWT8qoA" name="requirements_attributes,_XMJUlFC_EeCOOdX2nygdtA" guid="-j_7p5sm15h87o0zWWT8qoA">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6V-1eTHwyVYwjcG8AhHMmQ" name="requirements_traceability,_XMSegVC_EeCOOdX2nygdtA" guid="-6V-1eTHwyVYwjcG8AhHMmQ">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ko8T0F5gTEhUMU5bYgQMnA" name="requirements_management_process_description,_XMSehFC_EeCOOdX2nygdtA" guid="-ko8T0F5gTEhUMU5bYgQMnA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9thgHiiPnUbkenaHmjqNgw" name="glossary,_XMSeh1C_EeCOOdX2nygdtA" guid="-9thgHiiPnUbkenaHmjqNgw">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-onWtOPkVNAXNZNkwyKIx-w" name="storyboard,_XMSeilC_EeCOOdX2nygdtA" guid="-onWtOPkVNAXNZNkwyKIx-w">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JYcsZoD2QIbjeeYehWpXHQ" name="user_role,_XMcPgVC_EeCOOdX2nygdtA" guid="-JYcsZoD2QIbjeeYehWpXHQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XN0coG5g5oPHITR_vndQGQ" name="user_story,_XMcPhFC_EeCOOdX2nygdtA" guid="-XN0coG5g5oPHITR_vndQGQ">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uiOv9iPLW5IESacL4NvulA" name="project_plan,_XMvKcVC_EeCOOdX2nygdtA" guid="-uiOv9iPLW5IESacL4NvulA">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qtRSimXF0VxNx7N4YBLRMw" name="architecture_notebook,_XM47cVC_EeCOOdX2nygdtA" guid="-qtRSimXF0VxNx7N4YBLRMw">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IxZRlsjD1YUbkL6w1gGkSQ" name="build,_XNCFYVC_EeCOOdX2nygdtA" guid="-IxZRlsjD1YUbkL6w1gGkSQ">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oFKqzeUY4VmU-e9zynrZ5Q" name="design,_XNCFZFC_EeCOOdX2nygdtA" guid="-oFKqzeUY4VmU-e9zynrZ5Q">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WqbcWQna1OY1-inZ9Xk0VQ" name="developer_test,_XNCFZ1C_EeCOOdX2nygdtA" guid="-WqbcWQna1OY1-inZ9Xk0VQ">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bUu6op83Gakj5NEKgNdbaw" name="implementation,_XNCFalC_EeCOOdX2nygdtA" guid="-bUu6op83Gakj5NEKgNdbaw">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Pe0UKGg9UDyfuiCuWS01rw" name="stakeholder_request,_XNVnYVC_EeCOOdX2nygdtA" guid="-Pe0UKGg9UDyfuiCuWS01rw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-m89Yv3uDEf7UuuxSfCW3Ig" name="test_case,_XNVnZFC_EeCOOdX2nygdtA" guid="-m89Yv3uDEf7UuuxSfCW3Ig">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vIx1OZafST_bYBr-JcyNCw" name="test_log,_XNexUVC_EeCOOdX2nygdtA" guid="-vIx1OZafST_bYBr-JcyNCw">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--LLE1TlSFd0syAVS_XApyQ" name="any_role,_XNoiUVC_EeCOOdX2nygdtA" guid="--LLE1TlSFd0syAVS_XApyQ">
    <refinedDescription>&lt;p> This role allows anyone on a team to perform general tasks: &lt;/p>
&lt;ul>
  &lt;li> Access artifacts in the configuration control system for development and 
    maintenance &lt;/li>
  &lt;li> Submit change requests for the project &lt;/li>
  &lt;li> Participate in assessments and reviews &lt;/li>
  &lt;li> Volunteer to work on a particular iteration &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uyIGPOE1GlGOEW3PsMGCJw" name="user_story,_QAd1kSAuEeCaxPnRDErJGw" guid="-uyIGPOE1GlGOEW3PsMGCJw">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-17IqH_eixiLqyrCMxwKbig" name="user_role,_QAd1kyAuEeCaxPnRDErJGw" guid="-17IqH_eixiLqyrCMxwKbig">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4-99jeHaPZOQENiL6rVHZg" name="glossary,_RLHq0SAuEeCaxPnRDErJGw" guid="-4-99jeHaPZOQENiL6rVHZg">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k3J0zqnMRmqOoSgnOc8xyA" name="requirements_management_process_description,_xQKBo0qAEeC4KeC0o100mA" guid="-k3J0zqnMRmqOoSgnOc8xyA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IBF9EHc-cfmCcKX7GGnR8g" name="requirements_attributes,_xQKBpUqAEeC4KeC0o100mA" guid="-IBF9EHc-cfmCcKX7GGnR8g">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eNkxua9zExMN_iXv5ml8kg" name="requirements_traceability,_xQKBp0qAEeC4KeC0o100mA" guid="-eNkxua9zExMN_iXv5ml8kg">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-b9Nzl3U_q8psTwzjC455mw" name="architect,_XOh6NFC_EeCOOdX2nygdtA" guid="-b9Nzl3U_q8psTwzjC455mw">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oGOmdhISY4f-NRy4aQxINQ" name="tester,_XOh6PVC_EeCOOdX2nygdtA" guid="-oGOmdhISY4f-NRy4aQxINQ">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WO_vMmuvMAxg3L7ijcV7jg" name="test_case,_XOrEIVC_EeCOOdX2nygdtA" guid="-WO_vMmuvMAxg3L7ijcV7jg">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PqOdmp2dvbAAyi1bB6ZgxQ" name="test_log,_XOrEJFC_EeCOOdX2nygdtA" guid="-PqOdmp2dvbAAyi1bB6ZgxQ">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ePYCbl042zj_00Dz20pnnQ" name="build,_XO01IVC_EeCOOdX2nygdtA" guid="-ePYCbl042zj_00Dz20pnnQ">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GMRtoDu7TgYpIePSN2B8Zw" name="design,_XO01JFC_EeCOOdX2nygdtA" guid="-GMRtoDu7TgYpIePSN2B8Zw">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-A62mzMGleicwUdW4rCxGow" name="developer_test,_XO01J1C_EeCOOdX2nygdtA" guid="-A62mzMGleicwUdW4rCxGow">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-X8WtQzT97kyO8ILvw8egIQ" name="implementation,_XO01KlC_EeCOOdX2nygdtA" guid="-X8WtQzT97kyO8ILvw8egIQ">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CtvK9cFI2IMqlPI24h_Ang" name="architecture_notebook,_XPHwEVC_EeCOOdX2nygdtA" guid="-CtvK9cFI2IMqlPI24h_Ang">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GPw2jl_4CjKoXSNTx3nEhQ" name="vision,_XPRhEVC_EeCOOdX2nygdtA" guid="-GPw2jl_4CjKoXSNTx3nEhQ">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TFTZ7Pl0vGJ2KkjCA1j60w" name="storyboard,_XPRhFFC_EeCOOdX2nygdtA" guid="-TFTZ7Pl0vGJ2KkjCA1j60w">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-twwRuzPR-1lLWpA2hOnZIQ" name="stakeholder_request,_XParAVC_EeCOOdX2nygdtA" guid="-twwRuzPR-1lLWpA2hOnZIQ">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hIdNShRSFysnxl_oXFMlDg" name="work_items_list,_UGugUSAuEeCaxPnRDErJGw" guid="-hIdNShRSFysnxl_oXFMlDg">
    <keyConsiderations>&lt;p>
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact provides a focal point for the entire team:
&lt;/p>
&lt;ul>
    &lt;li>
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note
        that some of these requests may never be implemented, or be implemented in later projects.
    &lt;/li>
    &lt;li>
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list
        is prioritized separately.
    &lt;/li>
    &lt;li>
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be
        delivered, get references to material required to carry out the work, and report progress made.
    &lt;/li>
&lt;/ul>
&lt;p>
    These are the typical work items that go on this list:
&lt;/p>
&lt;ul>
    &lt;li>
        Use cases (and references to use-case specifications)
    &lt;/li>
    &lt;li>
        System-wide requirements
    &lt;/li>
    &lt;li>
        Changes and enhancement requests
    &lt;/li>
    &lt;li>
        Defects
    &lt;/li>
    &lt;li>
        Development tasks
    &lt;/li>
&lt;/ul>
&lt;p>
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child
    relationships, where the lowest level is a specification and tracking device for micro-increments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CzmtNLmShv6fGN6W3ttgNA" name="risk_list,_UGugVyAuEeCaxPnRDErJGw" guid="-CzmtNLmShv6fGN6W3ttgNA">
    <keyConsiderations>&lt;p>
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully consider
    whether they are really serious risks. Tracking more than 20 risks is an onerous task.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot; guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project
    activities, and is the basis around which iterations are organized.
&lt;/p>
&lt;p>
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot; guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-suF7jnGXI7lqyVsWSIDPrg" name="project_manager,_XQdz4VC_EeCOOdX2nygdtA" guid="-suF7jnGXI7lqyVsWSIDPrg">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EJb2ERKvg-7nfSMCotXL1g" name="architect,_XQdz51C_EeCOOdX2nygdtA" guid="-EJb2ERKvg-7nfSMCotXL1g">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k62JaeWyANAxvvagokvxFw" name="tester,_XQm911C_EeCOOdX2nygdtA" guid="-k62JaeWyANAxvvagokvxFw">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ruBMSmuY4lJUkqvYWsap7A" name="project_plan,_XQwu0VC_EeCOOdX2nygdtA" guid="-ruBMSmuY4lJUkqvYWsap7A">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oLa8ruC2AwaSAPjLPPsKpg" name="stakeholder_request,_XQ6f0VC_EeCOOdX2nygdtA" guid="-oLa8ruC2AwaSAPjLPPsKpg">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-81f3EmxPgmFfeDTEc0othg" name="requirements_attributes,_XRDpwVC_EeCOOdX2nygdtA" guid="-81f3EmxPgmFfeDTEc0othg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uu_ugC1zosfxJvm3G_BNFw" name="requirements_traceability,_XRDpxFC_EeCOOdX2nygdtA" guid="-uu_ugC1zosfxJvm3G_BNFw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NQ9x3MFt_V-Irsin8leokg" name="requirements_management_process_description,_XRDpx1C_EeCOOdX2nygdtA" guid="-NQ9x3MFt_V-Irsin8leokg">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-p-2gcod6728XdS2qzYozQQ" name="vision,_XRNawVC_EeCOOdX2nygdtA" guid="-p-2gcod6728XdS2qzYozQQ">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rdD2QvsiTFXGDbEWrcKE_w" name="glossary,_XRNaxFC_EeCOOdX2nygdtA" guid="-rdD2QvsiTFXGDbEWrcKE_w">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qFhfy3v81HsIHX63f-wmwA" name="storyboard,_XRNax1C_EeCOOdX2nygdtA" guid="-qFhfy3v81HsIHX63f-wmwA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vMbQwf-jYdZ7X1aCFY8RtQ" name="user_role,_XRNaylC_EeCOOdX2nygdtA" guid="-vMbQwf-jYdZ7X1aCFY8RtQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3APpeLuhWLeyhmKrEFU-sQ" name="user_story,_XRWksVC_EeCOOdX2nygdtA" guid="-3APpeLuhWLeyhmKrEFU-sQ">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iIb2WKvy5lGtmSoplj01tQ" name="test_case,_XRgVsVC_EeCOOdX2nygdtA" guid="-iIb2WKvy5lGtmSoplj01tQ">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-G5x7GwE68lrKO2ni4XBKBg" name="test_log,_XRgVtFC_EeCOOdX2nygdtA" guid="-G5x7GwE68lrKO2ni4XBKBg">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NUJvhDJpFC43WYMM8CKzVA" name="build,_XRqGsVC_EeCOOdX2nygdtA" guid="-NUJvhDJpFC43WYMM8CKzVA">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SYEs2bWb8ln_LFezHxxpcA" name="design,_XRqGtFC_EeCOOdX2nygdtA" guid="-SYEs2bWb8ln_LFezHxxpcA">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kS_1GdFPZQ8599D8O6ub-A" name="developer_test,_XRzQoVC_EeCOOdX2nygdtA" guid="-kS_1GdFPZQ8599D8O6ub-A">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-arslukE_XcXnpJCt0VMODg" name="implementation,_XRzQpFC_EeCOOdX2nygdtA" guid="-arslukE_XcXnpJCt0VMODg">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-V4MTsH1rFv9FBoTjevQvcA" name="architecture_notebook,_XSGyoVC_EeCOOdX2nygdtA" guid="-V4MTsH1rFv9FBoTjevQvcA">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1-Fr1S-rz7YOjYK4RCuPrA" name="test_motivator,_kebukSAuEeCaxPnRDErJGw" guid="-1-Fr1S-rz7YOjYK4RCuPrA">
    <refinedDescription>&lt;p>&#xD;
    A test motivator is usually an external file that provides details about a test plan or test case. For example, a test&#xD;
    motivator file could be a document or spreadsheet containing detailed information about a specific test plan or test&#xD;
    case. It is convenient to be able to reference a test motivator file from a test plan and test case record. Test&#xD;
    motivators are useful in linking test requirements with test plans and test cases.&#xD;
&lt;/p>&#xD;
&lt;div class=&quot;p&quot;>&#xD;
    You can use associations between test plan and test case records with a test motivator to determine: &#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            If there is test coverage for the motivator&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            If a test plan associated with a motivator has an associated external file&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6GzOeDMLDaAAhIXy3K06Ew" name="test_plan,_kebukyAuEeCaxPnRDErJGw" guid="-6GzOeDMLDaAAhIXy3K06Ew">
    <refinedDescription>&lt;p>&#xD;
    The Test Plan forms the framework within which the team performing the testing will work for the given schedule. It&#xD;
    directs, guides, and constrains the test effort, focusing the work on the useful and necessary deliverables. It also&#xD;
    communicates the intent of the effort to stakeholders. As such, the Test Plan should avoid detail that would not be&#xD;
    understood, or would be considered irrelevant by the stakeholders in the test effort.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In cultures or domains in which this work product is not recognized as a formal work product, it is still important to&#xD;
    address the different aspects represented by the Test Plan as part of the planning effort, and make appropriate&#xD;
    decisions about what testing will be undertaken, and how the test effort will be conducted.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-z9KC07cLeunXG2zjNZWxCA" name="test_manager,_XS2ZgVC_EeCOOdX2nygdtA" guid="-z9KC07cLeunXG2zjNZWxCA">
    <refinedDescription>Roles organize the responsibility for performing tasks and developing work products into logical groups. Each role can be&#xD;
assigned to one or more people, and each person can fill one or more roles. When staffing the Test Manager role, you need&#xD;
to consider both the skills required for the role and the different approaches you can take to assigning staff to the role.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9jEMYpWlsDDVkraOH6JNsg" name="test_plan,_o-VBUyAuEeCaxPnRDErJGw" guid="-9jEMYpWlsDDVkraOH6JNsg">
    <refinedDescription>&lt;p>&#xD;
    The Test Plan forms the framework within which the team performing the testing will work for the given schedule. It&#xD;
    directs, guides, and constrains the test effort, focusing the work on the useful and necessary deliverables. It also&#xD;
    communicates the intent of the effort to stakeholders. As such, the Test Plan should avoid detail that would not be&#xD;
    understood, or would be considered irrelevant by the stakeholders in the test effort.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In cultures or domains in which this work product is not recognized as a formal work product, it is still important to&#xD;
    address the different aspects represented by the Test Plan as part of the planning effort, and make appropriate&#xD;
    decisions about what testing will be undertaken, and how the test effort will be conducted.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-z5HxNTL7fCyyrTBCyVfChA" name="assess_requirement_consistency,_6eZS0EqAEeC4KeC0o100mA" guid="-z5HxNTL7fCyyrTBCyVfChA">
    <keyConsiderations>The requirements tend to degrade over time as they evolve. Periodic assessment can be&amp;nbsp;performed once per iteration or&#xD;
milestone.</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CDn32Lm0Yj-FMNHbUvknNw" name="requirements_attributes,_6eZS0UqAEeC4KeC0o100mA" guid="-CDn32Lm0Yj-FMNHbUvknNw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CdZygH4TNZubX0fH-RpEnw" name="requirements_traceability,_6eZS00qAEeC4KeC0o100mA" guid="-CdZygH4TNZubX0fH-RpEnw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VgP9gJ_vjOT5VyXGfvd0Pw" name="project_manager,_XTTFcVC_EeCOOdX2nygdtA" guid="-VgP9gJ_vjOT5VyXGfvd0Pw">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-clSJxUQcpxEBsAG55eDgdQ" name="architect,_XTcPYVC_EeCOOdX2nygdtA" guid="-clSJxUQcpxEBsAG55eDgdQ">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iXJ8UUK1dQbgi1JssjM69g" name="tester,_XTcPalC_EeCOOdX2nygdtA" guid="-iXJ8UUK1dQbgi1JssjM69g">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NVPUFrJSqLb4XmCmlkdOfQ" name="test_case,_XTmAYVC_EeCOOdX2nygdtA" guid="-NVPUFrJSqLb4XmCmlkdOfQ">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-U7JyN9_U6tzZOrGOhG-P5Q" name="test_log,_XTmAZFC_EeCOOdX2nygdtA" guid="-U7JyN9_U6tzZOrGOhG-P5Q">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OjBG0TYJ85wj4kZBGKT5zg" name="risk_list,_XTvKUVC_EeCOOdX2nygdtA" guid="-OjBG0TYJ85wj4kZBGKT5zg">
    <keyConsiderations>&lt;p>
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully consider
    whether they are really serious risks. Tracking more than 20 risks is an onerous task.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot; guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project
    activities, and is the basis around which iterations are organized.
&lt;/p>
&lt;p>
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot; guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-n6SoYiPAHRCQ7_ijBo7HDQ" name="project_plan,_XT47UVC_EeCOOdX2nygdtA" guid="-n6SoYiPAHRCQ7_ijBo7HDQ">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bz4eQT2PCLc5HTVUv80VHw" name="stakeholder_request,_XUCsUVC_EeCOOdX2nygdtA" guid="-bz4eQT2PCLc5HTVUv80VHw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yDoqrEmFQC8M5-F71cOqdQ" name="build,_XUCsVFC_EeCOOdX2nygdtA" guid="-yDoqrEmFQC8M5-F71cOqdQ">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kOmfTZtoM7-Q1je-Y45JRA" name="design,_XUL2QVC_EeCOOdX2nygdtA" guid="-kOmfTZtoM7-Q1je-Y45JRA">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-r0WQrQNyJwW6yYbCa2TPuA" name="developer_test,_XUL2RFC_EeCOOdX2nygdtA" guid="-r0WQrQNyJwW6yYbCa2TPuA">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Br_uIO4VwieS7IpUjMDEmw" name="implementation,_XUL2R1C_EeCOOdX2nygdtA" guid="-Br_uIO4VwieS7IpUjMDEmw">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Z_rEkyq_mBpZaRq9jrv3SA" name="architecture_notebook,_XUfYQVC_EeCOOdX2nygdtA" guid="-Z_rEkyq_mBpZaRq9jrv3SA">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zejzGJiph6nffazkmL0qgw" name="requirements_management_process_description,_XUoiMVC_EeCOOdX2nygdtA" guid="-zejzGJiph6nffazkmL0qgw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sYRnx7y_LaS46PfdCiw-gw" name="vision,_XUoiNFC_EeCOOdX2nygdtA" guid="-sYRnx7y_LaS46PfdCiw-gw">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yNOPsDE2zjdDSZRDRHSaeQ" name="glossary,_XUoiN1C_EeCOOdX2nygdtA" guid="-yNOPsDE2zjdDSZRDRHSaeQ">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GDwsUlNVl1pyrB7Yikfo_w" name="storyboard,_XUyTMVC_EeCOOdX2nygdtA" guid="-GDwsUlNVl1pyrB7Yikfo_w">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-h3FZVGl2N6v4Gt51Cu8y1Q" name="user_role,_XUyTNFC_EeCOOdX2nygdtA" guid="-h3FZVGl2N6v4Gt51Cu8y1Q">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mXeyvKOr_htM8EIwjV2DaQ" name="user_story,_XUyTN1C_EeCOOdX2nygdtA" guid="-mXeyvKOr_htM8EIwjV2DaQ">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oMKDZIS7-ojFCwMB6YPCLg" name="test_manager,_XVFOIVC_EeCOOdX2nygdtA" guid="-oMKDZIS7-ojFCwMB6YPCLg">
    <refinedDescription>Roles organize the responsibility for performing tasks and developing work products into logical groups. Each role can be&#xD;
assigned to one or more people, and each person can fill one or more roles. When staffing the Test Manager role, you need&#xD;
to consider both the skills required for the role and the different approaches you can take to assigning staff to the role.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4ZF5AuVz3Os2uPe07XmGQQ" name="test_motivator,_XVO_IVC_EeCOOdX2nygdtA" guid="-4ZF5AuVz3Os2uPe07XmGQQ">
    <refinedDescription>&lt;p>&#xD;
    A test motivator is usually an external file that provides details about a test plan or test case. For example, a test&#xD;
    motivator file could be a document or spreadsheet containing detailed information about a specific test plan or test&#xD;
    case. It is convenient to be able to reference a test motivator file from a test plan and test case record. Test&#xD;
    motivators are useful in linking test requirements with test plans and test cases.&#xD;
&lt;/p>&#xD;
&lt;div class=&quot;p&quot;>&#xD;
    You can use associations between test plan and test case records with a test motivator to determine: &#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            If there is test coverage for the motivator&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            If a test plan associated with a motivator has an associated external file&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EgF58N8b9WIX5U4DKFwU6A" name="create_test_cases,_C2MCECAtEeCaxPnRDErJGw" guid="-EgF58N8b9WIX5U4DKFwU6A">
    <keyConsiderations>&lt;p>
    Develop test cases in parallel with requirements so that Analysts and Stakeholders can agree with the specific
    conditions of satisfaction for each requirement. The test cases act as acceptance criteria by expanding on the intent
    of the system&amp;nbsp;through actual scenarios of use.&amp;nbsp;This allows team members to measure progress in terms of
    passing test cases.&amp;nbsp;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TjXcv-m1G0qQGD_zNwhd0g" name="test_case,_C2MCFCAtEeCaxPnRDErJGw" guid="-TjXcv-m1G0qQGD_zNwhd0g">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xi3SYGuArwo3cp0BBqMeUg" name="tester,_XWRg8VC_EeCOOdX2nygdtA" guid="-xi3SYGuArwo3cp0BBqMeUg">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9VcsMkrWjTFsWA68E9ciag" name="stakeholder_request,_XWbR8VC_EeCOOdX2nygdtA" guid="-9VcsMkrWjTFsWA68E9ciag">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Fc5XgpBaL9nlutjYd_pD8w" name="test_log,_XWbR9FC_EeCOOdX2nygdtA" guid="-Fc5XgpBaL9nlutjYd_pD8w">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-R-Lkr-Mv8BqAIeaAE7dZZg" name="build,_XWkb4VC_EeCOOdX2nygdtA" guid="-R-Lkr-Mv8BqAIeaAE7dZZg">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-20Noy-86AWwzjTEscn6LHg" name="design,_XWkb5FC_EeCOOdX2nygdtA" guid="-20Noy-86AWwzjTEscn6LHg">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YzDDMzWAoNZRnwVNZCywQA" name="developer_test,_XWkb51C_EeCOOdX2nygdtA" guid="-YzDDMzWAoNZRnwVNZCywQA">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9fTwwFTqUpVjUUmm2vtyiA" name="implementation,_XWkb6lC_EeCOOdX2nygdtA" guid="-9fTwwFTqUpVjUUmm2vtyiA">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-K4bMI87VWXEM9G7bhhgjLw" name="requirements_attributes,_XWuM4VC_EeCOOdX2nygdtA" guid="-K4bMI87VWXEM9G7bhhgjLw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pRGhCw_ix34zxH7q6_R5RQ" name="requirements_traceability,_XWuM5FC_EeCOOdX2nygdtA" guid="-pRGhCw_ix34zxH7q6_R5RQ">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fSOoT_eOHaE0jtZzE4tl5Q" name="requirements_management_process_description,_XW394VC_EeCOOdX2nygdtA" guid="-fSOoT_eOHaE0jtZzE4tl5Q">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UtJpgnAkfjZcl_5cu5_XcA" name="vision,_XW395FC_EeCOOdX2nygdtA" guid="-UtJpgnAkfjZcl_5cu5_XcA">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-D5TYKL-txr8qv8C00maG5g" name="glossary,_XW3951C_EeCOOdX2nygdtA" guid="-D5TYKL-txr8qv8C00maG5g">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pT4TDJ3rzVhKS-7DT9P2Sg" name="storyboard,_XW396lC_EeCOOdX2nygdtA" guid="-pT4TDJ3rzVhKS-7DT9P2Sg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Or-R78-6UFnvE9xFZd8uYg" name="user_role,_XW397VC_EeCOOdX2nygdtA" guid="-Or-R78-6UFnvE9xFZd8uYg">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-M0Cdy6Vxc3-akiE5s1SN9Q" name="user_story,_XW398FC_EeCOOdX2nygdtA" guid="-M0Cdy6Vxc3-akiE5s1SN9Q">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Q1wd1lrFePZ7_s32__PTfQ" name="design_solution,_IOaD8CAtEeCaxPnRDErJGw" guid="-Q1wd1lrFePZ7_s32__PTfQ">
    <keyConsiderations>&lt;p>
    Each step in this task can cause all previous steps to be revisited in light of new information and decisions.&amp;nbsp;
    For example, while determining how elements collaborate&amp;nbsp;you might find a gap in the requirements that causes you
    to go back to the beginning after collaborating with the analyst, or when evaluating the design a reviewer
    could&amp;nbsp;note that a reusable element being used doesn't work as expected and that could cause you to identify new
    elements to take its place.
&lt;/p>
&lt;p>
    Consider the architecture while performing this task.&amp;nbsp; All design work must be done while regarding the
    architecture within which the design exists.&amp;nbsp; Furthermore, certain design elements will be deemed architecturally
    significant; those elements will require updates to the architecture.
&lt;/p>
&lt;p>
    This task will be applied numerous times.&amp;nbsp; Design is best performed in small chunks.
&lt;/p>
&lt;p>
    Even when starting the design for a particular project it&amp;nbsp;is expected that there will be existing frameworks and
    reusable elements.&amp;nbsp; Every step of this task must give attention to the existing design and existing
    implementation, utilizing existing elements when possible and emulating or improving existing elements as appropriate
    while designing this portion of the solution.
&lt;/p>
&lt;p>
    Apply patterns throughout this task.&amp;nbsp; Patterns represent proven designs and their usage promotes quality and
    consistency across the design.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This task is about designing part of the system, not the whole system.&amp;nbsp; It should be applied based upon some small
    subset of requirements.&amp;nbsp; The requirements driving the design could be scenario-based functional requirements,
    non-functional requirements, or a combination.
&lt;/p>
&lt;p>
    This task can be applied in some specific context such as the database access elements required for some
    scenario.&amp;nbsp; In this case the task might be applied&amp;nbsp;again later&amp;nbsp;to deal with a different context on the
    same requirements.&amp;nbsp; Keep in mind that to actually build some functionality of value&amp;nbsp;to the users, all
    contexts will typically need to be designed and implemented. For example, to actually utilize some system capability it
    will have to have been designed and implemented all its context such as user interface, business rules, database
    access, etc.
&lt;/p>
&lt;p>
    For cohesion and completeness, this task is described as an end-to-end pass of designing a scenario of system usage. In
    practice, this task will be revisited many times as the design is first considered, portions are implemented, more
    design is performed based on what was learned, etc. The healthiest application of this task is in very close proximity
    to the implementation.
&lt;/p>
&lt;p>
    If this task is being performed on an architecturally significant element the results of this design should be
    referenced by the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.slot.base/workproducts/technical_architecture_slot_FF074CDD.html&quot; guid=&quot;_8OD-cLPTEduocbW-TPTq7A&quot;>[Technical Architecture]&lt;/a>.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Xy7lxM7QLSrGGd6RSOFE8w" name="design,_IOj09CAtEeCaxPnRDErJGw" guid="-Xy7lxM7QLSrGGd6RSOFE8w">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qmKhFlnHUqqdEPNYp7Mb8g" name="detail_the_design,_IvohsCAtEeCaxPnRDErJGw" guid="-qmKhFlnHUqqdEPNYp7Mb8g">
    <refinedDescription>&lt;p>&#xD;
    Put the &quot;finish and polish&quot; on a class or set of classes by adding or refining relationships, attributes, cohesion, and&#xD;
    patterns. Any analysis classes or requirements that haven't been fully designed for the piece of functionality being&#xD;
    worked on are completed here.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This task is close to implementation. The developer or an automated tool should be able to create code from the&#xD;
    completed class design.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PgbU62BiCgaA4Aa8feY2Hw" name="implement_developer_tests,_J_p_ICAtEeCaxPnRDErJGw" guid="-PgbU62BiCgaA4Aa8feY2Hw">
    <keyConsiderations>&lt;ol>&#xD;
    &lt;li>&#xD;
        Automate tests via a unit regression testing tool (for example, xUnit) so that tests may be run by developers&#xD;
        whenever they make changes to the code.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test to the risk of the implementation element. For example, the more critical an element is, the more important it&#xD;
        is to test it thoroughly.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Pair with&amp;nbsp;team members with testing skills&amp;nbsp;in all steps of this task to gain insight on testing and&#xD;
        quality considerations.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    The&amp;nbsp;[Project Work] is implicitly used in implementation tasks to manage which requirements or change requests are&#xD;
    being realized in the code.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    Developer testing is different from other forms of testing in that it is based on the expected behavior of code units
    rather than being directly based on the system requirements.
&lt;/p>
&lt;p>
    It is best to do this at a small scale, much smaller than the complete code base to be authored by a developer over the
    course of an iteration. This can be done for one operation, one field added to a user interface, one stored procedure,
    etc. As the code base is incrementally built, new tests will be authored and existing tests might be revisited to test
    additional behavior.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SdPWO57_jdA7JaxuyzcEvQ" name="developer_test,_J_p_JSAtEeCaxPnRDErJGw" guid="-SdPWO57_jdA7JaxuyzcEvQ">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8d92EWdaS2I36jsGcNMTGg" name="implementation,_Njy0QyAtEeCaxPnRDErJGw" guid="-8d92EWdaS2I36jsGcNMTGg">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fTDEDfDbvfDsT4t5vpl4mA" name="test_log,_Njy0RSAtEeCaxPnRDErJGw" guid="-fTDEDfDbvfDsT4t5vpl4mA">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-t_YFKhfCeCOYgHjGaCsMrg" name="run_developer_tests,_Ooo8cCAtEeCaxPnRDErJGw" guid="-t_YFKhfCeCOYgHjGaCsMrg">
    <keyConsiderations>&lt;p>&#xD;
    It is common to require that code pass all developer tests before it can be delivered in an integrated source code&#xD;
    repository.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Pair with testing experts to gain insight on testing and quality considerations.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The&amp;nbsp;[Project Work]&amp;nbsp;is implicitly used in implementation tasks to manage which requirements or change requests&#xD;
    are being realized in the code.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-A9EliFthTApbFZKD1lrJ9w" name="implement_solution,_X2Cx4CJ3EeC5IMMv0prGFg" guid="-A9EliFthTApbFZKD1lrJ9w">
    <keyConsiderations>&lt;p>&#xD;
    It is best when developer tests already exist so there is an unambiguous definition of what behavior is considered&#xD;
    correct. The implementation should be immediately tested.&#xD;
&lt;/p>The [Project Work]&amp;nbsp; is implicitly used in implementation tasks to manage which requirements or change requests are&#xD;
being realized in the code.&lt;br /></keyConsiderations>
    <refinedDescription>&lt;p>
    Usually, this task is focused on a specific implementation&amp;nbsp;element, such as a class or component, but it does not
    need to be.
&lt;/p>
&lt;p>
    A portion of the design is implemented by performing this task. This task can be performed any number of times during
    an iteration. In fact it is best to do this task in as small a scope as possible to tighten the loop between it and
    related tasks involving developer testing and consideration of the design.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MSLOcUWaIytqM5Bnee45jQ" name="architect,_XX6ftFC_EeCOOdX2nygdtA" guid="-MSLOcUWaIytqM5Bnee45jQ">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IeE82xi5Mapm2Noy63BugA" name="tester,_XX6fulC_EeCOOdX2nygdtA" guid="-IeE82xi5Mapm2Noy63BugA">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kYixJHG11nylWg1mfgtI9Q" name="build,_XYEQsVC_EeCOOdX2nygdtA" guid="-kYixJHG11nylWg1mfgtI9Q">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uUUweUtlJ_C76of7AvB9mA" name="test_case,_XYNaoVC_EeCOOdX2nygdtA" guid="-uUUweUtlJ_C76of7AvB9mA">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Rb9F6HuFF-fOE_vwH8UnAw" name="stakeholder_request,_XYXLoVC_EeCOOdX2nygdtA" guid="-Rb9F6HuFF-fOE_vwH8UnAw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-s9erYboKQMgUaf1m0hUvPQ" name="architecture_notebook,_XYg8oVC_EeCOOdX2nygdtA" guid="-s9erYboKQMgUaf1m0hUvPQ">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4CSrwwqtKWGb1T_4n3QjMw" name="requirements_attributes,_XYg8pFC_EeCOOdX2nygdtA" guid="-4CSrwwqtKWGb1T_4n3QjMw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uQAkYSmQOfzy9mOxMIm2Pg" name="requirements_traceability,_XYqGkVC_EeCOOdX2nygdtA" guid="-uQAkYSmQOfzy9mOxMIm2Pg">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dqgXHMa1BuelQPVZj1bWnA" name="requirements_management_process_description,_XYqGlFC_EeCOOdX2nygdtA" guid="-dqgXHMa1BuelQPVZj1bWnA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2ZZLJOV3Ic_eIyPtiky8VA" name="vision,_XYqGl1C_EeCOOdX2nygdtA" guid="-2ZZLJOV3Ic_eIyPtiky8VA">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dCR-RMjHwgWX-daJ1m17QQ" name="glossary,_XYqGmlC_EeCOOdX2nygdtA" guid="-dCR-RMjHwgWX-daJ1m17QQ">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--RIovgFygIoJCVicnb_41g" name="storyboard,_XYz3kVC_EeCOOdX2nygdtA" guid="--RIovgFygIoJCVicnb_41g">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yEyBGoRvgOEWEx7Ixt71Uw" name="user_role,_XYz3lFC_EeCOOdX2nygdtA" guid="-yEyBGoRvgOEWEx7Ixt71Uw">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-c4fUm3JcVhZU_JDB9rzscw" name="user_story,_XYz3l1C_EeCOOdX2nygdtA" guid="-c4fUm3JcVhZU_JDB9rzscw">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rDHYLQI0GtK31VzkiJvtIg" name="integrate_and_create_build,_dxqxECAtEeCaxPnRDErJGw" guid="-rDHYLQI0GtK31VzkiJvtIg">
    <keyConsiderations>&lt;p>
    In order to be effective at applying the practice of &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.continuous_integration.base/guidances/guidelines/continuous_integration_13C1A8CA.html&quot; guid=&quot;_i8bUEL6cEdqti4GwqTkbsQ&quot;>Continuous Integration&lt;/a>,&amp;nbsp;the time to integrate, build, and test the increment
    must be short enough that it can be performed several times per day.&amp;nbsp; Changes should be broken down into
    relatively small &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/change_set_430bf233.html&quot; guid=&quot;_1QU9MAIoEdyLh7vsrHZ4YA&quot;>Change Set&lt;/a>s that can be implemented, integrated and tested quickly.
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-A5y5dkG_TeNlbRGveKQ8Jg" name="build,_dxqxFSAtEeCaxPnRDErJGw" guid="-A5y5dkG_TeNlbRGveKQ8Jg">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rHc8jBfe7OzJ4jFGUCbw3A" name="design,_XaTFUVC_EeCOOdX2nygdtA" guid="-rHc8jBfe7OzJ4jFGUCbw3A">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wxwyU1jSvihW2YCATYUhaA" name="developer_test,_XaTFVFC_EeCOOdX2nygdtA" guid="-wxwyU1jSvihW2YCATYUhaA">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EGqxDqt3f8SauJ06J59Ikg" name="implementation,_XaTFV1C_EeCOOdX2nygdtA" guid="-EGqxDqt3f8SauJ06J59Ikg">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EuwLi0LGl6pmVhn4nhPqBg" name="run_tests,_hcNwMCAtEeCaxPnRDErJGw" guid="-EuwLi0LGl6pmVhn4nhPqBg">
    <keyConsiderations>&lt;ul>
    &lt;li>
        Run all tests as frequently as possible. Ideally, run all test scripts against each build deployed to the test
        environment. If this is impractical, run regression tests for existing functionality, and&amp;nbsp;focus the test cycle
        on work items completed in the new build.
    &lt;/li>
    &lt;li>
        Even test scripts that are expected to fail provide valuable feedback. However, once a test script is passing, it
        should not fail&amp;nbsp;against subsequent builds of the solution.
    &lt;/li>
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vtItOjYwI6332BYsvtpdow" name="test_log,_hcNwNSAtEeCaxPnRDErJGw" guid="-vtItOjYwI6332BYsvtpdow">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-u4OtZuTcETBWLPomg67cGg" name="submit_change_request,_jFtdkCAtEeCaxPnRDErJGw" guid="-u4OtZuTcETBWLPomg67cGg">
    <refinedDescription>&lt;p>&#xD;
    When submitting a change request, provide information that describes the change. This must include a detailed&#xD;
    description of the requested change, at a minimum. Guidance on the type of information that should be provided when&#xD;
    submitting a change request can be found in the Sample Change Request form.&lt;br />&#xD;
    &lt;br />&#xD;
    Step 1. Identify change request.&lt;br />&#xD;
    Step 2. Document benefits, risk, and cost associated with the request.&lt;br />&#xD;
    Step 3. Log the change request in the locally adopted change request management system.&lt;br />&#xD;
    Step 4. Proceed to review and classify the change request.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Hints and tips&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    â€¢ Quantify known cost and benefits.&lt;br />&#xD;
    â€¢ List the effects or the impact if the change request is not executed.&lt;br />&#xD;
    â€¢ Include the time required to complete the change request.&lt;br />&#xD;
    &lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ykRYZWCA_ga_4zSWC6LhTw" name="change_request,_jFtdkSAtEeCaxPnRDErJGw" guid="-ykRYZWCA_ga_4zSWC6LhTw">
    <refinedDescription>&lt;p>&#xD;
    A change request (CR) is typically a proposed variance from the system's current (or currently planned)&#xD;
    behavior. It can also be used for a generic piece of work that is required to support the project. Change requests&#xD;
    may include  &#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A report of an error (defect)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An enhancement request&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Change requests provide a record of decisions and, with an appropriate assessment process, ensures that their change&#xD;
    impacts are considered.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some important types of change requests include:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Enhancement Requests&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Used by various stakeholders to request future features that they desire to have included in the product. These are a type&#xD;
    of stakeholder request that capture and articulate an understanding of the stakeholders needs.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Defects&lt;/b> &#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Reports of anomalies or failures in a delivered work product. Defects include such things as omissions and&#xD;
    imperfections found during early lifecycle phases, or symptoms of faults (failures) that need to be isolated and&#xD;
    corrected within the software. Defects may also include deviations from what can reasonably be expected of the software&#xD;
    behavior (such as usability issues).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The purpose of a defect is to communicate the details of the issue, enabling corrective action, resolution, and&#xD;
    tracking to occur. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Pccr92J5ngigveeQbWz3_Q" name="tester,_Xac2UVC_EeCOOdX2nygdtA" guid="-Pccr92J5ngigveeQbWz3_Q">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ITESmd7fGtYzhER1UfjNnQ" name="test_case,_XamAQVC_EeCOOdX2nygdtA" guid="-ITESmd7fGtYzhER1UfjNnQ">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wXz8UU-2qtyxbY6yW2892Q" name="any_role,_XamARFC_EeCOOdX2nygdtA" guid="-wXz8UU-2qtyxbY6yW2892Q">
    <refinedDescription>&lt;p> This role allows anyone on a team to perform general tasks: &lt;/p>
&lt;ul>
  &lt;li> Access artifacts in the configuration control system for development and 
    maintenance &lt;/li>
  &lt;li> Submit change requests for the project &lt;/li>
  &lt;li> Participate in assessments and reviews &lt;/li>
  &lt;li> Volunteer to work on a particular iteration &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-beCVF81crAQaNPxesKdOUQ" name="change_request,_klYgkSAtEeCaxPnRDErJGw" guid="-beCVF81crAQaNPxesKdOUQ">
    <refinedDescription>&lt;p>&#xD;
    A change request (CR) is typically a proposed variance from the system's current (or currently planned)&#xD;
    behavior. It can also be used for a generic piece of work that is required to support the project. Change requests&#xD;
    may include  &#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A report of an error (defect)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An enhancement request&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Change requests provide a record of decisions and, with an appropriate assessment process, ensures that their change&#xD;
    impacts are considered.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some important types of change requests include:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Enhancement Requests&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Used by various stakeholders to request future features that they desire to have included in the product. These are a type&#xD;
    of stakeholder request that capture and articulate an understanding of the stakeholders needs.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Defects&lt;/b> &#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Reports of anomalies or failures in a delivered work product. Defects include such things as omissions and&#xD;
    imperfections found during early lifecycle phases, or symptoms of faults (failures) that need to be isolated and&#xD;
    corrected within the software. Defects may also include deviations from what can reasonably be expected of the software&#xD;
    behavior (such as usability issues).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The purpose of a defect is to communicate the details of the issue, enabling corrective action, resolution, and&#xD;
    tracking to occur. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qpCcEAtWGYFjN_pEMoiqlg" name="design_solution,_nzA6MCAtEeCaxPnRDErJGw" guid="-qpCcEAtWGYFjN_pEMoiqlg">
    <keyConsiderations>&lt;p>
    Each step in this task can cause all previous steps to be revisited in light of new information and decisions.&amp;nbsp;
    For example, while determining how elements collaborate&amp;nbsp;you might find a gap in the requirements that causes you
    to go back to the beginning after collaborating with the analyst, or when evaluating the design a reviewer
    could&amp;nbsp;note that a reusable element being used doesn't work as expected and that could cause you to identify new
    elements to take its place.
&lt;/p>
&lt;p>
    Consider the architecture while performing this task.&amp;nbsp; All design work must be done while regarding the
    architecture within which the design exists.&amp;nbsp; Furthermore, certain design elements will be deemed architecturally
    significant; those elements will require updates to the architecture.
&lt;/p>
&lt;p>
    This task will be applied numerous times.&amp;nbsp; Design is best performed in small chunks.
&lt;/p>
&lt;p>
    Even when starting the design for a particular project it&amp;nbsp;is expected that there will be existing frameworks and
    reusable elements.&amp;nbsp; Every step of this task must give attention to the existing design and existing
    implementation, utilizing existing elements when possible and emulating or improving existing elements as appropriate
    while designing this portion of the solution.
&lt;/p>
&lt;p>
    Apply patterns throughout this task.&amp;nbsp; Patterns represent proven designs and their usage promotes quality and
    consistency across the design.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This task is about designing part of the system, not the whole system.&amp;nbsp; It should be applied based upon some small
    subset of requirements.&amp;nbsp; The requirements driving the design could be scenario-based functional requirements,
    non-functional requirements, or a combination.
&lt;/p>
&lt;p>
    This task can be applied in some specific context such as the database access elements required for some
    scenario.&amp;nbsp; In this case the task might be applied&amp;nbsp;again later&amp;nbsp;to deal with a different context on the
    same requirements.&amp;nbsp; Keep in mind that to actually build some functionality of value&amp;nbsp;to the users, all
    contexts will typically need to be designed and implemented. For example, to actually utilize some system capability it
    will have to have been designed and implemented all its context such as user interface, business rules, database
    access, etc.
&lt;/p>
&lt;p>
    For cohesion and completeness, this task is described as an end-to-end pass of designing a scenario of system usage. In
    practice, this task will be revisited many times as the design is first considered, portions are implemented, more
    design is performed based on what was learned, etc. The healthiest application of this task is in very close proximity
    to the implementation.
&lt;/p>
&lt;p>
    If this task is being performed on an architecturally significant element the results of this design should be
    referenced by the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.slot.base/workproducts/technical_architecture_slot_FF074CDD.html&quot; guid=&quot;_8OD-cLPTEduocbW-TPTq7A&quot;>[Technical Architecture]&lt;/a>.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NPabJFh6deJ9a46AYlc6mQ" name="design,_nzA6NSAtEeCaxPnRDErJGw" guid="-NPabJFh6deJ9a46AYlc6mQ">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sISiC7tqBdBB6MDR4OkcYA" name="detail_the_design,_o1xXsCAtEeCaxPnRDErJGw" guid="-sISiC7tqBdBB6MDR4OkcYA">
    <refinedDescription>&lt;p>&#xD;
    Put the &quot;finish and polish&quot; on a class or set of classes by adding or refining relationships, attributes, cohesion, and&#xD;
    patterns. Any analysis classes or requirements that haven't been fully designed for the piece of functionality being&#xD;
    worked on are completed here.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This task is close to implementation. The developer or an automated tool should be able to create code from the&#xD;
    completed class design.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-W7UAwHZVYPtNzz_U6f9qwA" name="implement_developer_tests,_qgd-8CAtEeCaxPnRDErJGw" guid="-W7UAwHZVYPtNzz_U6f9qwA">
    <keyConsiderations>&lt;ol>&#xD;
    &lt;li>&#xD;
        Automate tests via a unit regression testing tool (for example, xUnit) so that tests may be run by developers&#xD;
        whenever they make changes to the code.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test to the risk of the implementation element. For example, the more critical an element is, the more important it&#xD;
        is to test it thoroughly.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Pair with&amp;nbsp;team members with testing skills&amp;nbsp;in all steps of this task to gain insight on testing and&#xD;
        quality considerations.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    The&amp;nbsp;[Project Work] is implicitly used in implementation tasks to manage which requirements or change requests are&#xD;
    being realized in the code.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    Developer testing is different from other forms of testing in that it is based on the expected behavior of code units
    rather than being directly based on the system requirements.
&lt;/p>
&lt;p>
    It is best to do this at a small scale, much smaller than the complete code base to be authored by a developer over the
    course of an iteration. This can be done for one operation, one field added to a user interface, one stored procedure,
    etc. As the code base is incrementally built, new tests will be authored and existing tests might be revisited to test
    additional behavior.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OlQT3BcW1K9HAxVtXab2_A" name="developer_test,_qgd-9SAtEeCaxPnRDErJGw" guid="-OlQT3BcW1K9HAxVtXab2_A">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-e7ytuUeJVjHS6v3xRgNSVw" name="implement_solution,_rYfzICAtEeCaxPnRDErJGw" guid="-e7ytuUeJVjHS6v3xRgNSVw">
    <keyConsiderations>&lt;p>&#xD;
    It is best when developer tests already exist so there is an unambiguous definition of what behavior is considered&#xD;
    correct. The implementation should be immediately tested.&#xD;
&lt;/p>The [Project Work]&amp;nbsp; is implicitly used in implementation tasks to manage which requirements or change requests are&#xD;
being realized in the code.&lt;br /></keyConsiderations>
    <refinedDescription>&lt;p>
    Usually, this task is focused on a specific implementation&amp;nbsp;element, such as a class or component, but it does not
    need to be.
&lt;/p>
&lt;p>
    A portion of the design is implemented by performing this task. This task can be performed any number of times during
    an iteration. In fact it is best to do this task in as small a scope as possible to tighten the loop between it and
    related tasks involving developer testing and consideration of the design.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YvS4-G6O4KSBVWnNM0vU9Q" name="implementation,_rYfzISAtEeCaxPnRDErJGw" guid="-YvS4-G6O4KSBVWnNM0vU9Q">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pRIERnLiHeyiCSVK34f6QA" name="run_developer_tests,_sYIEICAtEeCaxPnRDErJGw" guid="-pRIERnLiHeyiCSVK34f6QA">
    <keyConsiderations>&lt;p>&#xD;
    It is common to require that code pass all developer tests before it can be delivered in an integrated source code&#xD;
    repository.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Pair with testing experts to gain insight on testing and quality considerations.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The&amp;nbsp;[Project Work]&amp;nbsp;is implicitly used in implementation tasks to manage which requirements or change requests&#xD;
    are being realized in the code.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ysiu6MhJ9pOW9hr7z6_1vg" name="test_log,_sYIEISAtEeCaxPnRDErJGw" guid="-Ysiu6MhJ9pOW9hr7z6_1vg">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rBq7J9EhzjeGogEIdSTu7g" name="resolve_change_request,_txFbICAtEeCaxPnRDErJGw" guid="-rBq7J9EhzjeGogEIdSTu7g">
    <keyConsiderations>Verify that all required Change Sets are identified against the Change Request, and that they are in the appropriate state.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This task describes the steps to indicate that a change has been implemented and is ready for&#xD;
    verification. &#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Hints and tips&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Review the resolution of the change request to ensure it meets all stakeholder expectations.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TL9TvsmnsGztpxPkeBO3lw" name="integrate_and_create_build,_wRuL4CAtEeCaxPnRDErJGw" guid="-TL9TvsmnsGztpxPkeBO3lw">
    <keyConsiderations>&lt;p>
    In order to be effective at applying the practice of &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.continuous_integration.base/guidances/guidelines/continuous_integration_13C1A8CA.html&quot; guid=&quot;_i8bUEL6cEdqti4GwqTkbsQ&quot;>Continuous Integration&lt;/a>,&amp;nbsp;the time to integrate, build, and test the increment
    must be short enough that it can be performed several times per day.&amp;nbsp; Changes should be broken down into
    relatively small &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/change_set_430bf233.html&quot; guid=&quot;_1QU9MAIoEdyLh7vsrHZ4YA&quot;>Change Set&lt;/a>s that can be implemented, integrated and tested quickly.
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JDyio_53cb_gDFZB9_yoZg" name="build,_wRuL4yAtEeCaxPnRDErJGw" guid="-JDyio_53cb_gDFZB9_yoZg">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VmoCxRTgxun9apicU8sgPg" name="run_tests,_z5SIcCAtEeCaxPnRDErJGw" guid="-VmoCxRTgxun9apicU8sgPg">
    <keyConsiderations>&lt;ul>
    &lt;li>
        Run all tests as frequently as possible. Ideally, run all test scripts against each build deployed to the test
        environment. If this is impractical, run regression tests for existing functionality, and&amp;nbsp;focus the test cycle
        on work items completed in the new build.
    &lt;/li>
    &lt;li>
        Even test scripts that are expected to fail provide valuable feedback. However, once a test script is passing, it
        should not fail&amp;nbsp;against subsequent builds of the solution.
    &lt;/li>
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-joS6O4eAje7u_BpcXqXdng" name="verify_change_request,_1qY5sCAtEeCaxPnRDErJGw" guid="-joS6O4eAje7u_BpcXqXdng">
    <refinedDescription>This tasks defines the steps required to verify that a change has been implemented as requested.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oC8ofnTrD4y1xRXGsQQ4IQ" name="architect,_XavxR1C_EeCOOdX2nygdtA" guid="-oC8ofnTrD4y1xRXGsQQ4IQ">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MOT13BFE_cVNYi6hD5Blqg" name="tester,_Xa5iQVC_EeCOOdX2nygdtA" guid="-MOT13BFE_cVNYi6hD5Blqg">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-O1XGK2GxFvnLfykqLm8a2Q" name="stakeholder_request,_Xa5iRFC_EeCOOdX2nygdtA" guid="-O1XGK2GxFvnLfykqLm8a2Q">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2NfXJDrhMDMDlauNd80tdA" name="test_case,_XbCsMVC_EeCOOdX2nygdtA" guid="-2NfXJDrhMDMDlauNd80tdA">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6fcuqBvOFx_LhGyg7nOETQ" name="architecture_notebook,_XbMdMVC_EeCOOdX2nygdtA" guid="-6fcuqBvOFx_LhGyg7nOETQ">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-B9P58w0mtYzfIXG3tHrsIg" name="requirements_attributes,_XbfYIVC_EeCOOdX2nygdtA" guid="-B9P58w0mtYzfIXG3tHrsIg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dLsPW7EWewQRppqc0ceRoA" name="requirements_traceability,_XbfYJFC_EeCOOdX2nygdtA" guid="-dLsPW7EWewQRppqc0ceRoA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ghFqomDh_z-t5lu3z705RA" name="requirements_management_process_description,_XbfYJ1C_EeCOOdX2nygdtA" guid="-ghFqomDh_z-t5lu3z705RA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LSxpmmYgOsVqBfDcwis8IQ" name="vision,_XbpJIVC_EeCOOdX2nygdtA" guid="-LSxpmmYgOsVqBfDcwis8IQ">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NJRFAJA8OnGhHYopJ9DX-Q" name="glossary,_XbpJJFC_EeCOOdX2nygdtA" guid="-NJRFAJA8OnGhHYopJ9DX-Q">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-M1mS7axiRTIk5le26N3KvA" name="storyboard,_XbpJJ1C_EeCOOdX2nygdtA" guid="-M1mS7axiRTIk5le26N3KvA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fnoYWS4QgFQra8Tn5Brahg" name="user_role,_XbyTEVC_EeCOOdX2nygdtA" guid="-fnoYWS4QgFQra8Tn5Brahg">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-p7II_Npv6BHtdEnSaKj5wg" name="user_story,_XbyTFFC_EeCOOdX2nygdtA" guid="-p7II_Npv6BHtdEnSaKj5wg">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PStSuyiFJ2AuHT9xJp0P3g" name="change_request_implementer,_XcYwAVC_EeCOOdX2nygdtA" guid="-PStSuyiFJ2AuHT9xJp0P3g">
    <keyConsiderations>&lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: Batang; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: KO; mso-bidi-language: AR-SA&quot;>On&#xD;
large projects, this role is typically assigned to those with a business analyst or a developer skill set.&lt;/span></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This role represents the individual on the development team who is responsible for implementing a change request. This&#xD;
    is not really a new role, as anyone playing this role will also be playing another role on the development team.&#xD;
    Because the skills required will depend upon which particular artifacts are affected, it is convenient to capture this&#xD;
    responsibility in a generic role.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    What are the responsibilities of the Change Control Implementer?&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The change control implementer is responsible for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Obtain approvals from the project sponsor before the change request is scheduled.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Review the testing results from the change development.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Develop and prepare the change for production.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YyZAgJhcfvnxLWSlNb0Gmg" name="change_request_verifier,_Xch58VC_EeCOOdX2nygdtA" guid="-YyZAgJhcfvnxLWSlNb0Gmg">
    <refinedDescription>&lt;p>&#xD;
    This role represents the individual on the development team who is responsible for verifying that a resolved&#xD;
    change request does in fact satisfy the intent of the request. This is not a new role, as anyone playing this&#xD;
    role will also be playing another role while performing this task. For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        For a change request that implements a new feature or scenario, the Request Verifier would also be a&#xD;
        Tester that tests the system to verify the implementation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        For a change request that adds a new requirement, the Request Verifier would also be an Analyst that&#xD;
        performs a peer review.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Because the skills required for this role depend on which artifacts are affected, it is convenient to capture&#xD;
    this responsibility in a generic role.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    What are the responsibilities of the Change Request Verifier?&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    1. Develop test procedures.&lt;br />&#xD;
    2. Schedule and run tests.&lt;br />&#xD;
    3. Document the test results.&lt;br />&#xD;
    4. Use the test results as part of the change documentation.&lt;br />&#xD;
    5. Notify all stakeholders who are impacted by the change.&lt;br />&#xD;
&lt;/p>&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fkpTtMR6wURyalfcVx1N4g" name="manage_iteration,_49r2cCAtEeCaxPnRDErJGw" guid="-fkpTtMR6wURyalfcVx1N4g">
    <keyConsiderations>&lt;p>
    Select an approach for the collection of basic metrics: ideally, they are automatically generated from the tools at
    hand, but can be manually assembled, or both. &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>Outline
    which metrics the project should use in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.mgmt.slot.base/workproducts/project_definition_and_scope_slot_BB8EB6F7.html&quot; guid=&quot;_RJMUcNpUEdyzZqGyZ7hwdw&quot;>[Project Definition and Scope]&lt;/a>.&lt;/span>
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    Developing the team is part of executing the project. The project manager is responsible for improving the interactions and trust 
    between team members, incorporating team building into project activities, and empowering the
    team to make decisions. Management is done by objectives and not by time reporting.
&lt;/p>
&lt;p>
    The project manager helps the team meet the iteration objectives by removing constraints, and by monitoring the progress
    and work remaining to completion. When the team is falling behind, the project manager helps the team
    assess how it can reduce work and still meet the iteration goals. Involve stakeholders in approving changes and actions
    that affect them, so that their objectives for the iteration can be met, and the issues they raise can be solved throughout
    the iteration.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-b1GMbFENv5Am5aTrmZOexg" name="iteration_plan,_49r2cSAtEeCaxPnRDErJGw" guid="-b1GMbFENv5Am5aTrmZOexg">
    <keyConsiderations>&lt;p>

    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work

    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the

    remaining high priority work items, plus a few mid-priority ones from the Work Items List). When work items are assigned

    to an iteration, no matter what their previous priorities, the team has to make sure that they are able to develop

    what has been assigned to the iteration. Deciding what to develop first (or

    even to develop things in parallel) on an iteration will vary from project to project, from iteration to iteration.

&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Y6_iNxgwQCHxFOo2VpeOaw" name="risk_list,_49r2cyAtEeCaxPnRDErJGw" guid="-Y6_iNxgwQCHxFOo2VpeOaw">
    <keyConsiderations>&lt;p>
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully consider
    whether they are really serious risks. Tracking more than 20 risks is an onerous task.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot; guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project
    activities, and is the basis around which iterations are organized.
&lt;/p>
&lt;p>
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot; guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XGGaWL2Ln0oHg-mTjZ1dKQ" name="work_items_list,_49r2dSAtEeCaxPnRDErJGw" guid="-XGGaWL2Ln0oHg-mTjZ1dKQ">
    <keyConsiderations>&lt;p>
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact provides a focal point for the entire team:
&lt;/p>
&lt;ul>
    &lt;li>
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note
        that some of these requests may never be implemented, or be implemented in later projects.
    &lt;/li>
    &lt;li>
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list
        is prioritized separately.
    &lt;/li>
    &lt;li>
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be
        delivered, get references to material required to carry out the work, and report progress made.
    &lt;/li>
&lt;/ul>
&lt;p>
    These are the typical work items that go on this list:
&lt;/p>
&lt;ul>
    &lt;li>
        Use cases (and references to use-case specifications)
    &lt;/li>
    &lt;li>
        System-wide requirements
    &lt;/li>
    &lt;li>
        Changes and enhancement requests
    &lt;/li>
    &lt;li>
        Defects
    &lt;/li>
    &lt;li>
        Development tasks
    &lt;/li>
&lt;/ul>
&lt;p>
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child
    relationships, where the lowest level is a specification and tracking device for micro-increments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ixWpO6WkKy_3cRthrSozZw" name="test_plan,_Tl43UiNTEeCOWdM_goLzAA" guid="-ixWpO6WkKy_3cRthrSozZw">
    <refinedDescription>&lt;p>&#xD;
    The Test Plan forms the framework within which the team performing the testing will work for the given schedule. It&#xD;
    directs, guides, and constrains the test effort, focusing the work on the useful and necessary deliverables. It also&#xD;
    communicates the intent of the effort to stakeholders. As such, the Test Plan should avoid detail that would not be&#xD;
    understood, or would be considered irrelevant by the stakeholders in the test effort.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In cultures or domains in which this work product is not recognized as a formal work product, it is still important to&#xD;
    address the different aspects represented by the Test Plan as part of the planning effort, and make appropriate&#xD;
    decisions about what testing will be undertaken, and how the test effort will be conducted.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XEkontMGWIRKlSX5hzdPNA" name="project_manager,_XdbR0VC_EeCOOdX2nygdtA" guid="-XEkontMGWIRKlSX5hzdPNA">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RTM-Dsou9lJoY96xqt7L8Q" name="architect,_XdbR11C_EeCOOdX2nygdtA" guid="-RTM-Dsou9lJoY96xqt7L8Q">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eRXeKc1D0e2DXyROoLv59Q" name="tester,_XdlC1FC_EeCOOdX2nygdtA" guid="-eRXeKc1D0e2DXyROoLv59Q">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k-DAXSHP19JBaIPrUhgmfA" name="stakeholder_request,_XduMwVC_EeCOOdX2nygdtA" guid="-k-DAXSHP19JBaIPrUhgmfA">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-t4RPz9LjLDrY2WbdVjeolw" name="project_plan,_Xd39wVC_EeCOOdX2nygdtA" guid="-t4RPz9LjLDrY2WbdVjeolw">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RrPpjZTOTif_ZAZufXKdlQ" name="architecture_notebook,_XeBuwVC_EeCOOdX2nygdtA" guid="-RrPpjZTOTif_ZAZufXKdlQ">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--oyW1sjVBupdEJet9VYORQ" name="build,_XeBuxFC_EeCOOdX2nygdtA" guid="--oyW1sjVBupdEJet9VYORQ">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hT8yRtMxob1br8Qk3yft6w" name="design,_XeK4sVC_EeCOOdX2nygdtA" guid="-hT8yRtMxob1br8Qk3yft6w">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JGwQ3lJfMuNTPXaxDPaLcw" name="developer_test,_XeK4tFC_EeCOOdX2nygdtA" guid="-JGwQ3lJfMuNTPXaxDPaLcw">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LU0egnA1bVXu0JedhymmHQ" name="implementation,_XeK4t1C_EeCOOdX2nygdtA" guid="-LU0egnA1bVXu0JedhymmHQ">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-peZiRcZzCH-rCIEabS5img" name="test_case,_XeUpsVC_EeCOOdX2nygdtA" guid="-peZiRcZzCH-rCIEabS5img">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PHlZAvrPCwdvNlAH1HBoFQ" name="test_log,_XeeasVC_EeCOOdX2nygdtA" guid="-PHlZAvrPCwdvNlAH1HBoFQ">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8rAOZ0dtp5-EFoWL1icBEQ" name="requirements_attributes,_XenkoVC_EeCOOdX2nygdtA" guid="-8rAOZ0dtp5-EFoWL1icBEQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PWRDfpiDBI0ZM6VUDik9Wg" name="requirements_traceability,_XenkpFC_EeCOOdX2nygdtA" guid="-PWRDfpiDBI0ZM6VUDik9Wg">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2df-5Z2vM4kF_WjCdgNB9Q" name="requirements_management_process_description,_XexVoVC_EeCOOdX2nygdtA" guid="-2df-5Z2vM4kF_WjCdgNB9Q">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_pb3QesHX5jc33rGw-j3Zw" name="vision,_XexVpFC_EeCOOdX2nygdtA" guid="-_pb3QesHX5jc33rGw-j3Zw">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-V-dPRJhZUrX7cNUa0Vltlw" name="glossary,_XexVp1C_EeCOOdX2nygdtA" guid="-V-dPRJhZUrX7cNUa0Vltlw">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tA4ph-YfvGWPY7iHl6ioEw" name="storyboard,_Xe6fkVC_EeCOOdX2nygdtA" guid="-tA4ph-YfvGWPY7iHl6ioEw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9k1s2thUMioaDPVat4j3UQ" name="user_role,_Xe6flFC_EeCOOdX2nygdtA" guid="-9k1s2thUMioaDPVat4j3UQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-upcb92hkgm3HCUB1ikvh0Q" name="user_story,_Xe6fl1C_EeCOOdX2nygdtA" guid="-upcb92hkgm3HCUB1ikvh0Q">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dG0X9ShLtQsFuKsdmvJEZA" name="test_manager,_XfOBkVC_EeCOOdX2nygdtA" guid="-dG0X9ShLtQsFuKsdmvJEZA">
    <refinedDescription>Roles organize the responsibility for performing tasks and developing work products into logical groups. Each role can be&#xD;
assigned to one or more people, and each person can fill one or more roles. When staffing the Test Manager role, you need&#xD;
to consider both the skills required for the role and the different approaches you can take to assigning staff to the role.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-u3s_rIoAAafpUAhHNiqr2A" name="test_motivator,_XfXLgVC_EeCOOdX2nygdtA" guid="-u3s_rIoAAafpUAhHNiqr2A">
    <refinedDescription>&lt;p>&#xD;
    A test motivator is usually an external file that provides details about a test plan or test case. For example, a test&#xD;
    motivator file could be a document or spreadsheet containing detailed information about a specific test plan or test&#xD;
    case. It is convenient to be able to reference a test motivator file from a test plan and test case record. Test&#xD;
    motivators are useful in linking test requirements with test plans and test cases.&#xD;
&lt;/p>&#xD;
&lt;div class=&quot;p&quot;>&#xD;
    You can use associations between test plan and test case records with a test motivator to determine: &#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            If there is test coverage for the motivator&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            If a test plan associated with a motivator has an associated external file&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3vv8bCOVosBbPmSXQeO8hg" name="change_request,_klYgkSAtEeCaxPnRDErJGw" guid="-3vv8bCOVosBbPmSXQeO8hg">
    <refinedDescription>&lt;p>&#xD;
    A change request (CR) is typically a proposed variance from the system's current (or currently planned)&#xD;
    behavior. It can also be used for a generic piece of work that is required to support the project. Change requests&#xD;
    may include  &#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A report of an error (defect)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An enhancement request&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Change requests provide a record of decisions and, with an appropriate assessment process, ensures that their change&#xD;
    impacts are considered.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some important types of change requests include:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Enhancement Requests&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Used by various stakeholders to request future features that they desire to have included in the product. These are a type&#xD;
    of stakeholder request that capture and articulate an understanding of the stakeholders needs.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Defects&lt;/b> &#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Reports of anomalies or failures in a delivered work product. Defects include such things as omissions and&#xD;
    imperfections found during early lifecycle phases, or symptoms of faults (failures) that need to be isolated and&#xD;
    corrected within the software. Defects may also include deviations from what can reasonably be expected of the software&#xD;
    behavior (such as usability issues).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The purpose of a defect is to communicate the details of the issue, enabling corrective action, resolution, and&#xD;
    tracking to occur. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Z9o06Ku3MfGN5CHGffEAKQ" name="design_solution,_nzA6MCAtEeCaxPnRDErJGw" guid="-Z9o06Ku3MfGN5CHGffEAKQ">
    <keyConsiderations>&lt;p>
    Each step in this task can cause all previous steps to be revisited in light of new information and decisions.&amp;nbsp;
    For example, while determining how elements collaborate&amp;nbsp;you might find a gap in the requirements that causes you
    to go back to the beginning after collaborating with the analyst, or when evaluating the design a reviewer
    could&amp;nbsp;note that a reusable element being used doesn't work as expected and that could cause you to identify new
    elements to take its place.
&lt;/p>
&lt;p>
    Consider the architecture while performing this task.&amp;nbsp; All design work must be done while regarding the
    architecture within which the design exists.&amp;nbsp; Furthermore, certain design elements will be deemed architecturally
    significant; those elements will require updates to the architecture.
&lt;/p>
&lt;p>
    This task will be applied numerous times.&amp;nbsp; Design is best performed in small chunks.
&lt;/p>
&lt;p>
    Even when starting the design for a particular project it&amp;nbsp;is expected that there will be existing frameworks and
    reusable elements.&amp;nbsp; Every step of this task must give attention to the existing design and existing
    implementation, utilizing existing elements when possible and emulating or improving existing elements as appropriate
    while designing this portion of the solution.
&lt;/p>
&lt;p>
    Apply patterns throughout this task.&amp;nbsp; Patterns represent proven designs and their usage promotes quality and
    consistency across the design.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This task is about designing part of the system, not the whole system.&amp;nbsp; It should be applied based upon some small
    subset of requirements.&amp;nbsp; The requirements driving the design could be scenario-based functional requirements,
    non-functional requirements, or a combination.
&lt;/p>
&lt;p>
    This task can be applied in some specific context such as the database access elements required for some
    scenario.&amp;nbsp; In this case the task might be applied&amp;nbsp;again later&amp;nbsp;to deal with a different context on the
    same requirements.&amp;nbsp; Keep in mind that to actually build some functionality of value&amp;nbsp;to the users, all
    contexts will typically need to be designed and implemented. For example, to actually utilize some system capability it
    will have to have been designed and implemented all its context such as user interface, business rules, database
    access, etc.
&lt;/p>
&lt;p>
    For cohesion and completeness, this task is described as an end-to-end pass of designing a scenario of system usage. In
    practice, this task will be revisited many times as the design is first considered, portions are implemented, more
    design is performed based on what was learned, etc. The healthiest application of this task is in very close proximity
    to the implementation.
&lt;/p>
&lt;p>
    If this task is being performed on an architecturally significant element the results of this design should be
    referenced by the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.slot.base/workproducts/technical_architecture_slot_FF074CDD.html&quot; guid=&quot;_8OD-cLPTEduocbW-TPTq7A&quot;>[Technical Architecture]&lt;/a>.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KHA_lRAghhDULbD70uefaA" name="design,_nzA6NSAtEeCaxPnRDErJGw" guid="-KHA_lRAghhDULbD70uefaA">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GOwttuH9w6WnkGsjgOjtsw" name="detail_the_design,_o1xXsCAtEeCaxPnRDErJGw" guid="-GOwttuH9w6WnkGsjgOjtsw">
    <refinedDescription>&lt;p>&#xD;
    Put the &quot;finish and polish&quot; on a class or set of classes by adding or refining relationships, attributes, cohesion, and&#xD;
    patterns. Any analysis classes or requirements that haven't been fully designed for the piece of functionality being&#xD;
    worked on are completed here.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This task is close to implementation. The developer or an automated tool should be able to create code from the&#xD;
    completed class design.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sg_vQcPETOkDCalO-B-PWQ" name="implement_developer_tests,_qgd-8CAtEeCaxPnRDErJGw" guid="-sg_vQcPETOkDCalO-B-PWQ">
    <keyConsiderations>&lt;ol>&#xD;
    &lt;li>&#xD;
        Automate tests via a unit regression testing tool (for example, xUnit) so that tests may be run by developers&#xD;
        whenever they make changes to the code.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test to the risk of the implementation element. For example, the more critical an element is, the more important it&#xD;
        is to test it thoroughly.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Pair with&amp;nbsp;team members with testing skills&amp;nbsp;in all steps of this task to gain insight on testing and&#xD;
        quality considerations.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    The&amp;nbsp;[Project Work] is implicitly used in implementation tasks to manage which requirements or change requests are&#xD;
    being realized in the code.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    Developer testing is different from other forms of testing in that it is based on the expected behavior of code units
    rather than being directly based on the system requirements.
&lt;/p>
&lt;p>
    It is best to do this at a small scale, much smaller than the complete code base to be authored by a developer over the
    course of an iteration. This can be done for one operation, one field added to a user interface, one stored procedure,
    etc. As the code base is incrementally built, new tests will be authored and existing tests might be revisited to test
    additional behavior.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KdvgCUfpK4Nut6fSHO9gug" name="developer_test,_qgd-9SAtEeCaxPnRDErJGw" guid="-KdvgCUfpK4Nut6fSHO9gug">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-r3Fd6Seh0k7sfPSDiw74kg" name="implement_solution,_rYfzICAtEeCaxPnRDErJGw" guid="-r3Fd6Seh0k7sfPSDiw74kg">
    <keyConsiderations>&lt;p>&#xD;
    It is best when developer tests already exist so there is an unambiguous definition of what behavior is considered&#xD;
    correct. The implementation should be immediately tested.&#xD;
&lt;/p>The [Project Work]&amp;nbsp; is implicitly used in implementation tasks to manage which requirements or change requests are&#xD;
being realized in the code.&lt;br /></keyConsiderations>
    <refinedDescription>&lt;p>
    Usually, this task is focused on a specific implementation&amp;nbsp;element, such as a class or component, but it does not
    need to be.
&lt;/p>
&lt;p>
    A portion of the design is implemented by performing this task. This task can be performed any number of times during
    an iteration. In fact it is best to do this task in as small a scope as possible to tighten the loop between it and
    related tasks involving developer testing and consideration of the design.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tpLMXjHYZCk74RNSU_NpWw" name="implementation,_rYfzISAtEeCaxPnRDErJGw" guid="-tpLMXjHYZCk74RNSU_NpWw">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2XiexcsvDw6SxstVZ9RXnw" name="run_developer_tests,_sYIEICAtEeCaxPnRDErJGw" guid="-2XiexcsvDw6SxstVZ9RXnw">
    <keyConsiderations>&lt;p>&#xD;
    It is common to require that code pass all developer tests before it can be delivered in an integrated source code&#xD;
    repository.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Pair with testing experts to gain insight on testing and quality considerations.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The&amp;nbsp;[Project Work]&amp;nbsp;is implicitly used in implementation tasks to manage which requirements or change requests&#xD;
    are being realized in the code.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DcrtSYXAXjz4rZTIaYr98w" name="test_log,_sYIEISAtEeCaxPnRDErJGw" guid="-DcrtSYXAXjz4rZTIaYr98w">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tex975DfNIuzRaJRKezQIg" name="resolve_change_request,_txFbICAtEeCaxPnRDErJGw" guid="-tex975DfNIuzRaJRKezQIg">
    <keyConsiderations>Verify that all required Change Sets are identified against the Change Request, and that they are in the appropriate state.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This task describes the steps to indicate that a change has been implemented and is ready for&#xD;
    verification. &#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Hints and tips&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Review the resolution of the change request to ensure it meets all stakeholder expectations.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pT2EZKgRuv3fAZK4QHiGJw" name="integrate_and_create_build,_wRuL4CAtEeCaxPnRDErJGw" guid="-pT2EZKgRuv3fAZK4QHiGJw">
    <keyConsiderations>&lt;p>
    In order to be effective at applying the practice of &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.continuous_integration.base/guidances/guidelines/continuous_integration_13C1A8CA.html&quot; guid=&quot;_i8bUEL6cEdqti4GwqTkbsQ&quot;>Continuous Integration&lt;/a>,&amp;nbsp;the time to integrate, build, and test the increment
    must be short enough that it can be performed several times per day.&amp;nbsp; Changes should be broken down into
    relatively small &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/change_set_430bf233.html&quot; guid=&quot;_1QU9MAIoEdyLh7vsrHZ4YA&quot;>Change Set&lt;/a>s that can be implemented, integrated and tested quickly.
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zqqp3CWYtQ4zDIgcv8JPtQ" name="build,_wRuL4yAtEeCaxPnRDErJGw" guid="-zqqp3CWYtQ4zDIgcv8JPtQ">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AeAuUCGOvvp8xLRQhQua2Q" name="run_tests,_z5SIcCAtEeCaxPnRDErJGw" guid="-AeAuUCGOvvp8xLRQhQua2Q">
    <keyConsiderations>&lt;ul>
    &lt;li>
        Run all tests as frequently as possible. Ideally, run all test scripts against each build deployed to the test
        environment. If this is impractical, run regression tests for existing functionality, and&amp;nbsp;focus the test cycle
        on work items completed in the new build.
    &lt;/li>
    &lt;li>
        Even test scripts that are expected to fail provide valuable feedback. However, once a test script is passing, it
        should not fail&amp;nbsp;against subsequent builds of the solution.
    &lt;/li>
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Dklm2g3Sn39ExSwTOnZYKg" name="verify_change_request,_1qY5sCAtEeCaxPnRDErJGw" guid="-Dklm2g3Sn39ExSwTOnZYKg">
    <refinedDescription>This tasks defines the steps required to verify that a change has been implemented as requested.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jEIv0qNtkbNPhZbkANF0Yg" name="architect,_XgaUZ1C_EeCOOdX2nygdtA" guid="-jEIv0qNtkbNPhZbkANF0Yg">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5-7EH6-fT72IZy3meUejVw" name="tester,_XgjeVFC_EeCOOdX2nygdtA" guid="-5-7EH6-fT72IZy3meUejVw">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AJT6wVCrVc4rRcVKgS8-IQ" name="stakeholder_request,_Xg3AUVC_EeCOOdX2nygdtA" guid="-AJT6wVCrVc4rRcVKgS8-IQ">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ffJZBh2xxoXAzZw6mJiA0A" name="requirements_attributes,_Xg3AVFC_EeCOOdX2nygdtA" guid="-ffJZBh2xxoXAzZw6mJiA0A">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vGFADmL_KhNkyDdbGA4n4A" name="requirements_traceability,_XhAKQVC_EeCOOdX2nygdtA" guid="-vGFADmL_KhNkyDdbGA4n4A">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lK_8b_yM2DAcZbcPaNP-ig" name="requirements_management_process_description,_XhAKRFC_EeCOOdX2nygdtA" guid="-lK_8b_yM2DAcZbcPaNP-ig">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yWHaGO1GvJz5b1JxpGwhJg" name="vision,_XhAKR1C_EeCOOdX2nygdtA" guid="-yWHaGO1GvJz5b1JxpGwhJg">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Q25THwgi1DTK2KAIECCIwg" name="glossary,_XhAKSlC_EeCOOdX2nygdtA" guid="-Q25THwgi1DTK2KAIECCIwg">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tHC5rIDMnf9gn47vCDbDbg" name="storyboard,_XhJ7QVC_EeCOOdX2nygdtA" guid="-tHC5rIDMnf9gn47vCDbDbg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ae7wr48xkR-82y3sY6Oe6A" name="user_role,_XhJ7RFC_EeCOOdX2nygdtA" guid="-ae7wr48xkR-82y3sY6Oe6A">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-L7tRyj6UOsLMdNK3xrYPpw" name="user_story,_XhJ7R1C_EeCOOdX2nygdtA" guid="-L7tRyj6UOsLMdNK3xrYPpw">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VoF1sEhBVrb_ho0vtDmL2w" name="architecture_notebook,_Xhc2MVC_EeCOOdX2nygdtA" guid="-VoF1sEhBVrb_ho0vtDmL2w">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nuwkcwce3VEsKoP4Y8BNHg" name="test_case,_XhmnMVC_EeCOOdX2nygdtA" guid="-nuwkcwce3VEsKoP4Y8BNHg">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RgNPv4_UCnv_AAfESTP4RQ" name="change_request_implementer,_XiDTIVC_EeCOOdX2nygdtA" guid="-RgNPv4_UCnv_AAfESTP4RQ">
    <keyConsiderations>&lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: Batang; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: KO; mso-bidi-language: AR-SA&quot;>On&#xD;
large projects, this role is typically assigned to those with a business analyst or a developer skill set.&lt;/span></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This role represents the individual on the development team who is responsible for implementing a change request. This&#xD;
    is not really a new role, as anyone playing this role will also be playing another role on the development team.&#xD;
    Because the skills required will depend upon which particular artifacts are affected, it is convenient to capture this&#xD;
    responsibility in a generic role.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    What are the responsibilities of the Change Control Implementer?&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The change control implementer is responsible for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Obtain approvals from the project sponsor before the change request is scheduled.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Review the testing results from the change development.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Develop and prepare the change for production.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-j8fj1TmYMQbae8sbSbi9KA" name="change_request_verifier,_XiMdEVC_EeCOOdX2nygdtA" guid="-j8fj1TmYMQbae8sbSbi9KA">
    <refinedDescription>&lt;p>&#xD;
    This role represents the individual on the development team who is responsible for verifying that a resolved&#xD;
    change request does in fact satisfy the intent of the request. This is not a new role, as anyone playing this&#xD;
    role will also be playing another role while performing this task. For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        For a change request that implements a new feature or scenario, the Request Verifier would also be a&#xD;
        Tester that tests the system to verify the implementation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        For a change request that adds a new requirement, the Request Verifier would also be an Analyst that&#xD;
        performs a peer review.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Because the skills required for this role depend on which artifacts are affected, it is convenient to capture&#xD;
    this responsibility in a generic role.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    What are the responsibilities of the Change Request Verifier?&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    1. Develop test procedures.&lt;br />&#xD;
    2. Schedule and run tests.&lt;br />&#xD;
    3. Document the test results.&lt;br />&#xD;
    4. Use the test results as part of the change documentation.&lt;br />&#xD;
    5. Notify all stakeholders who are impacted by the change.&lt;br />&#xD;
&lt;/p>&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jpUFpNKM7tFC2D2JTsH7xA" name="risk_list,_zGeTwyNUEeCOWdM_goLzAA" guid="-jpUFpNKM7tFC2D2JTsH7xA">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1sy71baYuROSwkL9i3oQjQ" name="vision,_0QZJMSNUEeCOWdM_goLzAA" guid="-1sy71baYuROSwkL9i3oQjQ">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Z6YfNWSMa5LtpJ34K_DXBg" name="project_manager,_XjF08VC_EeCOOdX2nygdtA" guid="-Z6YfNWSMa5LtpJ34K_DXBg">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-q9TthmJ7WcRpTvkgBr55UA" name="architect,_XjF091C_EeCOOdX2nygdtA" guid="-q9TthmJ7WcRpTvkgBr55UA">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-E9n0H75PKs6FNBxmi3ufig" name="tester,_XjPl91C_EeCOOdX2nygdtA" guid="-E9n0H75PKs6FNBxmi3ufig">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hg_ovt-qNIAXQ5hxYpamSg" name="architecture_notebook,_XjYv4VC_EeCOOdX2nygdtA" guid="-hg_ovt-qNIAXQ5hxYpamSg">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HCDibDTEmQhUde5DiK0Itw" name="build,_XjYv5FC_EeCOOdX2nygdtA" guid="-HCDibDTEmQhUde5DiK0Itw">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2GWWBoVrG0nMs1nG7b5_OA" name="design,_Xjig4VC_EeCOOdX2nygdtA" guid="-2GWWBoVrG0nMs1nG7b5_OA">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QUE8s14aNAuZNzlaGVBQcg" name="developer_test,_Xjig5FC_EeCOOdX2nygdtA" guid="-QUE8s14aNAuZNzlaGVBQcg">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-a2ZkRr4kUEHgr54qKGxChg" name="implementation,_Xjig51C_EeCOOdX2nygdtA" guid="-a2ZkRr4kUEHgr54qKGxChg">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-F8DZfy3Ya3DCvLaziRbRaA" name="test_case,_Xjrq0VC_EeCOOdX2nygdtA" guid="-F8DZfy3Ya3DCvLaziRbRaA">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kySzQOHyzQc-w_rsZjWbzg" name="test_log,_Xjrq1FC_EeCOOdX2nygdtA" guid="-kySzQOHyzQc-w_rsZjWbzg">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zlxGhk58x3YW45kBQ4wEtg" name="project_plan,_Xj_M0VC_EeCOOdX2nygdtA" guid="-zlxGhk58x3YW45kBQ4wEtg">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nVQfWKIhxLC9oKqtKyFJSg" name="requirements_attributes,_XkIWwVC_EeCOOdX2nygdtA" guid="-nVQfWKIhxLC9oKqtKyFJSg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1DRncof9xBa5_nt6inWV3g" name="requirements_traceability,_XkIWxFC_EeCOOdX2nygdtA" guid="-1DRncof9xBa5_nt6inWV3g">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FqnTW5LwGq-ECWRtuitMaA" name="requirements_management_process_description,_XkIWx1C_EeCOOdX2nygdtA" guid="-FqnTW5LwGq-ECWRtuitMaA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GCPBq5IRgFNX-j1xczyPnQ" name="glossary,_XkSHwVC_EeCOOdX2nygdtA" guid="-GCPBq5IRgFNX-j1xczyPnQ">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6L8mIgfKlHTpBnP9Rh7R7A" name="storyboard,_XkSHxFC_EeCOOdX2nygdtA" guid="-6L8mIgfKlHTpBnP9Rh7R7A">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-T8khVj_xWiqFDrBukSuZQg" name="user_role,_XkSHx1C_EeCOOdX2nygdtA" guid="-T8khVj_xWiqFDrBukSuZQg">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QGns_YJx2q7BQlYs9bCG_w" name="user_story,_Xkb4wVC_EeCOOdX2nygdtA" guid="-QGns_YJx2q7BQlYs9bCG_w">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7SpO04R6tanUCjkbvdflXw" name="stakeholder_request,_XklCsVC_EeCOOdX2nygdtA" guid="-7SpO04R6tanUCjkbvdflXw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nbEgaGdoDjroQK8_gBzNbA" name="any_role,_XkuzsVC_EeCOOdX2nygdtA" guid="-nbEgaGdoDjroQK8_gBzNbA">
    <refinedDescription>&lt;p> This role allows anyone on a team to perform general tasks: &lt;/p>
&lt;ul>
  &lt;li> Access artifacts in the configuration control system for development and 
    maintenance &lt;/li>
  &lt;li> Submit change requests for the project &lt;/li>
  &lt;li> Participate in assessments and reviews &lt;/li>
  &lt;li> Volunteer to work on a particular iteration &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3qNeOrGUr5A8bdbpPxRnjQ" name="iteration_plan_project,_oiFawVDBEeCOOdX2nygdtA" guid="-3qNeOrGUr5A8bdbpPxRnjQ">
    <keyConsiderations>[*** This text is specific to Iteration Plan for the Project level ***]</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RugzY02YXYlUK2fC32O2JA" name="iteration_plan_project,_sc31UVDBEeCOOdX2nygdtA" guid="-RugzY02YXYlUK2fC32O2JA">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces - at each iteration - an iteration plan that drives&#xD;
    the sub teams' iteration plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and&#xD;
    they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SO41LL_BilwVKbufeGisLw" name="iteration_plan_project,_ypZB8VDBEeCOOdX2nygdtA" guid="-SO41LL_BilwVKbufeGisLw">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VTYiZEN7pmBKC4CO2gQgOA" name="process_engineer,_9zmTsVGJEeCTkLy-ZjLOXQ" guid="-VTYiZEN7pmBKC4CO2gQgOA">
    <refinedDescription>&lt;p>&#xD;
    This&amp;nbsp;role plays&amp;nbsp;an important part of any management team of a software project. The role is responsible for&#xD;
    all process related aspects of the project, such as :&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Tailoring the process to match the specific needs of the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Educating and mentoring project members on process related issues.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that valuable project experience is harvested and fed back into the process.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YYDFbvfdC7FY6R3__VZglw" name="process_engineer,_9z5OoVGJEeCTkLy-ZjLOXQ" guid="-YYDFbvfdC7FY6R3__VZglw">
    <refinedDescription>&lt;p>&#xD;
    This&amp;nbsp;role plays&amp;nbsp;an important part of any management team of a software project. The role is responsible for&#xD;
    all process related aspects of the project, such as :&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Tailoring the process to match the specific needs of the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Educating and mentoring project members on process related issues.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that valuable project experience is harvested and fed back into the process.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AH3hkeEQ-qvUiSpmJ-iC5A" name="architect,_98PSVFGJEeCTkLy-ZjLOXQ" guid="-AH3hkeEQ-qvUiSpmJ-iC5A">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Jgou2xU13kc7f4Riw949Ng" name="project_manager,_98PSV1GJEeCTkLy-ZjLOXQ" guid="-Jgou2xU13kc7f4Riw949Ng">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ejC0GIrR98ar-OwWt9IsRg" name="storyboard,_98ZDUVGJEeCTkLy-ZjLOXQ" guid="-ejC0GIrR98ar-OwWt9IsRg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CZNQc-DZexOMmO4LULpgGw" name="iteration_plan,_98ZDVFGJEeCTkLy-ZjLOXQ" guid="-CZNQc-DZexOMmO4LULpgGw">
    <keyConsiderations>&lt;p>

    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work

    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the

    remaining high priority work items, plus a few mid-priority ones from the Work Items List). When work items are assigned

    to an iteration, no matter what their previous priorities, the team has to make sure that they are able to develop

    what has been assigned to the iteration. Deciding what to develop first (or

    even to develop things in parallel) on an iteration will vary from project to project, from iteration to iteration.

&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fzkqeOpYPWKHJqZAkznSUw" name="risk_list,_98ZDV1GJEeCTkLy-ZjLOXQ" guid="-fzkqeOpYPWKHJqZAkznSUw">
    <keyConsiderations>&lt;p>
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully consider
    whether they are really serious risks. Tracking more than 20 risks is an onerous task.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot; guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project
    activities, and is the basis around which iterations are organized.
&lt;/p>
&lt;p>
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot; guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nYSGL_NatTCb3xeEKxQGMg" name="work_items_list,_98iNQVGJEeCTkLy-ZjLOXQ" guid="-nYSGL_NatTCb3xeEKxQGMg">
    <keyConsiderations>&lt;p>
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact provides a focal point for the entire team:
&lt;/p>
&lt;ul>
    &lt;li>
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note
        that some of these requests may never be implemented, or be implemented in later projects.
    &lt;/li>
    &lt;li>
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list
        is prioritized separately.
    &lt;/li>
    &lt;li>
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be
        delivered, get references to material required to carry out the work, and report progress made.
    &lt;/li>
&lt;/ul>
&lt;p>
    These are the typical work items that go on this list:
&lt;/p>
&lt;ul>
    &lt;li>
        Use cases (and references to use-case specifications)
    &lt;/li>
    &lt;li>
        System-wide requirements
    &lt;/li>
    &lt;li>
        Changes and enhancement requests
    &lt;/li>
    &lt;li>
        Defects
    &lt;/li>
    &lt;li>
        Development tasks
    &lt;/li>
&lt;/ul>
&lt;p>
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child
    relationships, where the lowest level is a specification and tracking device for micro-increments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xGo_ASryUN8-SR0qf589tw" name="project_plan,_98iNRFGJEeCTkLy-ZjLOXQ" guid="-xGo_ASryUN8-SR0qf589tw">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Y68xnZzYrDABPmecBeiMgg" name="stakeholder_request,_98r-QVGJEeCTkLy-ZjLOXQ" guid="-Y68xnZzYrDABPmecBeiMgg">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KldECigegekLMXLRwokxkw" name="requirements_attributes,_98-5MVGJEeCTkLy-ZjLOXQ" guid="-KldECigegekLMXLRwokxkw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qX5jwvd4OGP4ZpQSQC_hjw" name="requirements_traceability,_98-5NFGJEeCTkLy-ZjLOXQ" guid="-qX5jwvd4OGP4ZpQSQC_hjw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4iRBefY670jIkGDliJDDbA" name="requirements_management_process_description,_98-5N1GJEeCTkLy-ZjLOXQ" guid="-4iRBefY670jIkGDliJDDbA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wjMjS3yG5V4rTW6HEdzUKA" name="user_role,_99R0IVGJEeCTkLy-ZjLOXQ" guid="-wjMjS3yG5V4rTW6HEdzUKA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LO1fLD5w7GT_mkUlf9HmBA" name="user_story,_99R0JFGJEeCTkLy-ZjLOXQ" guid="-LO1fLD5w7GT_mkUlf9HmBA">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Go2MUu98-OlNgdA-paryPw" name="build,_99ugEVGJEeCTkLy-ZjLOXQ" guid="-Go2MUu98-OlNgdA-paryPw">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2cREIje4kctXGRkPbGl74w" name="design,_99ugFFGJEeCTkLy-ZjLOXQ" guid="-2cREIje4kctXGRkPbGl74w">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AqobOAFca66SHGPmR1aWzA" name="developer_test,_99ugF1GJEeCTkLy-ZjLOXQ" guid="-AqobOAFca66SHGPmR1aWzA">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GpBykXIbhkiK5991eJLG1w" name="implementation,_99ugGlGJEeCTkLy-ZjLOXQ" guid="-GpBykXIbhkiK5991eJLG1w">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xoTQ7n5q2Abg4LJtTQdjwQ" name="architect,_9-n39FGJEeCTkLy-ZjLOXQ" guid="-xoTQ7n5q2Abg4LJtTQdjwQ">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Bcqs3AYB_nRqXF7jarOA_g" name="tester,_9-xo9FGJEeCTkLy-ZjLOXQ" guid="-Bcqs3AYB_nRqXF7jarOA_g">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jAH0bcefobKc4S42Gm__Pg" name="test_case,_9-xo91GJEeCTkLy-ZjLOXQ" guid="-jAH0bcefobKc4S42Gm__Pg">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AGrOvJAW0cg-ra9M4xvIrQ" name="test_log,_9-xo-lGJEeCTkLy-ZjLOXQ" guid="-AGrOvJAW0cg-ra9M4xvIrQ">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WnYZ5RPLbStaR6ocCsO95A" name="architecture_notebook,_9_Ej4VGJEeCTkLy-ZjLOXQ" guid="-WnYZ5RPLbStaR6ocCsO95A">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sr_2Yg99JPv6_KiWVujh8g" name="vision,_9_Ej5FGJEeCTkLy-ZjLOXQ" guid="-sr_2Yg99JPv6_KiWVujh8g">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--voLMGFGz-8CDnQbKbyngg" name="storyboard,_9_Nt0VGJEeCTkLy-ZjLOXQ" guid="--voLMGFGz-8CDnQbKbyngg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1RRcqJ5uerxH9c2lUlpkhw" name="build,_9_Xe0VGJEeCTkLy-ZjLOXQ" guid="-1RRcqJ5uerxH9c2lUlpkhw">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0HGo8Kgl8xUgG5ew7bA2ag" name="design,_9_Xe1FGJEeCTkLy-ZjLOXQ" guid="-0HGo8Kgl8xUgG5ew7bA2ag">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZZVk__RD0wgAI2LVrotssw" name="developer_test,_9_Xe11GJEeCTkLy-ZjLOXQ" guid="-ZZVk__RD0wgAI2LVrotssw">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QHcnYhZI19TRG4JR0jYFOw" name="implementation,_9_hP0VGJEeCTkLy-ZjLOXQ" guid="-QHcnYhZI19TRG4JR0jYFOw">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-psbnK-H5xy2fpNfdMQoq0w" name="stakeholder_request,_9_qZwVGJEeCTkLy-ZjLOXQ" guid="-psbnK-H5xy2fpNfdMQoq0w">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DirmTxbZzOKDi44qUH7PZw" name="project_manager,_90C_oVGJEeCTkLy-ZjLOXQ" guid="-DirmTxbZzOKDi44qUH7PZw">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Wj_LiJJ48oTlQXPOoQGgvA" name="architect,_90C_p1GJEeCTkLy-ZjLOXQ" guid="-Wj_LiJJ48oTlQXPOoQGgvA">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oNC1zXkjUW6y_WA7ZSPSgQ" name="tester,_90MJl1GJEeCTkLy-ZjLOXQ" guid="-oNC1zXkjUW6y_WA7ZSPSgQ">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WRXvWuSIEPJhS9OpkOfrlA" name="iteration_plan,_90V6lFGJEeCTkLy-ZjLOXQ" guid="-WRXvWuSIEPJhS9OpkOfrlA">
    <keyConsiderations>&lt;p>

    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work

    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the

    remaining high priority work items, plus a few mid-priority ones from the Work Items List). When work items are assigned

    to an iteration, no matter what their previous priorities, the team has to make sure that they are able to develop

    what has been assigned to the iteration. Deciding what to develop first (or

    even to develop things in parallel) on an iteration will vary from project to project, from iteration to iteration.

&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-j9CjMCVd4cZsK9Qx09BhKw" name="stakeholder_request,_90fEgVGJEeCTkLy-ZjLOXQ" guid="-j9CjMCVd4cZsK9Qx09BhKw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hN7N4sDx6Qiq7T0GpRUF3w" name="build,_90o1gVGJEeCTkLy-ZjLOXQ" guid="-hN7N4sDx6Qiq7T0GpRUF3w">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JOSMnuls6miPUz3zIj1n1w" name="design,_90o1hFGJEeCTkLy-ZjLOXQ" guid="-JOSMnuls6miPUz3zIj1n1w">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ksHG6Gp5bJlAXoO35mFj8g" name="developer_test,_90o1h1GJEeCTkLy-ZjLOXQ" guid="-ksHG6Gp5bJlAXoO35mFj8g">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8qnuKXUYj0dkNnbIonq18A" name="implementation,_90ymgVGJEeCTkLy-ZjLOXQ" guid="-8qnuKXUYj0dkNnbIonq18A">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4OBGfiqjqmC5FfYnmiZc5g" name="test_case,_907wcVGJEeCTkLy-ZjLOXQ" guid="-4OBGfiqjqmC5FfYnmiZc5g">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dZszq4P582oQgbav4C5-ug" name="test_log,_907wdFGJEeCTkLy-ZjLOXQ" guid="-dZszq4P582oQgbav4C5-ug">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MKzgn5Otm-PJPtLiSSf4CQ" name="requirements_attributes,_91PScVGJEeCTkLy-ZjLOXQ" guid="-MKzgn5Otm-PJPtLiSSf4CQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k2x-ujdQg8blfjTGqVsEvw" name="requirements_traceability,_91PSdFGJEeCTkLy-ZjLOXQ" guid="-k2x-ujdQg8blfjTGqVsEvw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OSYCQbN2tk58Xn6ZNavTDw" name="requirements_management_process_description,_91PSd1GJEeCTkLy-ZjLOXQ" guid="-OSYCQbN2tk58Xn6ZNavTDw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-x9_Yn-spbw9f1IY50pWskA" name="vision,_91PSelGJEeCTkLy-ZjLOXQ" guid="-x9_Yn-spbw9f1IY50pWskA">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xAcvgIKSiKfopLVKhMfwLg" name="glossary,_91iNYVGJEeCTkLy-ZjLOXQ" guid="-xAcvgIKSiKfopLVKhMfwLg">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sglf55hGhsi_mmu8B-xayw" name="storyboard,_91iNZFGJEeCTkLy-ZjLOXQ" guid="-sglf55hGhsi_mmu8B-xayw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fRx0IMXxsgs89ldinr55dw" name="user_role,_91iNZ1GJEeCTkLy-ZjLOXQ" guid="-fRx0IMXxsgs89ldinr55dw">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5JTydg1teAlvu1topvHFBQ" name="user_story,_91iNalGJEeCTkLy-ZjLOXQ" guid="-5JTydg1teAlvu1topvHFBQ">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aiecJaCEpT95P765Zc953g" name="project_plan,_911IUVGJEeCTkLy-ZjLOXQ" guid="-aiecJaCEpT95P765Zc953g">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LOlPg6udPDV8mYe-hCoscQ" name="architecture_notebook,_92IDQVGJEeCTkLy-ZjLOXQ" guid="-LOlPg6udPDV8mYe-hCoscQ">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vrdAqI6qTDdlrhoiPfYNzA" name="project_manager,_-AaAoVGJEeCTkLy-ZjLOXQ" guid="-vrdAqI6qTDdlrhoiPfYNzA">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--GjosXCfuH2CKs5v0PZx4g" name="architect,_-AaAp1GJEeCTkLy-ZjLOXQ" guid="--GjosXCfuH2CKs5v0PZx4g">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CGNyJmLx3KkBgkA6QAkpnA" name="tester,_-Ajxp1GJEeCTkLy-ZjLOXQ" guid="-CGNyJmLx3KkBgkA6QAkpnA">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ks6jtxl9dQmxfNTUuA4VIA" name="test_case,_-AjxqlGJEeCTkLy-ZjLOXQ" guid="-Ks6jtxl9dQmxfNTUuA4VIA">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-alQDeBixNDTIMENr1dxo3g" name="test_log,_-AjxrVGJEeCTkLy-ZjLOXQ" guid="-alQDeBixNDTIMENr1dxo3g">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EjCNdXeQ6PitGQB9YDHhLQ" name="iteration_plan,_-A2skVGJEeCTkLy-ZjLOXQ" guid="-EjCNdXeQ6PitGQB9YDHhLQ">
    <keyConsiderations>&lt;p>

    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work

    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the

    remaining high priority work items, plus a few mid-priority ones from the Work Items List). When work items are assigned

    to an iteration, no matter what their previous priorities, the team has to make sure that they are able to develop

    what has been assigned to the iteration. Deciding what to develop first (or

    even to develop things in parallel) on an iteration will vary from project to project, from iteration to iteration.

&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Kc6MHtej33ZphtU7uDc1Gg" name="work_items_list,_-A2slFGJEeCTkLy-ZjLOXQ" guid="-Kc6MHtej33ZphtU7uDc1Gg">
    <keyConsiderations>&lt;p>
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact provides a focal point for the entire team:
&lt;/p>
&lt;ul>
    &lt;li>
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note
        that some of these requests may never be implemented, or be implemented in later projects.
    &lt;/li>
    &lt;li>
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list
        is prioritized separately.
    &lt;/li>
    &lt;li>
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be
        delivered, get references to material required to carry out the work, and report progress made.
    &lt;/li>
&lt;/ul>
&lt;p>
    These are the typical work items that go on this list:
&lt;/p>
&lt;ul>
    &lt;li>
        Use cases (and references to use-case specifications)
    &lt;/li>
    &lt;li>
        System-wide requirements
    &lt;/li>
    &lt;li>
        Changes and enhancement requests
    &lt;/li>
    &lt;li>
        Defects
    &lt;/li>
    &lt;li>
        Development tasks
    &lt;/li>
&lt;/ul>
&lt;p>
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child
    relationships, where the lowest level is a specification and tracking device for micro-increments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GrNfEZeJeYvmxOXas3brbw" name="architecture_notebook,_-BAdkVGJEeCTkLy-ZjLOXQ" guid="-GrNfEZeJeYvmxOXas3brbw">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pA2-vbw6HiBRP7_TePGdfA" name="build,_-BKOkVGJEeCTkLy-ZjLOXQ" guid="-pA2-vbw6HiBRP7_TePGdfA">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YwkzhR9bwQPYiHygN2PQyg" name="design,_-BKOlFGJEeCTkLy-ZjLOXQ" guid="-YwkzhR9bwQPYiHygN2PQyg">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2jX97VHra20aVxJ4hr2Myg" name="developer_test,_-BKOl1GJEeCTkLy-ZjLOXQ" guid="-2jX97VHra20aVxJ4hr2Myg">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ymKpSgJBzwtGKU5JCXHstg" name="implementation,_-BTYgVGJEeCTkLy-ZjLOXQ" guid="-ymKpSgJBzwtGKU5JCXHstg">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-f0971TD-lBI6Sh6kWN80ZA" name="requirements_attributes,_-BwEcVGJEeCTkLy-ZjLOXQ" guid="-f0971TD-lBI6Sh6kWN80ZA">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-M8z5E7ZrHQdPRV1QwMr_7w" name="requirements_traceability,_-BwEdFGJEeCTkLy-ZjLOXQ" guid="-M8z5E7ZrHQdPRV1QwMr_7w">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nQc0L38gYIPDVsDGA3G-TA" name="requirements_management_process_description,_-B51cVGJEeCTkLy-ZjLOXQ" guid="-nQc0L38gYIPDVsDGA3G-TA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZHtu3PxyZDgyaQaZm8a0iw" name="glossary,_-B51dFGJEeCTkLy-ZjLOXQ" guid="-ZHtu3PxyZDgyaQaZm8a0iw">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0n4EYyw9bUdqvbiexJ6WzQ" name="storyboard,_-B51d1GJEeCTkLy-ZjLOXQ" guid="-0n4EYyw9bUdqvbiexJ6WzQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5hZslU9GVGbvELWG417i8g" name="user_role,_-B51elGJEeCTkLy-ZjLOXQ" guid="-5hZslU9GVGbvELWG417i8g">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EC_IjXbyV29kr_JpuybVpg" name="user_story,_-CC_YVGJEeCTkLy-ZjLOXQ" guid="-EC_IjXbyV29kr_JpuybVpg">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ocifjp7C3EY-zNW5FQNstA" name="stakeholder_request,_-CMwYVGJEeCTkLy-ZjLOXQ" guid="-ocifjp7C3EY-zNW5FQNstA">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HasA8JO4TgolcH945R0s4A" name="project_manager,_-DZDMVGJEeCTkLy-ZjLOXQ" guid="-HasA8JO4TgolcH945R0s4A">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SGSGNWxl0wB5-aVXIeFV5A" name="architect,_-Di0NFGJEeCTkLy-ZjLOXQ" guid="-SGSGNWxl0wB5-aVXIeFV5A">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EJFNT67nvLrc60lRlB4iRQ" name="tester,_-Di0PVGJEeCTkLy-ZjLOXQ" guid="-EJFNT67nvLrc60lRlB4iRQ">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tJJcdyOOwErs-xrbt3zWIA" name="architecture_notebook,_-D1vIVGJEeCTkLy-ZjLOXQ" guid="-tJJcdyOOwErs-xrbt3zWIA">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dTNmrmjMD3MrdryHmQXG1g" name="test_case,_-D-5EVGJEeCTkLy-ZjLOXQ" guid="-dTNmrmjMD3MrdryHmQXG1g">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7DoLs3BOZO7Cb9fecB5pew" name="test_log,_-D-5FFGJEeCTkLy-ZjLOXQ" guid="-7DoLs3BOZO7Cb9fecB5pew">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DojPR2F27HJowVi5MrrMhQ" name="iteration_plan,_-EIqEVGJEeCTkLy-ZjLOXQ" guid="-DojPR2F27HJowVi5MrrMhQ">
    <keyConsiderations>&lt;p>

    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work

    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the

    remaining high priority work items, plus a few mid-priority ones from the Work Items List). When work items are assigned

    to an iteration, no matter what their previous priorities, the team has to make sure that they are able to develop

    what has been assigned to the iteration. Deciding what to develop first (or

    even to develop things in parallel) on an iteration will vary from project to project, from iteration to iteration.

&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-q2eUF9s8mEliGv-ZquGJDg" name="risk_list,_-EIqFFGJEeCTkLy-ZjLOXQ" guid="-q2eUF9s8mEliGv-ZquGJDg">
    <keyConsiderations>&lt;p>
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully consider
    whether they are really serious risks. Tracking more than 20 risks is an onerous task.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot; guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project
    activities, and is the basis around which iterations are organized.
&lt;/p>
&lt;p>
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot; guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EXtkR_fSQMd5SPfkA1dvpA" name="project_plan,_-EIqF1GJEeCTkLy-ZjLOXQ" guid="-EXtkR_fSQMd5SPfkA1dvpA">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-W67O9BiX4Pdlq_YcEk0i_Q" name="stakeholder_request,_-ESbEVGJEeCTkLy-ZjLOXQ" guid="-W67O9BiX4Pdlq_YcEk0i_Q">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CCdKM0TnS8KD6QMo4k3f7w" name="requirements_management_process_description,_-EblAVGJEeCTkLy-ZjLOXQ" guid="-CCdKM0TnS8KD6QMo4k3f7w">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nEZSIrnHBKaRWw-kvUcEzQ" name="vision,_-EblBFGJEeCTkLy-ZjLOXQ" guid="-nEZSIrnHBKaRWw-kvUcEzQ">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Jx2zCEIOH9chwpAY2IfMGA" name="glossary,_-EblB1GJEeCTkLy-ZjLOXQ" guid="-Jx2zCEIOH9chwpAY2IfMGA">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9lsoTAGgzaIWTcYPmOJhJQ" name="storyboard,_-ElWAVGJEeCTkLy-ZjLOXQ" guid="-9lsoTAGgzaIWTcYPmOJhJQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GuJwvxOanomGs10VZOzQsQ" name="user_role,_-ElWBFGJEeCTkLy-ZjLOXQ" guid="-GuJwvxOanomGs10VZOzQsQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ac3RXIhGYzXEJrlzX4Y60w" name="user_story,_-ElWB1GJEeCTkLy-ZjLOXQ" guid="-ac3RXIhGYzXEJrlzX4Y60w">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-St09OR8LAciad-HoGW7eUw" name="build,_-E4Q8VGJEeCTkLy-ZjLOXQ" guid="-St09OR8LAciad-HoGW7eUw">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Vl6nfwyfnecG-zxwpbZp9w" name="design,_-E4Q9FGJEeCTkLy-ZjLOXQ" guid="-Vl6nfwyfnecG-zxwpbZp9w">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-377UHXCPhTJs0gIKhklgmg" name="developer_test,_-E4Q91GJEeCTkLy-ZjLOXQ" guid="-377UHXCPhTJs0gIKhklgmg">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-e_n2FgyD5TxqdylKsTk_gA" name="implementation,_-E4Q-lGJEeCTkLy-ZjLOXQ" guid="-e_n2FgyD5TxqdylKsTk_gA">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-D2hHZhct29y0F-6HkqdIBA" name="project_manager,_-LcL8VGJEeCTkLy-ZjLOXQ" guid="-D2hHZhct29y0F-6HkqdIBA">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yKoVIbLGmH0CV-4yzEjRSA" name="iteration_plan,_-LcL9FGJEeCTkLy-ZjLOXQ" guid="-yKoVIbLGmH0CV-4yzEjRSA">
    <keyConsiderations>&lt;p>

    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work

    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the

    remaining high priority work items, plus a few mid-priority ones from the Work Items List). When work items are assigned

    to an iteration, no matter what their previous priorities, the team has to make sure that they are able to develop

    what has been assigned to the iteration. Deciding what to develop first (or

    even to develop things in parallel) on an iteration will vary from project to project, from iteration to iteration.

&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-W-hBEskOdRI4emvLdLG1SQ" name="work_items_list,_-LcL91GJEeCTkLy-ZjLOXQ" guid="-W-hBEskOdRI4emvLdLG1SQ">
    <keyConsiderations>&lt;p>
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact provides a focal point for the entire team:
&lt;/p>
&lt;ul>
    &lt;li>
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note
        that some of these requests may never be implemented, or be implemented in later projects.
    &lt;/li>
    &lt;li>
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list
        is prioritized separately.
    &lt;/li>
    &lt;li>
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be
        delivered, get references to material required to carry out the work, and report progress made.
    &lt;/li>
&lt;/ul>
&lt;p>
    These are the typical work items that go on this list:
&lt;/p>
&lt;ul>
    &lt;li>
        Use cases (and references to use-case specifications)
    &lt;/li>
    &lt;li>
        System-wide requirements
    &lt;/li>
    &lt;li>
        Changes and enhancement requests
    &lt;/li>
    &lt;li>
        Defects
    &lt;/li>
    &lt;li>
        Development tasks
    &lt;/li>
&lt;/ul>
&lt;p>
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child
    relationships, where the lowest level is a specification and tracking device for micro-increments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iz4apg1N7CXd-r7TasK5Vg" name="architect,_-LlV5FGJEeCTkLy-ZjLOXQ" guid="-iz4apg1N7CXd-r7TasK5Vg">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BJJ6Yvll_OQS7LkJ8KEhkg" name="tester,_-LlV7VGJEeCTkLy-ZjLOXQ" guid="-BJJ6Yvll_OQS7LkJ8KEhkg">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-c9YGWNe92dloMVbhUyiXSA" name="architecture_notebook,_-LvG4VGJEeCTkLy-ZjLOXQ" guid="-c9YGWNe92dloMVbhUyiXSA">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mJr8s-YcANtzBmbEJYBjzA" name="build,_-L434VGJEeCTkLy-ZjLOXQ" guid="-mJr8s-YcANtzBmbEJYBjzA">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Fi940zrDJP7DSr1p1kGZxg" name="design,_-L435FGJEeCTkLy-ZjLOXQ" guid="-Fi940zrDJP7DSr1p1kGZxg">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-duY6usZtMcPjBju7PeDFMQ" name="developer_test,_-L4351GJEeCTkLy-ZjLOXQ" guid="-duY6usZtMcPjBju7PeDFMQ">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3M8BoYYhbTwwzsJmZ8YPnw" name="implementation,_-L436lGJEeCTkLy-ZjLOXQ" guid="-3M8BoYYhbTwwzsJmZ8YPnw">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-b6urRj6MpQIpyyBIK8ujKw" name="stakeholder_request,_-MLy0VGJEeCTkLy-ZjLOXQ" guid="-b6urRj6MpQIpyyBIK8ujKw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9-m26LL_jnZNv3IJPnvA0Q" name="project_plan,_-MetwVGJEeCTkLy-ZjLOXQ" guid="-9-m26LL_jnZNv3IJPnvA0Q">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aINOehHrJnUZpO08yEH8_Q" name="test_case,_-MetxFGJEeCTkLy-ZjLOXQ" guid="-aINOehHrJnUZpO08yEH8_Q">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ikFI06feXdhAzk6Sy56juQ" name="test_log,_-Metx1GJEeCTkLy-ZjLOXQ" guid="-ikFI06feXdhAzk6Sy56juQ">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WEXDuG4LczySVTuDu2wU3g" name="requirements_attributes,_-MoewVGJEeCTkLy-ZjLOXQ" guid="-WEXDuG4LczySVTuDu2wU3g">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0UwFO6Dh0vaa_I8qEt5r5A" name="requirements_traceability,_-MxosVGJEeCTkLy-ZjLOXQ" guid="-0UwFO6Dh0vaa_I8qEt5r5A">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3S2bgmBKDr4Rjg-ssPHqPw" name="requirements_management_process_description,_-MxotFGJEeCTkLy-ZjLOXQ" guid="-3S2bgmBKDr4Rjg-ssPHqPw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Rg10Nq_D1Qk0FoWwlJ7LBA" name="glossary,_-Mxot1GJEeCTkLy-ZjLOXQ" guid="-Rg10Nq_D1Qk0FoWwlJ7LBA">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-s6VkziIxUF6LQxJBNsmd3w" name="storyboard,_-M7ZsVGJEeCTkLy-ZjLOXQ" guid="-s6VkziIxUF6LQxJBNsmd3w">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--K4qz_OUEWAL5rPN3yVs5Q" name="user_role,_-M7ZtFGJEeCTkLy-ZjLOXQ" guid="--K4qz_OUEWAL5rPN3yVs5Q">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KvID8EbPstexF-2jiJzqig" name="user_story,_-M7Zt1GJEeCTkLy-ZjLOXQ" guid="-KvID8EbPstexF-2jiJzqig">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1UFLLDy0LW3ADI4SxrpkCg" name="any_role,_-NOUoVGJEeCTkLy-ZjLOXQ" guid="-1UFLLDy0LW3ADI4SxrpkCg">
    <refinedDescription>&lt;p> This role allows anyone on a team to perform general tasks: &lt;/p>
&lt;ul>
  &lt;li> Access artifacts in the configuration control system for development and 
    maintenance &lt;/li>
  &lt;li> Submit change requests for the project &lt;/li>
  &lt;li> Participate in assessments and reviews &lt;/li>
  &lt;li> Volunteer to work on a particular iteration &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aChZzwOd4NyaTKvPXW010g" name="architect,_-TetpFGJEeCTkLy-ZjLOXQ" guid="-aChZzwOd4NyaTKvPXW010g">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IAbi6kwIRSaDRFZQ3iHipA" name="tester,_-ToepFGJEeCTkLy-ZjLOXQ" guid="-IAbi6kwIRSaDRFZQ3iHipA">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EH6rzvKe_zWFe9RIWqfLpA" name="architecture_notebook,_-Toep1GJEeCTkLy-ZjLOXQ" guid="-EH6rzvKe_zWFe9RIWqfLpA">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-E3JKpWYtYzL3R-1qhxnYzw" name="test_case,_-TyPoVGJEeCTkLy-ZjLOXQ" guid="-E3JKpWYtYzL3R-1qhxnYzw">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-C7b7F5nGRuhfK1vhx2YVcA" name="test_log,_-TyPpFGJEeCTkLy-ZjLOXQ" guid="-C7b7F5nGRuhfK1vhx2YVcA">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-W91QSpLdfpWn3y-EXL7QhQ" name="stakeholder_request,_-T7ZkVGJEeCTkLy-ZjLOXQ" guid="-W91QSpLdfpWn3y-EXL7QhQ">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Y00TazoyvguICh6q_4YmGA" name="build,_-UFKkVGJEeCTkLy-ZjLOXQ" guid="-Y00TazoyvguICh6q_4YmGA">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8IZMMGTX1UBUmZ28DQR8OQ" name="design,_-UFKlFGJEeCTkLy-ZjLOXQ" guid="-8IZMMGTX1UBUmZ28DQR8OQ">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aX1CwFnnFt1UpjtnxobS7w" name="developer_test,_-UFKl1GJEeCTkLy-ZjLOXQ" guid="-aX1CwFnnFt1UpjtnxobS7w">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sMA8drzs_a8OCmSu4dGqig" name="implementation,_-UFKmlGJEeCTkLy-ZjLOXQ" guid="-sMA8drzs_a8OCmSu4dGqig">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-g8eyEzrgKBWjkVL8p2QBzw" name="vision,_-UYFgVGJEeCTkLy-ZjLOXQ" guid="-g8eyEzrgKBWjkVL8p2QBzw">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nb3bRbSp4TIxTvy-pxVRcw" name="storyboard,_-UYFhFGJEeCTkLy-ZjLOXQ" guid="-nb3bRbSp4TIxTvy-pxVRcw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AGeybfRpiMYgzdsXE9iJyg" name="project_manager,_-VkYUVGJEeCTkLy-ZjLOXQ" guid="-AGeybfRpiMYgzdsXE9iJyg">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6goddW1VwYVftsKf8AqN9Q" name="architect,_-VuJVFGJEeCTkLy-ZjLOXQ" guid="-6goddW1VwYVftsKf8AqN9Q">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KesLoigQIIBnm1JGff9gqA" name="tester,_-VuJXVGJEeCTkLy-ZjLOXQ" guid="-KesLoigQIIBnm1JGff9gqA">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7IAsT0eazSQSRfYPOCj52A" name="iteration_plan,_-V3TR1GJEeCTkLy-ZjLOXQ" guid="-7IAsT0eazSQSRfYPOCj52A">
    <keyConsiderations>&lt;p>

    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work

    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the

    remaining high priority work items, plus a few mid-priority ones from the Work Items List). When work items are assigned

    to an iteration, no matter what their previous priorities, the team has to make sure that they are able to develop

    what has been assigned to the iteration. Deciding what to develop first (or

    even to develop things in parallel) on an iteration will vary from project to project, from iteration to iteration.

&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4DyenQDmpIeExWvB9R1svQ" name="stakeholder_request,_-WBEQVGJEeCTkLy-ZjLOXQ" guid="-4DyenQDmpIeExWvB9R1svQ">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rX3TbR4j8eOZLgCd4yk3fg" name="requirements_attributes,_-WK1QVGJEeCTkLy-ZjLOXQ" guid="-rX3TbR4j8eOZLgCd4yk3fg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2sp9DGkv4EA0HirXAxxnLQ" name="requirements_traceability,_-WK1RFGJEeCTkLy-ZjLOXQ" guid="-2sp9DGkv4EA0HirXAxxnLQ">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1SeEZWIUJaSPXTDzi0_Yyw" name="requirements_management_process_description,_-WK1R1GJEeCTkLy-ZjLOXQ" guid="-1SeEZWIUJaSPXTDzi0_Yyw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ryO_xpOTaXOh895xxdpdAg" name="vision,_-WK1SlGJEeCTkLy-ZjLOXQ" guid="-ryO_xpOTaXOh895xxdpdAg">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-L_cQ7ffNDR6JLFA00Q96lg" name="glossary,_-WT_MVGJEeCTkLy-ZjLOXQ" guid="-L_cQ7ffNDR6JLFA00Q96lg">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-htL4YNmrmwYKF0u-C41zKA" name="storyboard,_-WT_NFGJEeCTkLy-ZjLOXQ" guid="-htL4YNmrmwYKF0u-C41zKA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FN7Iq9Hsn-2E6h6ilpuO5g" name="user_role,_-WT_N1GJEeCTkLy-ZjLOXQ" guid="-FN7Iq9Hsn-2E6h6ilpuO5g">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-G_Y9Qqu-Cs1zQCLGtCLloQ" name="user_story,_-WT_OlGJEeCTkLy-ZjLOXQ" guid="-G_Y9Qqu-Cs1zQCLGtCLloQ">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aATOjqv9A6BvYyE0FGlfzQ" name="architecture_notebook,_-WnhMVGJEeCTkLy-ZjLOXQ" guid="-aATOjqv9A6BvYyE0FGlfzQ">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_-wK3XEfBKWBsyFpcZTtlA" name="project_plan,_-WwrIVGJEeCTkLy-ZjLOXQ" guid="-_-wK3XEfBKWBsyFpcZTtlA">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hM6JDWmObiwYlRU7GltksA" name="build,_-W6cIVGJEeCTkLy-ZjLOXQ" guid="-hM6JDWmObiwYlRU7GltksA">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-avxb9GtaWTbxDqmyUrBw_w" name="design,_-W6cJFGJEeCTkLy-ZjLOXQ" guid="-avxb9GtaWTbxDqmyUrBw_w">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NggdMmHtoGsNX1M7y8Sx_Q" name="developer_test,_-XDmEVGJEeCTkLy-ZjLOXQ" guid="-NggdMmHtoGsNX1M7y8Sx_Q">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mvukRP7l555e6ythBgbAHA" name="implementation,_-XDmFFGJEeCTkLy-ZjLOXQ" guid="-mvukRP7l555e6ythBgbAHA">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-duCbT8Z5QtH9K4X5S2cyZg" name="test_case,_-XNXEVGJEeCTkLy-ZjLOXQ" guid="-duCbT8Z5QtH9K4X5S2cyZg">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nxDpWN-OjW9j0Lsj4_1WSA" name="test_log,_-XNXFFGJEeCTkLy-ZjLOXQ" guid="-nxDpWN-OjW9j0Lsj4_1WSA">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wHkXeeEjmJ8iYVSVq3_Fcg" name="test_manager,_-kK1AVGJEeCTkLy-ZjLOXQ" guid="-wHkXeeEjmJ8iYVSVq3_Fcg">
    <refinedDescription>Roles organize the responsibility for performing tasks and developing work products into logical groups. Each role can be&#xD;
assigned to one or more people, and each person can fill one or more roles. When staffing the Test Manager role, you need&#xD;
to consider both the skills required for the role and the different approaches you can take to assigning staff to the role.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zRKx0f-5yKV3dEGH7FJD6g" name="project_manager,_-kng8VGJEeCTkLy-ZjLOXQ" guid="-zRKx0f-5yKV3dEGH7FJD6g">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-o2Q0XD-rJqSS0ZXf0JQxOw" name="architect,_-kng91GJEeCTkLy-ZjLOXQ" guid="-o2Q0XD-rJqSS0ZXf0JQxOw">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Vs69aO9xNwhLTJODOJTZZg" name="tester,_-kxR91GJEeCTkLy-ZjLOXQ" guid="-Vs69aO9xNwhLTJODOJTZZg">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7c5jNmyDyVfqOh7DSyZn0A" name="test_case,_-k7C9FGJEeCTkLy-ZjLOXQ" guid="-7c5jNmyDyVfqOh7DSyZn0A">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7HWtbB5lSfipF9fdtc64Ng" name="test_log,_-k7C91GJEeCTkLy-ZjLOXQ" guid="-7HWtbB5lSfipF9fdtc64Ng">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KSO6llFMfQNTwEO6bzgQFw" name="architecture_notebook,_-lN94VGJEeCTkLy-ZjLOXQ" guid="-KSO6llFMfQNTwEO6bzgQFw">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tQ4K4uIPsM5m3KnFbUFwUg" name="iteration_plan,_-lN95FGJEeCTkLy-ZjLOXQ" guid="-tQ4K4uIPsM5m3KnFbUFwUg">
    <keyConsiderations>&lt;p>

    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work

    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the

    remaining high priority work items, plus a few mid-priority ones from the Work Items List). When work items are assigned

    to an iteration, no matter what their previous priorities, the team has to make sure that they are able to develop

    what has been assigned to the iteration. Deciding what to develop first (or

    even to develop things in parallel) on an iteration will vary from project to project, from iteration to iteration.

&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6IQks-TaL0l5bPDc3k8GPA" name="risk_list,_-lXH0VGJEeCTkLy-ZjLOXQ" guid="-6IQks-TaL0l5bPDc3k8GPA">
    <keyConsiderations>&lt;p>
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully consider
    whether they are really serious risks. Tracking more than 20 risks is an onerous task.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot; guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project
    activities, and is the basis around which iterations are organized.
&lt;/p>
&lt;p>
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot; guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-a2qXUmZUHTej5_GcueAD3Q" name="project_plan,_-lXH1FGJEeCTkLy-ZjLOXQ" guid="-a2qXUmZUHTej5_GcueAD3Q">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6noyKlTjoAUJ3AotiEtPsQ" name="stakeholder_request,_-lg40VGJEeCTkLy-ZjLOXQ" guid="-6noyKlTjoAUJ3AotiEtPsQ">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-q0Tz-JDlhlDS5QuJUvS8FQ" name="build,_-lqp0VGJEeCTkLy-ZjLOXQ" guid="-q0Tz-JDlhlDS5QuJUvS8FQ">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ik-WOgt-9KUoS1UbWOSJHA" name="design,_-lqp1FGJEeCTkLy-ZjLOXQ" guid="-Ik-WOgt-9KUoS1UbWOSJHA">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4zqaGSHuAYjnDHavcvLtmQ" name="developer_test,_-lqp11GJEeCTkLy-ZjLOXQ" guid="-4zqaGSHuAYjnDHavcvLtmQ">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qRWt3a2BPviEYLSpCYwZRw" name="implementation,_-lzzwVGJEeCTkLy-ZjLOXQ" guid="-qRWt3a2BPviEYLSpCYwZRw">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k8xffm95rSVygz6ajKhxKg" name="requirements_management_process_description,_-l9kwVGJEeCTkLy-ZjLOXQ" guid="-k8xffm95rSVygz6ajKhxKg">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KK2KxmXrM5B3BWw1oPNyOQ" name="vision,_-l9kxFGJEeCTkLy-ZjLOXQ" guid="-KK2KxmXrM5B3BWw1oPNyOQ">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-b33yDleLiSsuyNxcniCobQ" name="glossary,_-mHVwVGJEeCTkLy-ZjLOXQ" guid="-b33yDleLiSsuyNxcniCobQ">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PU1AlpoXKHsZaFETZsFW6g" name="storyboard,_-mHVxFGJEeCTkLy-ZjLOXQ" guid="-PU1AlpoXKHsZaFETZsFW6g">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kPoV1AZu1iyl1VpZvSry_w" name="user_role,_-mHVx1GJEeCTkLy-ZjLOXQ" guid="-kPoV1AZu1iyl1VpZvSry_w">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3c5qA117IPr2G-5-Eqy6HA" name="user_story,_-mQfsVGJEeCTkLy-ZjLOXQ" guid="-3c5qA117IPr2G-5-Eqy6HA">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rNruXEABExDs8LVA6pdOSA" name="test_manager,_-maQsVGJEeCTkLy-ZjLOXQ" guid="-rNruXEABExDs8LVA6pdOSA">
    <refinedDescription>Roles organize the responsibility for performing tasks and developing work products into logical groups. Each role can be&#xD;
assigned to one or more people, and each person can fill one or more roles. When staffing the Test Manager role, you need&#xD;
to consider both the skills required for the role and the different approaches you can take to assigning staff to the role.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jUy3lRpc4qGH-_VZIj3BNw" name="test_motivator,_-mjaoVGJEeCTkLy-ZjLOXQ" guid="-jUy3lRpc4qGH-_VZIj3BNw">
    <refinedDescription>&lt;p>&#xD;
    A test motivator is usually an external file that provides details about a test plan or test case. For example, a test&#xD;
    motivator file could be a document or spreadsheet containing detailed information about a specific test plan or test&#xD;
    case. It is convenient to be able to reference a test motivator file from a test plan and test case record. Test&#xD;
    motivators are useful in linking test requirements with test plans and test cases.&#xD;
&lt;/p>&#xD;
&lt;div class=&quot;p&quot;>&#xD;
    You can use associations between test plan and test case records with a test motivator to determine: &#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            If there is test coverage for the motivator&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            If a test plan associated with a motivator has an associated external file&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5uM4k9aWDRLYbkl03B1xZw" name="tester,_-z-LkVGJEeCTkLy-ZjLOXQ" guid="-5uM4k9aWDRLYbkl03B1xZw">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HjrmCZeoLGEDOPTheb67Aw" name="stakeholder_request,_-0HVgVGJEeCTkLy-ZjLOXQ" guid="-HjrmCZeoLGEDOPTheb67Aw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QZqwIf9hya_UlYtCBQsoVA" name="test_log,_-0HVhFGJEeCTkLy-ZjLOXQ" guid="-QZqwIf9hya_UlYtCBQsoVA">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5wUIBxGatf7Wx0Zvi7jA3g" name="build,_-0RGgVGJEeCTkLy-ZjLOXQ" guid="-5wUIBxGatf7Wx0Zvi7jA3g">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Xq4TPch03hmbeGad_HNNrA" name="design,_-0RGhFGJEeCTkLy-ZjLOXQ" guid="-Xq4TPch03hmbeGad_HNNrA">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PC2zBTKadl859Pp0t90iXQ" name="developer_test,_-0RGh1GJEeCTkLy-ZjLOXQ" guid="-PC2zBTKadl859Pp0t90iXQ">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3rqWzQHKx69rn_vmAYTgEg" name="implementation,_-0RGilGJEeCTkLy-ZjLOXQ" guid="-3rqWzQHKx69rn_vmAYTgEg">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-G_44ML3wUJbnZr0FiGE7Ew" name="requirements_attributes,_-0a3gVGJEeCTkLy-ZjLOXQ" guid="-G_44ML3wUJbnZr0FiGE7Ew">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xLG1a_LeFadZy7XEOzgxEw" name="requirements_traceability,_-0kBcVGJEeCTkLy-ZjLOXQ" guid="-xLG1a_LeFadZy7XEOzgxEw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZtGas1uSvRrxtvppW7MCMw" name="requirements_management_process_description,_-0kBdFGJEeCTkLy-ZjLOXQ" guid="-ZtGas1uSvRrxtvppW7MCMw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rNJQl2-9b9Z2LZbd7V32Ng" name="vision,_-0kBd1GJEeCTkLy-ZjLOXQ" guid="-rNJQl2-9b9Z2LZbd7V32Ng">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BXt-nz6LyQbTlYjFdt5nqA" name="glossary,_-0kBelGJEeCTkLy-ZjLOXQ" guid="-BXt-nz6LyQbTlYjFdt5nqA">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-U70EvETKwRSpaqJbFrJOWQ" name="storyboard,_-0kBfVGJEeCTkLy-ZjLOXQ" guid="-U70EvETKwRSpaqJbFrJOWQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pmp2TibJ_RA2o5dwuWxOWQ" name="user_role,_-0kBgFGJEeCTkLy-ZjLOXQ" guid="-pmp2TibJ_RA2o5dwuWxOWQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TVL51gqubr9ngJoGY21uUg" name="user_story,_-0tycVGJEeCTkLy-ZjLOXQ" guid="-TVL51gqubr9ngJoGY21uUg">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WVNTcvlW0OHEjpKjlDw0-g" name="architect,_-1dZVFGJEeCTkLy-ZjLOXQ" guid="-WVNTcvlW0OHEjpKjlDw0-g">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fl0ZBDb0Klo0GT9qIDpO1g" name="tester,_-1dZWlGJEeCTkLy-ZjLOXQ" guid="-fl0ZBDb0Klo0GT9qIDpO1g">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BMM9vuf0b2FiES5Fth9FcQ" name="requirements_attributes,_-1nKUVGJEeCTkLy-ZjLOXQ" guid="-BMM9vuf0b2FiES5Fth9FcQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FtCoiMofKeRElhJz3ZOYAQ" name="requirements_traceability,_-1nKVFGJEeCTkLy-ZjLOXQ" guid="-FtCoiMofKeRElhJz3ZOYAQ">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0cKIh2I06_vWo86wv-d8xg" name="requirements_management_process_description,_-1nKV1GJEeCTkLy-ZjLOXQ" guid="-0cKIh2I06_vWo86wv-d8xg">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_Dacg1HjwjT1Quevl3gXcg" name="vision,_-1wUQVGJEeCTkLy-ZjLOXQ" guid="-_Dacg1HjwjT1Quevl3gXcg">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hWXDR9DraaEYou2Q2FcI6g" name="glossary,_-1wURFGJEeCTkLy-ZjLOXQ" guid="-hWXDR9DraaEYou2Q2FcI6g">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yxK8uooXaM9-raRDQ8GZ1g" name="storyboard,_-1wUR1GJEeCTkLy-ZjLOXQ" guid="-yxK8uooXaM9-raRDQ8GZ1g">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lWfL2SDgREFzSURSlp856g" name="user_role,_-1wUSlGJEeCTkLy-ZjLOXQ" guid="-lWfL2SDgREFzSURSlp856g">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lrgFpCSH2XYmBEmdhcAwfg" name="user_story,_-16FQVGJEeCTkLy-ZjLOXQ" guid="-lrgFpCSH2XYmBEmdhcAwfg">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IzXE44pOCV9u9mMpOOJA4w" name="stakeholder_request,_-2DPMVGJEeCTkLy-ZjLOXQ" guid="-IzXE44pOCV9u9mMpOOJA4w">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pf5DtE8b3iFkD2yc0R7Snw" name="test_case,_-2NAMVGJEeCTkLy-ZjLOXQ" guid="-pf5DtE8b3iFkD2yc0R7Snw">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2QQWXDIOoQ8DN0tynxOpAQ" name="architecture_notebook,_-2WxMVGJEeCTkLy-ZjLOXQ" guid="-2QQWXDIOoQ8DN0tynxOpAQ">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NgLP9sfkoUj-AvZKCDX7pw" name="build,_-2f7IVGJEeCTkLy-ZjLOXQ" guid="-NgLP9sfkoUj-AvZKCDX7pw">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hQG2rNIk-ibWt5kujghY9w" name="design,_--QI9FGJEeCTkLy-ZjLOXQ" guid="-hQG2rNIk-ibWt5kujghY9w">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-c2Z6fcpJz6xv35Yfugmx5Q" name="developer_test,_--QI91GJEeCTkLy-ZjLOXQ" guid="-c2Z6fcpJz6xv35Yfugmx5Q">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iFvsUkvgxKyhHwfiLezF7w" name="implementation,_--QI-lGJEeCTkLy-ZjLOXQ" guid="-iFvsUkvgxKyhHwfiLezF7w">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OXLem9S5aDLXgC74wQa3Vg" name="tester,_--jD4VGJEeCTkLy-ZjLOXQ" guid="-OXLem9S5aDLXgC74wQa3Vg">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vpI-gpKB78wrAeMv3hs6mg" name="test_case,_--jD5FGJEeCTkLy-ZjLOXQ" guid="-vpI-gpKB78wrAeMv3hs6mg">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-U4CLbXSzzfcz2TG1jF6k0A" name="any_role,_--jD51GJEeCTkLy-ZjLOXQ" guid="-U4CLbXSzzfcz2TG1jF6k0A">
    <refinedDescription>&lt;p> This role allows anyone on a team to perform general tasks: &lt;/p>
&lt;ul>
  &lt;li> Access artifacts in the configuration control system for development and 
    maintenance &lt;/li>
  &lt;li> Submit change requests for the project &lt;/li>
  &lt;li> Participate in assessments and reviews &lt;/li>
  &lt;li> Volunteer to work on a particular iteration &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-e_B_-OlI1YDeh0FAkz820w" name="architect,_--1-1FGJEeCTkLy-ZjLOXQ" guid="-e_B_-OlI1YDeh0FAkz820w">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-il_X074w_zl61NThgJLhcw" name="tester,_--1-2lGJEeCTkLy-ZjLOXQ" guid="-il_X074w_zl61NThgJLhcw">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3GclXRLWw_ew_jV5tZknSQ" name="test_case,_-_Jg0VGJEeCTkLy-ZjLOXQ" guid="-3GclXRLWw_ew_jV5tZknSQ">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-USwGhrXnEKCO4ik_GRg75w" name="stakeholder_request,_-_SqwVGJEeCTkLy-ZjLOXQ" guid="-USwGhrXnEKCO4ik_GRg75w">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bBg8yvfBtOk7Yv8ha-OU1g" name="architecture_notebook,_-_cbwVGJEeCTkLy-ZjLOXQ" guid="-bBg8yvfBtOk7Yv8ha-OU1g">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dFbMAXTZKCuViXq8Hi_sKA" name="requirements_attributes,_-_cbxFGJEeCTkLy-ZjLOXQ" guid="-dFbMAXTZKCuViXq8Hi_sKA">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PHe33Nvm3TWfP3MH6t3Bnw" name="requirements_traceability,_-_llsVGJEeCTkLy-ZjLOXQ" guid="-PHe33Nvm3TWfP3MH6t3Bnw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-K4Fe2l7LkhH0mOLccmlFzA" name="requirements_management_process_description,_-_lltFGJEeCTkLy-ZjLOXQ" guid="-K4Fe2l7LkhH0mOLccmlFzA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2Rpub_fFCgraLbk05Mqnug" name="vision,_-_llt1GJEeCTkLy-ZjLOXQ" guid="-2Rpub_fFCgraLbk05Mqnug">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-reC7PGMoMjA6mlpQgoZZPQ" name="glossary,_-_llulGJEeCTkLy-ZjLOXQ" guid="-reC7PGMoMjA6mlpQgoZZPQ">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VCdIqAqElQlaacvvYZB3zw" name="storyboard,_-_vWsVGJEeCTkLy-ZjLOXQ" guid="-VCdIqAqElQlaacvvYZB3zw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ip34Gpr8BRLN06Ud7ePiYQ" name="user_role,_-_vWtFGJEeCTkLy-ZjLOXQ" guid="-ip34Gpr8BRLN06Ud7ePiYQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-osQzSaoDhlnStUH8vSZKMA" name="user_story,_-_vWt1GJEeCTkLy-ZjLOXQ" guid="-osQzSaoDhlnStUH8vSZKMA">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lY7jgZRPNMrMqTKj5unLow" name="change_request_implementer,__AVzoVGJEeCTkLy-ZjLOXQ" guid="-lY7jgZRPNMrMqTKj5unLow">
    <keyConsiderations>&lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: Batang; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: KO; mso-bidi-language: AR-SA&quot;>On&#xD;
large projects, this role is typically assigned to those with a business analyst or a developer skill set.&lt;/span></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This role represents the individual on the development team who is responsible for implementing a change request. This&#xD;
    is not really a new role, as anyone playing this role will also be playing another role on the development team.&#xD;
    Because the skills required will depend upon which particular artifacts are affected, it is convenient to capture this&#xD;
    responsibility in a generic role.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    What are the responsibilities of the Change Control Implementer?&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The change control implementer is responsible for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Obtain approvals from the project sponsor before the change request is scheduled.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Review the testing results from the change development.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Develop and prepare the change for production.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5HhNIYs0e8-CZ9zB8k8aBg" name="change_request_verifier,__Ae9kVGJEeCTkLy-ZjLOXQ" guid="-5HhNIYs0e8-CZ9zB8k8aBg">
    <refinedDescription>&lt;p>&#xD;
    This role represents the individual on the development team who is responsible for verifying that a resolved&#xD;
    change request does in fact satisfy the intent of the request. This is not a new role, as anyone playing this&#xD;
    role will also be playing another role while performing this task. For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        For a change request that implements a new feature or scenario, the Request Verifier would also be a&#xD;
        Tester that tests the system to verify the implementation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        For a change request that adds a new requirement, the Request Verifier would also be an Analyst that&#xD;
        performs a peer review.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Because the skills required for this role depend on which artifacts are affected, it is convenient to capture&#xD;
    this responsibility in a generic role.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    What are the responsibilities of the Change Request Verifier?&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    1. Develop test procedures.&lt;br />&#xD;
    2. Schedule and run tests.&lt;br />&#xD;
    3. Document the test results.&lt;br />&#xD;
    4. Use the test results as part of the change documentation.&lt;br />&#xD;
    5. Notify all stakeholders who are impacted by the change.&lt;br />&#xD;
&lt;/p>&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-v08yKvNr3soVcAL7qE--Yw" name="project_manager,__H7pYVGJEeCTkLy-ZjLOXQ" guid="-v08yKvNr3soVcAL7qE--Yw">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fG2SkiI4eNUh3MN4zStJJQ" name="architect,__IFaZFGJEeCTkLy-ZjLOXQ" guid="-fG2SkiI4eNUh3MN4zStJJQ">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-o8bq85haW2c7tet50PazDA" name="tester,__IFabVGJEeCTkLy-ZjLOXQ" guid="-o8bq85haW2c7tet50PazDA">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-suaAQfdWozHvgJGPt9Lgqw" name="stakeholder_request,__IPLYVGJEeCTkLy-ZjLOXQ" guid="-suaAQfdWozHvgJGPt9Lgqw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tIXeix-qkBOwYr-eYSAUYg" name="architecture_notebook,__IYVUVGJEeCTkLy-ZjLOXQ" guid="-tIXeix-qkBOwYr-eYSAUYg">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-f6i7skhzKbhi8h8GH2VWSw" name="requirements_attributes,__IiGUVGJEeCTkLy-ZjLOXQ" guid="-f6i7skhzKbhi8h8GH2VWSw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SV6r69Jbi0nKM9cBoimn0g" name="requirements_traceability,__IiGVFGJEeCTkLy-ZjLOXQ" guid="-SV6r69Jbi0nKM9cBoimn0g">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WaNFCfqAliHqaH07HbVosw" name="requirements_management_process_description,__Ir3UVGJEeCTkLy-ZjLOXQ" guid="-WaNFCfqAliHqaH07HbVosw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Xe4Yw9PIkqFCI-ON_2T2CA" name="vision,__Ir3VFGJEeCTkLy-ZjLOXQ" guid="-Xe4Yw9PIkqFCI-ON_2T2CA">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nmmRhXW7xQbiPC5gZMerLA" name="glossary,__Ir3V1GJEeCTkLy-ZjLOXQ" guid="-nmmRhXW7xQbiPC5gZMerLA">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-o96I6CGwzJBO400rKo3XZQ" name="storyboard,__Ir3WlGJEeCTkLy-ZjLOXQ" guid="-o96I6CGwzJBO400rKo3XZQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RTOApQyydg7AJcBzmsBPZg" name="user_role,__I1BQVGJEeCTkLy-ZjLOXQ" guid="-RTOApQyydg7AJcBzmsBPZg">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NXQv4_cNXRilkHeBXk0dVg" name="user_story,__I1BRFGJEeCTkLy-ZjLOXQ" guid="-NXQv4_cNXRilkHeBXk0dVg">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zthIlBm9rrC2d9xNbozqNQ" name="project_plan,__JH8MVGJEeCTkLy-ZjLOXQ" guid="-zthIlBm9rrC2d9xNbozqNQ">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MOavRkrTCyeeeeHLbI5BfQ" name="test_case,__JRtMVGJEeCTkLy-ZjLOXQ" guid="-MOavRkrTCyeeeeHLbI5BfQ">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NQrBkbeNu1i_jRINB7tLxA" name="test_log,__JRtNFGJEeCTkLy-ZjLOXQ" guid="-NQrBkbeNu1i_jRINB7tLxA">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-r8mo2JDEPFc5J6YgSuG1hw" name="build,__JbeMVGJEeCTkLy-ZjLOXQ" guid="-r8mo2JDEPFc5J6YgSuG1hw">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7bHrCK7TD6W1SsaC0KIXLA" name="design,__JkoIVGJEeCTkLy-ZjLOXQ" guid="-7bHrCK7TD6W1SsaC0KIXLA">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UfMjC1_G3o7mdrIrEI4fww" name="developer_test,__JkoJFGJEeCTkLy-ZjLOXQ" guid="-UfMjC1_G3o7mdrIrEI4fww">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DnLxpW36W86v3AgJ_CxOYQ" name="implementation,__JkoJ1GJEeCTkLy-ZjLOXQ" guid="-DnLxpW36W86v3AgJ_CxOYQ">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iRk7cw1EOg2bI5frYZQoSw" name="test_manager,__JuZIVGJEeCTkLy-ZjLOXQ" guid="-iRk7cw1EOg2bI5frYZQoSw">
    <refinedDescription>Roles organize the responsibility for performing tasks and developing work products into logical groups. Each role can be&#xD;
assigned to one or more people, and each person can fill one or more roles. When staffing the Test Manager role, you need&#xD;
to consider both the skills required for the role and the different approaches you can take to assigning staff to the role.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-659OOaZgriW06spNTRRjfA" name="test_motivator,__KBUEVGJEeCTkLy-ZjLOXQ" guid="-659OOaZgriW06spNTRRjfA">
    <refinedDescription>&lt;p>&#xD;
    A test motivator is usually an external file that provides details about a test plan or test case. For example, a test&#xD;
    motivator file could be a document or spreadsheet containing detailed information about a specific test plan or test&#xD;
    case. It is convenient to be able to reference a test motivator file from a test plan and test case record. Test&#xD;
    motivators are useful in linking test requirements with test plans and test cases.&#xD;
&lt;/p>&#xD;
&lt;div class=&quot;p&quot;>&#xD;
    You can use associations between test plan and test case records with a test motivator to determine: &#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            If there is test coverage for the motivator&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            If a test plan associated with a motivator has an associated external file&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JpN1gosw5WpY36i4IOzitg" name="architect,__LEc9FGJEeCTkLy-ZjLOXQ" guid="-JpN1gosw5WpY36i4IOzitg">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EcbMdpf6ClawzAqTRWNENw" name="tester,__LEc-lGJEeCTkLy-ZjLOXQ" guid="-EcbMdpf6ClawzAqTRWNENw">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-czbwtCQuiLC0-3vPrLkg6Q" name="architecture_notebook,__LNm4VGJEeCTkLy-ZjLOXQ" guid="-czbwtCQuiLC0-3vPrLkg6Q">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QSzQH-FB4yACnCiNXFSJ-A" name="test_case,__LXX4VGJEeCTkLy-ZjLOXQ" guid="-QSzQH-FB4yACnCiNXFSJ-A">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EYPbE56mRPWk4LexHnWrlg" name="requirements_attributes,__Lgh0VGJEeCTkLy-ZjLOXQ" guid="-EYPbE56mRPWk4LexHnWrlg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-efxEN2qC4XlDja7sxlluKA" name="requirements_traceability,__Lgh1FGJEeCTkLy-ZjLOXQ" guid="-efxEN2qC4XlDja7sxlluKA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pg0H0tz6b12pWQqiGjSKQw" name="requirements_management_process_description,__Lgh11GJEeCTkLy-ZjLOXQ" guid="-pg0H0tz6b12pWQqiGjSKQw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PENYRfTw5BLMK1DNSuSVGw" name="vision,__LqS0VGJEeCTkLy-ZjLOXQ" guid="-PENYRfTw5BLMK1DNSuSVGw">
    <keyConsiderations>&lt;p> It
is good practice to keep this artifact brief, so you can release it to stakeholders
as soon as possible, and to make the artifact easy for stakeholders to read
and understand. You can accomplish this by including only the most important
features and avoiding details of requirements. &lt;/p> &lt;p> Projects that focus
on product development might extend the marketing section and include a more
detailed product position statement that is based on their needs and research. &lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JzmWHxQYq3Gj6dPnXghWLg" name="glossary,__LqS1FGJEeCTkLy-ZjLOXQ" guid="-JzmWHxQYq3Gj6dPnXghWLg">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oAqXkQhZbKmOiPEUmphu-Q" name="storyboard,__LqS11GJEeCTkLy-ZjLOXQ" guid="-oAqXkQhZbKmOiPEUmphu-Q">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iTJ5SkmFh1JvdW1LpVQNfA" name="user_role,__LqS2lGJEeCTkLy-ZjLOXQ" guid="-iTJ5SkmFh1JvdW1LpVQNfA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-P7Tv_YboI_4fExQk2wi4rQ" name="user_story,__L0D0VGJEeCTkLy-ZjLOXQ" guid="-P7Tv_YboI_4fExQk2wi4rQ">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-44Y0m409BAdNCYEiPBg6PA" name="stakeholder_request,__L9NwVGJEeCTkLy-ZjLOXQ" guid="-44Y0m409BAdNCYEiPBg6PA">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MfgakEzyVms1dnh2VIEPOA" name="change_request_implementer,__MjqsVGJEeCTkLy-ZjLOXQ" guid="-MfgakEzyVms1dnh2VIEPOA">
    <keyConsiderations>&lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: Batang; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: KO; mso-bidi-language: AR-SA&quot;>On&#xD;
large projects, this role is typically assigned to those with a business analyst or a developer skill set.&lt;/span></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This role represents the individual on the development team who is responsible for implementing a change request. This&#xD;
    is not really a new role, as anyone playing this role will also be playing another role on the development team.&#xD;
    Because the skills required will depend upon which particular artifacts are affected, it is convenient to capture this&#xD;
    responsibility in a generic role.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    What are the responsibilities of the Change Control Implementer?&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The change control implementer is responsible for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Obtain approvals from the project sponsor before the change request is scheduled.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Review the testing results from the change development.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Develop and prepare the change for production.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1EGFWQQdB8GNmuLNy1Z7ow" name="change_request_verifier,__M2loVGJEeCTkLy-ZjLOXQ" guid="-1EGFWQQdB8GNmuLNy1Z7ow">
    <refinedDescription>&lt;p>&#xD;
    This role represents the individual on the development team who is responsible for verifying that a resolved&#xD;
    change request does in fact satisfy the intent of the request. This is not a new role, as anyone playing this&#xD;
    role will also be playing another role while performing this task. For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        For a change request that implements a new feature or scenario, the Request Verifier would also be a&#xD;
        Tester that tests the system to verify the implementation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        For a change request that adds a new requirement, the Request Verifier would also be an Analyst that&#xD;
        performs a peer review.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Because the skills required for this role depend on which artifacts are affected, it is convenient to capture&#xD;
    this responsibility in a generic role.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    What are the responsibilities of the Change Request Verifier?&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    1. Develop test procedures.&lt;br />&#xD;
    2. Schedule and run tests.&lt;br />&#xD;
    3. Document the test results.&lt;br />&#xD;
    4. Use the test results as part of the change documentation.&lt;br />&#xD;
    5. Notify all stakeholders who are impacted by the change.&lt;br />&#xD;
&lt;/p>&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wft8M13qvFQN37gI2X3IYg" name="project_manager,__Uv9YVGJEeCTkLy-ZjLOXQ" guid="-wft8M13qvFQN37gI2X3IYg">
    <refinedDescription>&lt;p> The person in this role: &lt;/p>
&lt;ul>
    
  &lt;li> Coaches the team to drive a successful outcome of the project and the acceptance 
    of the product by the customer&lt;/li>
  &lt;li> Is accountable for the outcome of the project and the acceptance of the 
    product by the customer&lt;/li>
    
  &lt;li> Is responsible for the evaluation of project's risks and for controlling 
    those risks through mitigation strategies&lt;/li>
    
  &lt;li> Applies management knowledge, skills, tools, and techniques to a broad 
    range of tasks to deliver&amp;nbsp;the desired&amp;nbsp;result for a particular project 
    in a timely manner&lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-W776szAYfclFgx2eup4lew" name="iteration_plan,__Uv9ZFGJEeCTkLy-ZjLOXQ" guid="-W776szAYfclFgx2eup4lew">
    <keyConsiderations>&lt;p>

    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work

    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the

    remaining high priority work items, plus a few mid-priority ones from the Work Items List). When work items are assigned

    to an iteration, no matter what their previous priorities, the team has to make sure that they are able to develop

    what has been assigned to the iteration. Deciding what to develop first (or

    even to develop things in parallel) on an iteration will vary from project to project, from iteration to iteration.

&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be
    solved during the iteration.
&lt;/p>
&lt;p>
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess
    at the end if those objectives have been achieved.
&lt;/p>
&lt;p>
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references
    those work items.
&lt;/p>
&lt;p>
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate results and actions from
    assessments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0CutsBUkt0VD_eMDvvHgSQ" name="work_items_list,__Uv9Z1GJEeCTkLy-ZjLOXQ" guid="-0CutsBUkt0VD_eMDvvHgSQ">
    <keyConsiderations>&lt;p>
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact provides a focal point for the entire team:
&lt;/p>
&lt;ul>
    &lt;li>
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note
        that some of these requests may never be implemented, or be implemented in later projects.
    &lt;/li>
    &lt;li>
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list
        is prioritized separately.
    &lt;/li>
    &lt;li>
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be
        delivered, get references to material required to carry out the work, and report progress made.
    &lt;/li>
&lt;/ul>
&lt;p>
    These are the typical work items that go on this list:
&lt;/p>
&lt;ul>
    &lt;li>
        Use cases (and references to use-case specifications)
    &lt;/li>
    &lt;li>
        System-wide requirements
    &lt;/li>
    &lt;li>
        Changes and enhancement requests
    &lt;/li>
    &lt;li>
        Defects
    &lt;/li>
    &lt;li>
        Development tasks
    &lt;/li>
&lt;/ul>
&lt;p>
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child
    relationships, where the lowest level is a specification and tracking device for micro-increments.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ylZ_3gG_K-lesL0fkT5VLw" name="architect,__U5uYVGJEeCTkLy-ZjLOXQ" guid="-ylZ_3gG_K-lesL0fkT5VLw">
    <refinedDescription>&lt;p>
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and
    documenting the architecturally significant aspects of the system as views that describe requirements, design,
    implementation, and deployment.
&lt;/p>
&lt;p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
&lt;/p>
&lt;p>
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended
    that the team be organized around the architecture.
&lt;/p>
&lt;p>
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant
    requirements are assigned to the proper components of the system.&amp;nbsp;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HxUJZUqt_VHmbEjvwNqUaQ" name="tester,__U5ualGJEeCTkLy-ZjLOXQ" guid="-HxUJZUqt_VHmbEjvwNqUaQ">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Nk4SoRbS4s0a8ovTACJZZg" name="test_case,__VC4UVGJEeCTkLy-ZjLOXQ" guid="-Nk4SoRbS4s0a8ovTACJZZg">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eR1LFQ46kWZTKhPXaf_S0w" name="test_log,__VC4VFGJEeCTkLy-ZjLOXQ" guid="-eR1LFQ46kWZTKhPXaf_S0w">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IOiaQ2fdiJG_sJrCmEnNNw" name="requirements_attributes,__VMpUVGJEeCTkLy-ZjLOXQ" guid="-IOiaQ2fdiJG_sJrCmEnNNw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vi_ZDg_HTnwpJM4b2uBcLw" name="requirements_traceability,__VMpVFGJEeCTkLy-ZjLOXQ" guid="-vi_ZDg_HTnwpJM4b2uBcLw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qjBEpss_6--3k7TySMW4cw" name="requirements_management_process_description,__VWaUVGJEeCTkLy-ZjLOXQ" guid="-qjBEpss_6--3k7TySMW4cw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-B882tJzcfSLZSijakSkhxA" name="glossary,__VWaVFGJEeCTkLy-ZjLOXQ" guid="-B882tJzcfSLZSijakSkhxA">
    <keyConsiderations>&lt;p> Although listed as an &lt;i>output from&lt;/i> and an&lt;i> input to&lt;/i> tasks associated 
  with the requirements discipline, this artifact can be updated at any time and 
  by any role as new terms are identified. The terms defined should be used according 
  to the recorded definitions in all project documentation so that all stakeholders 
  can clearly see that terms are being used consistently. &lt;/p>
&lt;p> One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether 
  to have all terms in a single glossary or to maintain terms in several glossaries, 
  business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple places, 
  you need to communicate all of those sources to the team and decide which take 
  precedence. &lt;/p>
&lt;p> It may be important, even in small projects, to reference and use existing 
  broader glossaries, business terms artifacts, or data models, where they exist. 
&lt;/p>
&lt;p> Industry- and organization-wide glossaries may be referenced, and compliance 
  with such specific chosen standards may be required. &lt;/p></keyConsiderations>
    <refinedDescription>&lt;p> This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential 
  resources: &lt;/p>
&lt;ul>
  &lt;li> A central location to look for terms and abbreviations that are new to 
    development team members &lt;/li>
  &lt;li> Definitions of terms that are used in specific ways within the domain &lt;/li>
&lt;/ul>
&lt;p> Definitions for the glossary terms come from several sources, such as requirements 
  documents, specifications, and discussions with stakeholders and domain experts. 
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sFZquI0wjWj_5zBuemlhJw" name="storyboard,__VWaV1GJEeCTkLy-ZjLOXQ" guid="-sFZquI0wjWj_5zBuemlhJw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RDamieNdPOiW7sKJyEtLuQ" name="user_role,__VWaWlGJEeCTkLy-ZjLOXQ" guid="-RDamieNdPOiW7sKJyEtLuQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZuDAW0zQWtwU20rce3i_gw" name="user_story,__VfkQVGJEeCTkLy-ZjLOXQ" guid="-ZuDAW0zQWtwU20rce3i_gw">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot;&#xD;
    guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-f6IL-opneJQTp1UfbCZ-yg" name="project_plan,__VzGQVGJEeCTkLy-ZjLOXQ" guid="-f6IL-opneJQTp1UfbCZ-yg">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and
    their milestones.
&lt;/p>
&lt;p>
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the
    project.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sP6ODVx29bbp7XF43IHDzQ" name="build,__V8QMVGJEeCTkLy-ZjLOXQ" guid="-sP6ODVx29bbp7XF43IHDzQ">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BMQVFoqQTZu-1J2Jgb4tVQ" name="design,__V8QNFGJEeCTkLy-ZjLOXQ" guid="-BMQVFoqQTZu-1J2Jgb4tVQ">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8zdFPImqakAnmzRjrCFzaQ" name="developer_test,__V8QN1GJEeCTkLy-ZjLOXQ" guid="-8zdFPImqakAnmzRjrCFzaQ">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7awhl0FdrcHjYYLt4bFMUw" name="implementation,__WGBMVGJEeCTkLy-ZjLOXQ" guid="-7awhl0FdrcHjYYLt4bFMUw">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GFz6g3EWK52abwAezfyDgw" name="stakeholder_request,__WPLIVGJEeCTkLy-ZjLOXQ" guid="-GFz6g3EWK52abwAezfyDgw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-n69karJvGTQZWZzv4WLiAQ" name="architecture_notebook,__WY8IVGJEeCTkLy-ZjLOXQ" guid="-n69karJvGTQZWZzv4WLiAQ">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Oc2OciytJ2mQaW1KfjHrBg" name="any_role,__WY8JFGJEeCTkLy-ZjLOXQ" guid="-Oc2OciytJ2mQaW1KfjHrBg">
    <refinedDescription>&lt;p> This role allows anyone on a team to perform general tasks: &lt;/p>
&lt;ul>
  &lt;li> Access artifacts in the configuration control system for development and 
    maintenance &lt;/li>
  &lt;li> Submit change requests for the project &lt;/li>
  &lt;li> Participate in assessments and reviews &lt;/li>
  &lt;li> Volunteer to work on a particular iteration &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uekzclJ99LvbelR0PAd_8A" name="develop_technical_vision,_yNjWQFGMEeCTkLy-ZjLOXQ" guid="-uekzclJ99LvbelR0PAd_8A">
    <keyConsiderations>&lt;p>&#xD;
    Use-case modeling&amp;nbsp;is one technique that can prove useful in defining the system boundaries and system behavior.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7BLTbEhUUC1Wru6WULEDyw" name="work_items_list,_UGugUSAuEeCaxPnRDErJGw" guid="-7BLTbEhUUC1Wru6WULEDyw">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-C6-Y06bpXegBSmi4pAc4mA" name="risk_list,_UGugVyAuEeCaxPnRDErJGw" guid="-C6-Y06bpXegBSmi4pAc4mA">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-x3AXMu_ow6XzKw5aHi0y2g" name="iteration_plan_team,_0X-OMlDCEeCOOdX2nygdtA" guid="-x3AXMu_ow6XzKw5aHi0y2g">
    <keyConsiderations>[*** This text is specific to Iteration Plan for the Team level ***]</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--3QmCyiMuLePUY8CvE50Qw" name="iteration_plan_project,_PCKKEVGNEeCTkLy-ZjLOXQ" guid="--3QmCyiMuLePUY8CvE50Qw">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0eBzobHSikEDokBdlcQ9eA" name="plan_the_project,_Xb74cFGNEeCTkLy-ZjLOXQ" guid="-0eBzobHSikEDokBdlcQ9eA">
    <keyConsiderations>&lt;p>&#xD;
    Gain agreement with stakeholders and the rest of the project team regarding the order of objectives and the duration of&#xD;
    the project. Make adjustments as&amp;nbsp;necessary.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>Developing the project plan provides an opportunity for the team to agree on project scope, objectives, initial timeframe,&#xD;
and deliverables. It allows the team to begin demonstrating self-organization by defining success criteria and work&#xD;
practices to be used. Collaboration and consensus by all key project participants is the goal, but the role responsible for&#xD;
this task must ensure that everybody is committed to the plan.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-U8eOj1PzvjJihWz5sbynlw" name="project_plan,_Xb74dVGNEeCTkLy-ZjLOXQ" guid="-U8eOj1PzvjJihWz5sbynlw">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in&#xD;
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it&#xD;
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and&#xD;
    their milestones.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect&#xD;
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of&#xD;
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the&#xD;
    project.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Jej6Xb-QW53SwlBD3dDyGA" name="iteration_plan_team,_Fukm8VcAEeCk3IkUhR88BA" guid="-Jej6Xb-QW53SwlBD3dDyGA">
    <keyConsiderations>[*** This text is specific to Iteration Plan for the Team level ***]</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qOxBzrXraViNy-YhyAKYYg" name="refine_the_arch,_9BixIFcaEeCk3IkUhR88BA" guid="-qOxBzrXraViNy-YhyAKYYg">
    <keyConsiderations>&lt;p>&#xD;
    It is important to continue to reduce the complexity of the&amp;nbsp;solution by raising the levels of abstraction.&amp;nbsp;&#xD;
    For more information, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/guidelines/abstract_away_complexity_DBF13AE6.html&quot;&#xD;
    guid=&quot;_we3F4ACpEdu8m4dIntu6jA&quot;>Guideline: Abstract Away Complexity&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Continue the collaboration with the whole&amp;nbsp;team on the refining of the architecture in order to promote consensus&#xD;
    and a common understanding of the overall solution. The architect should be working to coordinate and guide the&#xD;
    technical activities of the team rather than doing all the work alone.&amp;nbsp;Place special emphasis&amp;nbsp;on&#xD;
    involving&amp;nbsp;the developer(s) throughout this task since it's the developed solution that will prove out the&#xD;
    architecture and may result in refinements to the architecture documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Ensure that those who need to act upon the architectural work&amp;nbsp;understand&amp;nbsp;it and are able to work with&#xD;
    it.&amp;nbsp;Make sure that the description of the architecture clearly conveys not only the solution but also the&#xD;
    motivation and objectives related to the&amp;nbsp;decisions that have been made in shaping the architecture. This will make&#xD;
    it easier for others to understand the architecture and to adapt it over time.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You can communicate your decisions as many ways as you wish.&amp;nbsp; For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Publication of&amp;nbsp;reference source code&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Publication of&amp;nbsp;reference models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Publication of&amp;nbsp;software architecture documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Formal&amp;nbsp;presentations of the material&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Informal walkthroughs of the architecture&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This task&amp;nbsp;builds upon the outlined architecture and makes concrete and unambiguous architectural decisions to&#xD;
    support development.&amp;nbsp; It takes into&amp;nbsp;account any design and implementation work products that have been&#xD;
    developed so far.&amp;nbsp; In other words, the architecture evolves as the solution is designed and implemented, and the&#xD;
    architecture documentation is updated to reflect any changes made during development. This is&amp;nbsp;a key,&amp;nbsp;since&#xD;
    the actual implementation is the only real &quot;proof&quot; that the software architecture is viable and provides the definitive&#xD;
    basis for validating the suitability&amp;nbsp;of the architecture.&amp;nbsp; For more information, see &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/executable_arch_D4E68CBD.html&quot;&#xD;
    guid=&quot;_O1kAANvfEduv2KOT-Teh6w&quot;>Concept: Executable Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The results are captured for future reference and are communicated across the team.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-q7CoIVXI7AChAhAIjg1qQw" name="architecture_notebook,_9BsiIlcaEeCk3IkUhR88BA" guid="-q7CoIVXI7AChAhAIjg1qQw">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-u5553O-UW7G0m59d0MOUog" name="build,_dxqxFSAtEeCaxPnRDErJGw" guid="-u5553O-UW7G0m59d0MOUog">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-511NbNCqKpRH_upVj72DXQ" name="manage_iteration_project,_5qOAYFDBEeCOOdX2nygdtA" guid="-511NbNCqKpRH_upVj72DXQ">
    <keyConsiderations>&lt;p>&#xD;
    While managing the iteration at the project level, consider doing the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Track the iteration progress of each sub team. Have frequent meetings with&amp;nbsp;one representative&amp;nbsp;of each sub&#xD;
        team to understand progress and identify roadblocks.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Work with the sub teams in case work of an iteration needs to be descoped in order to meet iteration objectives.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RL8bly_DEub3PT7y3YX1mw" name="work_items_list,_cOzGFFmGEeCSHNuCIJ1m8w" guid="-RL8bly_DEub3PT7y3YX1mw">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3K0F7EIaY5Ec9Nmod4D9ZA" name="iteration_plan_project,_cOzGF1mGEeCSHNuCIJ1m8w" guid="-3K0F7EIaY5Ec9Nmod4D9ZA">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lDCVA0jQXn2zy7WHeONpZw" name="plan_iteration_project,_PCKKEFGNEeCTkLy-ZjLOXQ" guid="-lDCVA0jQXn2zy7WHeONpZw">
    <keyConsiderations>&lt;p>&#xD;
    While planning the iteration at the project level, consider doing the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Ensure that the iteration work effort rolled up from each sub team corresponds to a reasonable amount of work for&#xD;
        the iteration, based on each sub team’s previous velocity.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k1rBd3p-qatSjhW2EnvKEA" name="assess_iteration_results_project,_VAHwgFcjEeCReLR6QOKLmg" guid="-k1rBd3p-qatSjhW2EnvKEA">
    <keyConsiderations>&lt;p>&#xD;
    While assessing the iteration results at the project level, consider doing the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coordinate&amp;nbsp;the sub teams activities such as iteration assessment and demonstration of iteration results to&#xD;
        stakeholders. Leverage iteration status reports created by sub teams.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Perform a retrospective with sub team leads to understand what went well - and what not -&amp;nbsp;for each sub&#xD;
        team.&amp;nbsp;Improve the overall process followed by all teams.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--68FRNKMTWzH40cKwOaONQ" name="manage_iteration_project,_Xfyh8FDCEeCOOdX2nygdtA" guid="--68FRNKMTWzH40cKwOaONQ">
    <keyConsiderations>&lt;p>&#xD;
    While managing the iteration at the project level, consider doing the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Track the iteration progress of each sub team. Have frequent meetings with&amp;nbsp;one representative&amp;nbsp;of each sub&#xD;
        team to understand progress and identify roadblocks.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Work with the sub teams in case work of an iteration needs to be descoped in order to meet iteration objectives.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_6CPH68_kfp2XbxYHiepkg" name="work_items_list,_cak4RFmGEeCSHNuCIJ1m8w" guid="-_6CPH68_kfp2XbxYHiepkg">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HLJOov1L4eTLizmy8bOJUg" name="iteration_plan_project,_cak4R1mGEeCSHNuCIJ1m8w" guid="-HLJOov1L4eTLizmy8bOJUg">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gd7zgxde1M1Tw9XQyOYTWg" name="work_items_list,_CLDP4l7iEeCrYYG0KpfIbw" guid="-gd7zgxde1M1Tw9XQyOYTWg">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LKc8SC7qHqfvXJ5m3YwpJw" name="work_items_list,_mxNpgyAuEeCaxPnRDErJGw" guid="-LKc8SC7qHqfvXJ5m3YwpJw">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zrKYel7Yd5xQMaZiHfNzPw" name="assess_requirement_consistency,_6eZS0EqAEeC4KeC0o100mA" guid="-zrKYel7Yd5xQMaZiHfNzPw">
    <keyConsiderations>The requirements tend to degrade over time as they evolve. Periodic assessment can be&amp;nbsp;performed once per iteration or&#xD;
milestone.</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-c8adLLX96oRmFwbb7xR6BQ" name="requirements_attributes,_6eZS0UqAEeC4KeC0o100mA" guid="-c8adLLX96oRmFwbb7xR6BQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6I4WmPq4mltgQe3CzLm07g" name="requirements_traceability,_6eZS00qAEeC4KeC0o100mA" guid="-6I4WmPq4mltgQe3CzLm07g">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jKTTvvbK7ZsiiPHkAUkUDg" name="work_items_list,_UGugUSAuEeCaxPnRDErJGw" guid="-jKTTvvbK7ZsiiPHkAUkUDg">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Zi3x9TfiwfU93BvzuCgsfQ" name="risk_list,_UGugVyAuEeCaxPnRDErJGw" guid="-Zi3x9TfiwfU93BvzuCgsfQ">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9Acg6sgLeceL-i9a-LlwFg" name="plan_iteration_project,_PCKKEFGNEeCTkLy-ZjLOXQ" guid="-9Acg6sgLeceL-i9a-LlwFg">
    <keyConsiderations>&lt;p>&#xD;
    While planning the iteration at the project level, consider doing the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Ensure that the iteration work effort rolled up from each sub team corresponds to a reasonable amount of work for&#xD;
        the iteration, based on each sub team’s previous velocity.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cRAVquNR0TgQ6o7uwtf_cg" name="iteration_plan_project,_PCKKEVGNEeCTkLy-ZjLOXQ" guid="-cRAVquNR0TgQ6o7uwtf_cg">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6k0OCTLiTNLoOZbMlTeN5Q" name="plan_the_project,_Xb74cFGNEeCTkLy-ZjLOXQ" guid="-6k0OCTLiTNLoOZbMlTeN5Q">
    <keyConsiderations>&lt;p>&#xD;
    Gain agreement with stakeholders and the rest of the project team regarding the order of objectives and the duration of&#xD;
    the project. Make adjustments as&amp;nbsp;necessary.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>Developing the project plan provides an opportunity for the team to agree on project scope, objectives, initial timeframe,&#xD;
and deliverables. It allows the team to begin demonstrating self-organization by defining success criteria and work&#xD;
practices to be used. Collaboration and consensus by all key project participants is the goal, but the role responsible for&#xD;
this task must ensure that everybody is committed to the plan.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9XrWHf4-37u4bz4y0tbQ_A" name="project_plan,_Xb74dVGNEeCTkLy-ZjLOXQ" guid="-9XrWHf4-37u4bz4y0tbQ_A">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in&#xD;
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it&#xD;
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and&#xD;
    their milestones.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect&#xD;
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of&#xD;
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the&#xD;
    project.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JDDyhOH5L31NezJ-9afGdA" name="assess_results,_VmepYHpjEeCpY4uvD46atQ" guid="-JDDyhOH5L31NezJ-9afGdA">
    <refinedDescription>Coordinate the assessment and discuss with the team how the iteration results will be best presented to stakeholders, so&#xD;
that they can learn as much about the solution as possible. Listen to what the team has to say about what went wrong (and&#xD;
what went right) during the iteration. This knowledge will help everybody make informed decisions about the next iteration&#xD;
planning, and determine the best course of action for the project. This task is performed at the end of every iteration&#xD;
until the end of the project.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9UjJ9ItHQJCR3dfyoRIbPQ" name="plan_iteration_project,_sc31UFDBEeCOOdX2nygdtA" guid="-9UjJ9ItHQJCR3dfyoRIbPQ"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EUQTF0RH1iy5sH5G6MlKGw" name="plan_the_project,_JuTYICAnEeCaxPnRDErJGw" guid="-EUQTF0RH1iy5sH5G6MlKGw">
    <keyConsiderations>&lt;p>&#xD;
    Gain agreement with stakeholders and the rest of the project team regarding the order of objectives and the duration of&#xD;
    the project. Make adjustments as&amp;nbsp;necessary.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>Developing the project plan provides an opportunity for the team to agree on project scope, objectives, initial timeframe,&#xD;
and deliverables. It allows the team to begin demonstrating self-organization by defining success criteria and work&#xD;
practices to be used. Collaboration and consensus by all key project participants is the goal, but the role responsible for&#xD;
this task must ensure that everybody is committed to the plan.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9qpW-EbZbVZ4OdDze04UvQ" name="user_support_specs,_etfYwXqFEeCpF7mHST7Jlw" guid="-9qpW-EbZbVZ4OdDze04UvQ">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ENA-R68E9_RdaIOnhnRVag" name="vision,_etfYxHqFEeCpF7mHST7Jlw" guid="-ENA-R68E9_RdaIOnhnRVag">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0q87qi0qeixaL8F4nflzUw" name="storyboard,_etpJwXqFEeCpF7mHST7Jlw" guid="-0q87qi0qeixaL8F4nflzUw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0KOaPS_9gTm-cZoDvwADwA" name="user_support_specs,_e2b5YXqFEeCpF7mHST7Jlw" guid="-0KOaPS_9gTm-cZoDvwADwA">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6116iVTAkTX2STnFFKkrxA" name="requirements_management_process_description,_e2b5ZHqFEeCpF7mHST7Jlw" guid="-6116iVTAkTX2STnFFKkrxA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XUJyXgvD-lQC2r4YRQLBIA" name="vision,_e2lDUXqFEeCpF7mHST7Jlw" guid="-XUJyXgvD-lQC2r4YRQLBIA">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uLtQrooGt8T3pbJXzDH15w" name="glossary,_e2lDVHqFEeCpF7mHST7Jlw" guid="-uLtQrooGt8T3pbJXzDH15w">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8jKjsfE8FVKvVTvrwHzJqg" name="storyboard,_e2u0UXqFEeCpF7mHST7Jlw" guid="-8jKjsfE8FVKvVTvrwHzJqg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ilsWTX-nUoYqFIErYV7bHA" name="user_role,_e2u0VHqFEeCpF7mHST7Jlw" guid="-ilsWTX-nUoYqFIErYV7bHA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Jk5j4Ykv0QS1O06WsuIjSQ" name="plan_iteration_project,_KBRL4HqGEeCpF7mHST7Jlw" guid="-Jk5j4Ykv0QS1O06WsuIjSQ">
    <keyConsiderations>&lt;p>&#xD;
    While planning the iteration at the project level, consider doing the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Ensure that the iteration work effort rolled up from each sub team corresponds to a reasonable amount of work for&#xD;
        the iteration, based on each sub team’s previous velocity.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8GkTRePO63B-bGMa_-1zlQ" name="iteration_plan_project,_KBRL4XqGEeCpF7mHST7Jlw" guid="-8GkTRePO63B-bGMa_-1zlQ">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3NSnfdhOU3AStw9E6sI7zg" name="risk_list,_KBRL43qGEeCpF7mHST7Jlw" guid="-3NSnfdhOU3AStw9E6sI7zg">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WKU9SRqhCBky4k2bW6uJVw" name="work_items_list,_KBRL6XqGEeCpF7mHST7Jlw" guid="-WKU9SRqhCBky4k2bW6uJVw">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-caoMLU_fyinglsd41qoXMw" name="user_support_specs,_fCf_cXqFEeCpF7mHST7Jlw" guid="-caoMLU_fyinglsd41qoXMw">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UCdJcNFLxlUG_Hy-u2nUSQ" name="requirements_attributes,_fCf_dHqFEeCpF7mHST7Jlw" guid="-UCdJcNFLxlUG_Hy-u2nUSQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LSiRe2hKVepRvSQCPqW4Vw" name="requirements_traceability,_fCf_d3qFEeCpF7mHST7Jlw" guid="-LSiRe2hKVepRvSQCPqW4Vw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hKpdJbsBGnJeifFUUuxPEQ" name="requirements_management_process_description,_fCf_enqFEeCpF7mHST7Jlw" guid="-hKpdJbsBGnJeifFUUuxPEQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SFmE55dC9nwYBWnu2V8NyA" name="glossary,_fCpwcXqFEeCpF7mHST7Jlw" guid="-SFmE55dC9nwYBWnu2V8NyA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ewQB93hg5N1csXa8AVyXRw" name="storyboard,_fCpwdHqFEeCpF7mHST7Jlw" guid="-ewQB93hg5N1csXa8AVyXRw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-D_GNfudoOyz81fGqYQAZMQ" name="user_role,_fCpwd3qFEeCpF7mHST7Jlw" guid="-D_GNfudoOyz81fGqYQAZMQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-esecowTtTUtXP0no90vVzQ" name="storyboard,_fFoL8XqFEeCpF7mHST7Jlw" guid="-esecowTtTUtXP0no90vVzQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GN3LQguXE7Dxax3b0a0iXQ" name="user_support_specs,_fFoL9HqFEeCpF7mHST7Jlw" guid="-GN3LQguXE7Dxax3b0a0iXQ">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Wb7R7BO0My79KuBs2tcYAg" name="requirements_attributes,_fFoL93qFEeCpF7mHST7Jlw" guid="-Wb7R7BO0My79KuBs2tcYAg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PFEFaJwUqB60NAlTa2CCKA" name="requirements_traceability,_fFoL-nqFEeCpF7mHST7Jlw" guid="-PFEFaJwUqB60NAlTa2CCKA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_NSH7-zX3K_9sIoUbVFydA" name="requirements_management_process_description,_fFoL_XqFEeCpF7mHST7Jlw" guid="-_NSH7-zX3K_9sIoUbVFydA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gS9wkEBZ7NHA3vGglGZPgQ" name="user_role,_fFx88XqFEeCpF7mHST7Jlw" guid="-gS9wkEBZ7NHA3vGglGZPgQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QFR5CpS2u7I9nUPMvwudLA" name="user_support_specs,_fNiKwXqFEeCpF7mHST7Jlw" guid="-QFR5CpS2u7I9nUPMvwudLA">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AyX_SDbt7koZT2Onl9PurQ" name="requirements_management_process_description,_fNiKxHqFEeCpF7mHST7Jlw" guid="-AyX_SDbt7koZT2Onl9PurQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BEKz29sqqoeoOP1uVxCCeg" name="vision,_fNrUsXqFEeCpF7mHST7Jlw" guid="-BEKz29sqqoeoOP1uVxCCeg">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VuItyvcWw9QXFiTcBO5bng" name="glossary,_fNrUtHqFEeCpF7mHST7Jlw" guid="-VuItyvcWw9QXFiTcBO5bng">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-as9pDzQTuHuV6wQ02hWLRA" name="storyboard,_fNrUt3qFEeCpF7mHST7Jlw" guid="-as9pDzQTuHuV6wQ02hWLRA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-e8oxpGUoSS7pszRGTAvr3A" name="user_role,_fNrUunqFEeCpF7mHST7Jlw" guid="-e8oxpGUoSS7pszRGTAvr3A">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LS_psbmzCfiORIpGLD-yXg" name="user_support_specs,_fIAxkXqFEeCpF7mHST7Jlw" guid="-LS_psbmzCfiORIpGLD-yXg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wAWMNidRWh9vwcu6IVOyKA" name="requirements_attributes,_fIAxlHqFEeCpF7mHST7Jlw" guid="-wAWMNidRWh9vwcu6IVOyKA">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xNIEqInhhDMvqiY48gjirA" name="requirements_traceability,_fIAxl3qFEeCpF7mHST7Jlw" guid="-xNIEqInhhDMvqiY48gjirA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CNZO9cEpyh3T9f9qWGmswQ" name="requirements_management_process_description,_fIAxmnqFEeCpF7mHST7Jlw" guid="-CNZO9cEpyh3T9f9qWGmswQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hAyUQctwkf-Zoz66RHHG3Q" name="vision,_fIKikXqFEeCpF7mHST7Jlw" guid="-hAyUQctwkf-Zoz66RHHG3Q">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-K6yNF_6Nto98CJt5Gb4vYg" name="glossary,_fIKilHqFEeCpF7mHST7Jlw" guid="-K6yNF_6Nto98CJt5Gb4vYg">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zyk3MRdE3RmlNal30qOXkw" name="storyboard,_fIKil3qFEeCpF7mHST7Jlw" guid="-zyk3MRdE3RmlNal30qOXkw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-h3oka9ROpgzn9zb26QdcFQ" name="user_role,_fIKimnqFEeCpF7mHST7Jlw" guid="-h3oka9ROpgzn9zb26QdcFQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zd97-hi473KM2uxckBBg4A" name="user_support_specs,_fZAa8XqFEeCpF7mHST7Jlw" guid="-zd97-hi473KM2uxckBBg4A">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ddFmRaCCtFXfNXWTRRDGaA" name="requirements_attributes,_fZAa9HqFEeCpF7mHST7Jlw" guid="-ddFmRaCCtFXfNXWTRRDGaA">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--YKycTMILu_0NUYqAEsFRg" name="requirements_traceability,_fZAa93qFEeCpF7mHST7Jlw" guid="--YKycTMILu_0NUYqAEsFRg">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xxQ9LNp072F3V9NaP9YdgA" name="requirements_management_process_description,_fZAa-nqFEeCpF7mHST7Jlw" guid="-xxQ9LNp072F3V9NaP9YdgA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-h3p7iw8ki3IJZHAyBJzQAQ" name="vision,_fZJk4XqFEeCpF7mHST7Jlw" guid="-h3p7iw8ki3IJZHAyBJzQAQ">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pn8OEhdZ2SzfnzR3oMaVDA" name="glossary,_fZJk5HqFEeCpF7mHST7Jlw" guid="-pn8OEhdZ2SzfnzR3oMaVDA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-K4qSSsP_0LpLay0leW7ohw" name="storyboard,_fZJk53qFEeCpF7mHST7Jlw" guid="-K4qSSsP_0LpLay0leW7ohw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-osMzcuCxAF3yVaL7UQ3uzw" name="user_role,_fZJk6nqFEeCpF7mHST7Jlw" guid="-osMzcuCxAF3yVaL7UQ3uzw">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8MZ8myzrhjXesH1XMTsRUg" name="user_support_specs,_fc4OUXqFEeCpF7mHST7Jlw" guid="-8MZ8myzrhjXesH1XMTsRUg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GY8sfiMYU0qAywFhD1u8kw" name="requirements_attributes,_fdB_UXqFEeCpF7mHST7Jlw" guid="-GY8sfiMYU0qAywFhD1u8kw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-__YS7hlN9vp3N62SG0mjHA" name="requirements_traceability,_fdB_VHqFEeCpF7mHST7Jlw" guid="-__YS7hlN9vp3N62SG0mjHA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nwmDHdXXeCp8opOSmvKoGw" name="requirements_management_process_description,_fdB_V3qFEeCpF7mHST7Jlw" guid="-nwmDHdXXeCp8opOSmvKoGw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7S6s_wSa7GgvsSKqzqmo9Q" name="glossary,_fdB_WnqFEeCpF7mHST7Jlw" guid="-7S6s_wSa7GgvsSKqzqmo9Q">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jrx0RoL_TOGwV9XIVw3gOQ" name="storyboard,_fdB_XXqFEeCpF7mHST7Jlw" guid="-jrx0RoL_TOGwV9XIVw3gOQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uZXKHASzpxdJLRSUnPuA5Q" name="user_role,_fdLJQXqFEeCpF7mHST7Jlw" guid="-uZXKHASzpxdJLRSUnPuA5Q">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-74DIYrarDDT1WJdRkZ5SdA" name="user_support_specs,_frocAXqFEeCpF7mHST7Jlw" guid="-74DIYrarDDT1WJdRkZ5SdA">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IHiHlt3NA-kIsMOppZUNaA" name="requirements_management_process_description,_frocBHqFEeCpF7mHST7Jlw" guid="-IHiHlt3NA-kIsMOppZUNaA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--Y-ho3w9huXOIUzR3aIx2Q" name="vision,_frocB3qFEeCpF7mHST7Jlw" guid="--Y-ho3w9huXOIUzR3aIx2Q">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2y17vq4H6Vatz1Gc12rSNA" name="glossary,_frxl8XqFEeCpF7mHST7Jlw" guid="-2y17vq4H6Vatz1Gc12rSNA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9Udc1a1pBylxWN0Rjn_SRg" name="storyboard,_frxl9HqFEeCpF7mHST7Jlw" guid="-9Udc1a1pBylxWN0Rjn_SRg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8c4Ki3B3ItGmE2RcVutX_w" name="user_role,_frxl93qFEeCpF7mHST7Jlw" guid="-8c4Ki3B3ItGmE2RcVutX_w">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9-umt3wPMeDaxkX2pLiuoA" name="user_support_specs,_fh8UgXqFEeCpF7mHST7Jlw" guid="-9-umt3wPMeDaxkX2pLiuoA">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dFK02YSmRLRqsBcliFwLrg" name="requirements_attributes,_fh8UhHqFEeCpF7mHST7Jlw" guid="-dFK02YSmRLRqsBcliFwLrg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Lsv6XHqNOJmyxB8WzGk-TA" name="requirements_traceability,_fiGFgXqFEeCpF7mHST7Jlw" guid="-Lsv6XHqNOJmyxB8WzGk-TA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Amw9Q08Af2TwBBn7OuwtVw" name="requirements_management_process_description,_fiGFhHqFEeCpF7mHST7Jlw" guid="-Amw9Q08Af2TwBBn7OuwtVw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KOBmOSmIUBeQYIVtnIhMxw" name="vision,_fiGFh3qFEeCpF7mHST7Jlw" guid="-KOBmOSmIUBeQYIVtnIhMxw">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oqitsUktyYAL1Sklcq7XIg" name="glossary,_fiGFinqFEeCpF7mHST7Jlw" guid="-oqitsUktyYAL1Sklcq7XIg">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jm9A3npf1bgyeTy4hYD6jg" name="storyboard,_fiGFjXqFEeCpF7mHST7Jlw" guid="-jm9A3npf1bgyeTy4hYD6jg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-v_xoW4YvbQAJjzs9eyVWIA" name="user_role,_fiPPcXqFEeCpF7mHST7Jlw" guid="-v_xoW4YvbQAJjzs9eyVWIA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LaYjjvX7TVzY99x-weqvFQ" name="project_manager,_NDltYXqGEeCpF7mHST7Jlw" guid="-LaYjjvX7TVzY99x-weqvFQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver&amp;nbsp;the&#xD;
        desired&amp;nbsp;result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7aHU1kAHMNS-LI6CwJsmWQ" name="user_support_specs,_ND4oVHqGEeCpF7mHST7Jlw" guid="-7aHU1kAHMNS-LI6CwJsmWQ">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JnQo1eLM69myC1EmK_f7uw" name="requirements_attributes,_ND4oV3qGEeCpF7mHST7Jlw" guid="-JnQo1eLM69myC1EmK_f7uw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3KdISZ_RuL2y_s2bvItl3g" name="requirements_traceability,_NEByQXqGEeCpF7mHST7Jlw" guid="-3KdISZ_RuL2y_s2bvItl3g">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types â€&quot; or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-h-epqZg1a8CZcJ8AW00f4g" name="requirements_management_process_description,_NEByRHqGEeCpF7mHST7Jlw" guid="-h-epqZg1a8CZcJ8AW00f4g">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_YSoKP9W2BbRxKRjv5DIwg" name="vision,_NEByR3qGEeCpF7mHST7Jlw" guid="-_YSoKP9W2BbRxKRjv5DIwg">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wwQT6WfXi_saq9Zn8StjSQ" name="glossary,_NEBySnqGEeCpF7mHST7Jlw" guid="-wwQT6WfXi_saq9Zn8StjSQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uqJSKkAhYtj0xkTsEDyW8g" name="storyboard,_NEByTXqGEeCpF7mHST7Jlw" guid="-uqJSKkAhYtj0xkTsEDyW8g">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7sr4qoxupLCT32ot3cjKIA" name="user_role,_NEByUHqGEeCpF7mHST7Jlw" guid="-7sr4qoxupLCT32ot3cjKIA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:ActivityDescription xmi:id="-ujav5ykRDC5L_keXh30D5Q" name="Iteration 0,_Iis_AFC_EeCOOdX2nygdtA" guid="-ujav5ykRDC5L_keXh30D5Q">
    <keyConsiderations>An initial high level vision is provided by senior management or the project sponsor so&amp;nbsp;the project&amp;nbsp;can start,&#xD;
then the&amp;nbsp;&quot;inspect, adapt, and setup&quot;&amp;nbsp;activity can happen before the vision is refined in the &quot;plan release&quot;&#xD;
activity.</keyConsiderations>
  </org.eclipse.epf.uma:ActivityDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rQRfL4U7UfSfJ8XiVVQsfw" name="build_procedures,_ppME9Yb0EeCBiMyLYuRxQQ" guid="-rQRfL4U7UfSfJ8XiVVQsfw">
    <keyConsiderations>&lt;p>&#xD;
    This is a very straightforward work product.&amp;nbsp; Write the build procedures so any team member can follow them.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If security is an issue, ensure that the team knows where and how to get the password.&amp;nbsp; One solution is letting&#xD;
    the project manager keep passwords in a sealed envelope in a secure location. However, the proper people must be aware&#xD;
    of how to gain access to this location, if necessary.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You can test the Build Procedures by having a team member unfamiliar with the process walk through the&#xD;
    procedures.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>This artifact&amp;nbsp;may include such items as which files are required, which links must be in place, which libraries are&#xD;
accessed, the sequence of steps required to generate the system, decisions and rationale for all integration procedures, or&#xD;
any required passwords.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UJjlLnDfp_4pwoSqYmQXoA" name="build_procedures,_lEX184b0EeCBiMyLYuRxQQ" guid="-UJjlLnDfp_4pwoSqYmQXoA">
    <keyConsiderations>&lt;p>&#xD;
    This is a very straightforward work product.&amp;nbsp; Write the build procedures so any team member can follow them.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If security is an issue, ensure that the team knows where and how to get the password.&amp;nbsp; One solution is letting&#xD;
    the project manager keep passwords in a sealed envelope in a secure location. However, the proper people must be aware&#xD;
    of how to gain access to this location, if necessary.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You can test the Build Procedures by having a team member unfamiliar with the process walk through the&#xD;
    procedures.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>This artifact&amp;nbsp;may include such items as which files are required, which links must be in place, which libraries are&#xD;
accessed, the sequence of steps required to generate the system, decisions and rationale for all integration procedures, or&#xD;
any required passwords.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UtWo3-XksejYoZngKvDazA" name="implementation,_toS-0Yb0EeCBiMyLYuRxQQ" guid="-UtWo3-XksejYoZngKvDazA">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RpcgQ3km5AKGKcv73GUKGA" name="build_procedures,_toS-04b0EeCBiMyLYuRxQQ" guid="-RpcgQ3km5AKGKcv73GUKGA">
    <keyConsiderations>&lt;p>&#xD;
    This is a very straightforward work product.&amp;nbsp; Write the build procedures so any team member can follow them.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If security is an issue, ensure that the team knows where and how to get the password.&amp;nbsp; One solution is letting&#xD;
    the project manager keep passwords in a sealed envelope in a secure location. However, the proper people must be aware&#xD;
    of how to gain access to this location, if necessary.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You can test the Build Procedures by having a team member unfamiliar with the process walk through the&#xD;
    procedures.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>This artifact&amp;nbsp;may include such items as which files are required, which links must be in place, which libraries are&#xD;
accessed, the sequence of steps required to generate the system, decisions and rationale for all integration procedures, or&#xD;
any required passwords.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-y9Sd26xD9S6vcnztrSFEOA" name="iteration_plan_team,_pQPXcYcKEeCvVf2DVSp5QQ" guid="-y9Sd26xD9S6vcnztrSFEOA">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, this artifact describes the&amp;nbsp;sub team's objectives, work assignments, and evaluation&#xD;
    criteria for the iteration, refining the goals from the&amp;nbsp;project leadership team&amp;nbsp;iteration plan that apply to&#xD;
    the sub team.&amp;nbsp;This artifact&amp;nbsp;is created by the sub team lead and reviewed by the project manager.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2cn8t7ec7r4qQqrjK8lMqQ" name="assess_plan_coverage,_S5ciUIcPEeCvVf2DVSp5QQ" guid="-2cn8t7ec7r4qQqrjK8lMqQ">
    <refinedDescription>Verify that the following conditions are true: &#xD;
&lt;ul class=&quot;ul&quot;>&#xD;
    &lt;li class=&quot;li&quot;>&#xD;
        Each requirement has an implementation story and a test case linked to it&#xD;
    &lt;/li>&#xD;
    &lt;li class=&quot;li&quot;>&#xD;
        Each story is linked to a requirement and a test case&#xD;
    &lt;/li>&#xD;
    &lt;li class=&quot;li&quot;>&#xD;
        Each test case is linked to a story and a requirement&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_W2MVcDhMQ_MFUVk2oEIUQ" name="project_manager,_S5ciUYcPEeCvVf2DVSp5QQ" guid="-_W2MVcDhMQ_MFUVk2oEIUQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hKjAzORLyY9bOmjmsRzfxw" name="team_lead,_S5ciU4cPEeCvVf2DVSp5QQ" guid="-hKjAzORLyY9bOmjmsRzfxw">
    <refinedDescription>&lt;p>&#xD;
    This role leads a defined group of people in achieving a specific objective, whether the activity is time-constrained&#xD;
    (such as in a sub-project or task force) or continuous (as in operations).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role does not have the same responsibilities nor authority&amp;nbsp;of other roles, such as a line manager (who has&#xD;
    budget responsibility and authority to hire or fire people) or project manager (who is accountable for the whole&#xD;
    project success). Thus, this role's responsibilities&amp;nbsp;typically focus on leading the technical aspects of the work.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-b2jm1IXVmGgWS3D0BwiPww" name="tester,_S5ciWYcPEeCvVf2DVSp5QQ" guid="-b2jm1IXVmGgWS3D0BwiPww">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XUrtfLm-9C-DSQcXLiOZ7g" name="test_case,_S5ciXYcPEeCvVf2DVSp5QQ" guid="-XUrtfLm-9C-DSQcXLiOZ7g">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6F0tk0P0g3IlrpJV_fBHzQ" name="assess_plan_coverage,_a5AZ4IcPEeCvVf2DVSp5QQ" guid="-6F0tk0P0g3IlrpJV_fBHzQ">
    <refinedDescription>Verify that the following conditions are true: &#xD;
&lt;ul class=&quot;ul&quot;>&#xD;
    &lt;li class=&quot;li&quot;>&#xD;
        Each requirement has an implementation story and a test case linked to it&#xD;
    &lt;/li>&#xD;
    &lt;li class=&quot;li&quot;>&#xD;
        Each story is linked to a requirement and a test case&#xD;
    &lt;/li>&#xD;
    &lt;li class=&quot;li&quot;>&#xD;
        Each test case is linked to a story and a requirement&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XJL8BDfgtEyyWPWFmtjz1Q" name="project_manager,_a5AZ4YcPEeCvVf2DVSp5QQ" guid="-XJL8BDfgtEyyWPWFmtjz1Q">
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="---8VQwvIflIkwLjAK63KKw" name="team_lead,_a5AZ44cPEeCvVf2DVSp5QQ" guid="---8VQwvIflIkwLjAK63KKw">
    <refinedDescription>&lt;p>&#xD;
    This role leads a defined group of people in achieving a specific objective, whether the activity is time-constrained&#xD;
    (such as in a sub-project or task force) or continuous (as in operations).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role does not have the same responsibilities nor authority&amp;nbsp;of other roles, such as a line manager (who has&#xD;
    budget responsibility and authority to hire or fire people) or project manager (who is accountable for the whole&#xD;
    project success). Thus, this role's responsibilities&amp;nbsp;typically focus on leading the technical aspects of the work.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bbzq1ur9LJzmluHF9ikdUA" name="tester,_a5AZ6YcPEeCvVf2DVSp5QQ" guid="-bbzq1ur9LJzmluHF9ikdUA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9Jh25SIbYGV3PM2ki8l-Yw" name="work_items_list,_a5AZ7YcPEeCvVf2DVSp5QQ" guid="-9Jh25SIbYGV3PM2ki8l-Yw">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-U3_Ek2qyuq5l7UPULQCc2A" name="test_case,_a5AZ74cPEeCvVf2DVSp5QQ" guid="-U3_Ek2qyuq5l7UPULQCc2A">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DUdGHWUWm6KigrzmJiK2mA" name="envision_the_arch,_eX_YQJ3DEeCIOK_yM-r6bg" guid="-DUdGHWUWm6KigrzmJiK2mA">
    <keyConsiderations>&lt;p>&#xD;
    It&amp;nbsp;is important to reduce the complexity of the&amp;nbsp;solution by raising the levels of abstraction.&amp;nbsp;For more&#xD;
    information, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/guidelines/abstract_away_complexity_DBF13AE6.html&quot;&#xD;
    guid=&quot;_we3F4ACpEdu8m4dIntu6jA&quot;>Guideline: Abstract Away Complexity&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is critical that this task be performed collaboratively with active involvement of other team members and project&#xD;
    stakeholders so that consensus and common understanding is reached. It is particularly vital to involve the&#xD;
    developer(s) throughout this task. The architecture effort&amp;nbsp;is about providing leadership and coordination of the&#xD;
    technical work rather than putting in a solo performance.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This task focuses on envisioning the initial architecture and outlining the&amp;nbsp;architectural decisions that will&#xD;
    guide development and testing. It relies on gathering experience gained in similar systems or problem domains to&#xD;
    constrain and focus the architecture so that effort is not wasted in re-inventing architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The results are captured for future reference and are communicated across the team. It is important that the team has&#xD;
    enough information to understand the technical approach being taken.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The architecture evolves organically over time by outlining and refining portions of it. A few people get together in a&#xD;
    room and sketch out what they think the architecture will be. This envisioning effort sets the foundation for&#xD;
    prototyping. If the solution is similar to a previously produced solution (or is a well-known solution domain), then it&#xD;
    will probably be good enough to reference that example as evidence of the feasibility of the approach. In some cases,&#xD;
    it may be necessary to develop one or more prototypes to validate some of the decisions or clarify some of the&#xD;
    requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The work done here does not seek to produce a detailed and comprehensive technical specification for the system.&#xD;
    Rather, the approach should be to decide the overall technical approach at a high level. The conclusion of this work&#xD;
    should produce just enough information to communicate the architecture to the team, and to demonstrate its viability to&#xD;
    the customer. This allows the project to move forward, enabling you to refine and baseline the architecture.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DcnDKmIxEQgNPUcYvUf52Q" name="architecture_notebook,_eYSTMJ3DEeCIOK_yM-r6bg" guid="-DcnDKmIxEQgNPUcYvUf52Q">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wxks0uWNXNngWQXmkTrK-A" name="refine_the_arch,_YhRAAJ3EEeCIOK_yM-r6bg" guid="-wxks0uWNXNngWQXmkTrK-A">
    <keyConsiderations>&lt;p>&#xD;
    It is important to continue to reduce the complexity of the&amp;nbsp;solution by raising the levels of abstraction.&amp;nbsp;&#xD;
    For more information, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/guidelines/abstract_away_complexity_DBF13AE6.html&quot;&#xD;
    guid=&quot;_we3F4ACpEdu8m4dIntu6jA&quot;>Guideline: Abstract Away Complexity&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Continue the collaboration with the whole&amp;nbsp;team on the refining of the architecture in order to promote consensus&#xD;
    and a common understanding of the overall solution. The architect should be working to coordinate and guide the&#xD;
    technical activities of the team rather than doing all the work alone.&amp;nbsp;Place special emphasis&amp;nbsp;on&#xD;
    involving&amp;nbsp;the developer(s) throughout this task since it's the developed solution that will prove out the&#xD;
    architecture and may result in refinements to the architecture documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Ensure that those who need to act upon the architectural work&amp;nbsp;understand&amp;nbsp;it and are able to work with&#xD;
    it.&amp;nbsp;Make sure that the description of the architecture clearly conveys not only the solution but also the&#xD;
    motivation and objectives related to the&amp;nbsp;decisions that have been made in shaping the architecture. This will make&#xD;
    it easier for others to understand the architecture and to adapt it over time.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You can communicate your decisions as many ways as you wish.&amp;nbsp; For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Publication of&amp;nbsp;reference source code&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Publication of&amp;nbsp;reference models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Publication of&amp;nbsp;software architecture documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Formal&amp;nbsp;presentations of the material&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Informal walkthroughs of the architecture&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This task&amp;nbsp;builds upon the outlined architecture and makes concrete and unambiguous architectural decisions to&#xD;
    support development.&amp;nbsp; It takes into&amp;nbsp;account any design and implementation work products that have been&#xD;
    developed so far.&amp;nbsp; In other words, the architecture evolves as the solution is designed and implemented, and the&#xD;
    architecture documentation is updated to reflect any changes made during development. This is&amp;nbsp;a key,&amp;nbsp;since&#xD;
    the actual implementation is the only real &quot;proof&quot; that the software architecture is viable and provides the definitive&#xD;
    basis for validating the suitability&amp;nbsp;of the architecture.&amp;nbsp; For more information, see &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/executable_arch_D4E68CBD.html&quot;&#xD;
    guid=&quot;_O1kAANvfEduv2KOT-Teh6w&quot;>Concept: Executable Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The results are captured for future reference and are communicated across the team.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1k2cOcj5TCCc3tN9RMoAIA" name="architecture_notebook,_YhRAA53EEeCIOK_yM-r6bg" guid="-1k2cOcj5TCCc3tN9RMoAIA">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xD3xcB7537sQD9hsz7HYzA" name="develop_technical_vision,_qC_EsHK3EeGJVYNWjBS93w" guid="-xD3xcB7537sQD9hsz7HYzA">
    <keyConsiderations>&lt;p>&#xD;
    Use-case modeling&amp;nbsp;is one technique that can prove useful in defining the system boundaries and system behavior.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9fjkaeAog1XYznTLkINYPw" name="vision,_qC_rwHK3EeGJVYNWjBS93w" guid="-9fjkaeAog1XYznTLkINYPw">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-V9eshs79zCEcLmS1pl9cuA" name="glossary,_qC_rwnK3EeGJVYNWjBS93w" guid="-V9eshs79zCEcLmS1pl9cuA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GbI8QZPfoRui3Bt5AkXSsQ" name="project_defined_process,__7oswOF1EeGLhp23ohzHSQ" guid="-GbI8QZPfoRui3Bt5AkXSsQ">
    <refinedDescription>&lt;p>&#xD;
    A project process typically describes or references the following items:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        what organizational processes and policies must be adhered to.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what standard process, if any, is being adopted by the project.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        any tailoring of the standard process, or deviations from policy mandates.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        rationale for tailoring and deviations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        approvals for deviations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        which work products are reviewed at which milestones, and their level of completion.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        guidelines and information that the project wants to use in addition to the information contained in the main.&#xD;
        process&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what reviews will be performed, and their level of formality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what approvals are required, by whom, and when.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2KupvRdXsFphtXa7ZoMPHg" name="develop_technical_vision,_15yX4OF2EeGLhp23ohzHSQ" guid="-2KupvRdXsFphtXa7ZoMPHg">
    <keyConsiderations>&lt;p>&#xD;
    Use-case modeling&amp;nbsp;is one technique that can prove useful in defining the system boundaries and system behavior.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xO3yTlQ_vjmKzbDSxTm8bg" name="vision,_15y-8OF2EeGLhp23ohzHSQ" guid="-xO3yTlQ_vjmKzbDSxTm8bg">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-x4zIGNlbdEKGXLHpFW2vPA" name="glossary,_15y-8uF2EeGLhp23ohzHSQ" guid="-x4zIGNlbdEKGXLHpFW2vPA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YrOy8d2n-d_0ulv2LeG-Ig" name="implementation,_acCM0eF3EeGLhp23ohzHSQ" guid="-YrOy8d2n-d_0ulv2LeG-Ig">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kx0dk7W1HxTMLGBCiqeO2A" name="build_procedures,_acCM0-F3EeGLhp23ohzHSQ" guid="-kx0dk7W1HxTMLGBCiqeO2A">
    <keyConsiderations>&lt;p>&#xD;
    This is a very straightforward work product.&amp;nbsp; Write the build procedures so any team member can follow them.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If security is an issue, ensure that the team knows where and how to get the password.&amp;nbsp; One solution is letting&#xD;
    the project manager keep passwords in a sealed envelope in a secure location. However, the proper people must be aware&#xD;
    of how to gain access to this location, if necessary.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You can test the Build Procedures by having a team member unfamiliar with the process walk through the&#xD;
    procedures.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>This artifact&amp;nbsp;may include such items as which files are required, which links must be in place, which libraries are&#xD;
accessed, the sequence of steps required to generate the system, decisions and rationale for all integration procedures, or&#xD;
any required passwords.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kNoE1Ky3tX4e6PcwVAfFhA" name="build,_acCM1eF3EeGLhp23ohzHSQ" guid="-kNoE1Ky3tX4e6PcwVAfFhA">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zHoJSfwIHUzjzbDO8-WmTA" name="project_defined_process,_k6TigOF3EeGLhp23ohzHSQ" guid="-zHoJSfwIHUzjzbDO8-WmTA">
    <refinedDescription>&lt;p>&#xD;
    A project process typically describes or references the following items:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        what organizational processes and policies must be adhered to.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what standard process, if any, is being adopted by the project.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        any tailoring of the standard process, or deviations from policy mandates.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        rationale for tailoring and deviations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        approvals for deviations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        which work products are reviewed at which milestones, and their level of completion.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        guidelines and information that the project wants to use in addition to the information contained in the main.&#xD;
        process&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what reviews will be performed, and their level of formality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what approvals are required, by whom, and when.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VcBqPk8sBBocjFvKnNkvOQ" name="iteration_plan_project,_mleq4eF3EeGLhp23ohzHSQ" guid="-VcBqPk8sBBocjFvKnNkvOQ">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yH5YlFaaypxmymwemgBjsQ" name="work_items_list,_mleq4-F3EeGLhp23ohzHSQ" guid="-yH5YlFaaypxmymwemgBjsQ">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ko5TU2t9GzwIYtzDwiHmBA" name="iteration_plan_team,_uZbdceF5EeGLhp23ohzHSQ" guid="-Ko5TU2t9GzwIYtzDwiHmBA">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, this artifact describes the&amp;nbsp;sub team's objectives, work assignments, and evaluation&#xD;
    criteria for the iteration, refining the goals from the&amp;nbsp;project leadership team&amp;nbsp;iteration plan that apply to&#xD;
    the sub team.&amp;nbsp;This artifact&amp;nbsp;is created by the sub team lead and reviewed by the project manager.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>This artifact has the same attributes and relationships as &lt;a class=&quot;elementLink&quot;&#xD;
href=&quot;./../../practice.mgmt.team_of_teams.base-ibm/workproducts/iteration_plan_project_AC0B4E4F.html&quot;&#xD;
guid=&quot;_KHf8IFAHEeCk-Pay6xRCzA&quot;>Iteration Plan (Project Level)&lt;/a>, limited to the team's scope.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gbgKU9GKKToT8M-FQn8FbA" name="process_engineer,_06DVAeF9EeGLhp23ohzHSQ" guid="-gbgKU9GKKToT8M-FQn8FbA">
    <refinedDescription>&lt;p>&#xD;
    This role plays an important part of any management team of a software project. The role is responsible for&#xD;
    all process related aspects of the project, such as :&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Tailoring the process to match the specific needs of the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Educating and mentoring project members on process related issues.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that valuable project experience is harvested and fed back into the process.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IO1LZMluxxIf0jnHtxwZLA" name="architect,_06GYUeF9EeGLhp23ohzHSQ" guid="-IO1LZMluxxIf0jnHtxwZLA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PaTiYjlxFD27iyig87saaQ" name="tester,_06HmceF9EeGLhp23ohzHSQ" guid="-PaTiYjlxFD27iyig87saaQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jImjf8XgSFjnQMXe_woExg" name="it_services_strategy,_06NtEeF9EeGLhp23ohzHSQ" guid="-jImjf8XgSFjnQMXe_woExg">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CyfCFwMwO1M7ljGv6E814w" name="software_dist_plan,_06O7MeF9EeGLhp23ohzHSQ" guid="-CyfCFwMwO1M7ljGv6E814w">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6-8hXEbNltCZHMBymqafZA" name="architecture_notebook,_06PiQeF9EeGLhp23ohzHSQ" guid="-6-8hXEbNltCZHMBymqafZA">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tg1n0k31jym7W5W6-8Fi4Q" name="user_support_specs,_06eLweF9EeGLhp23ohzHSQ" guid="-tg1n0k31jym7W5W6-8Fi4Q">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8yEan1vbL2GHgM4-sv6oxQ" name="requirements_attributes.add,_06fZ4eF9EeGLhp23ohzHSQ" guid="-8yEan1vbL2GHgM4-sv6oxQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-759T2qmfu4CYM8817SrIiQ" name="requirements_traceability,_06goAeF9EeGLhp23ohzHSQ" guid="-759T2qmfu4CYM8817SrIiQ">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ufiujxub27ry5kMvhIbqJw" name="requirements_management_process_description,_06h2IeF9EeGLhp23ohzHSQ" guid="-ufiujxub27ry5kMvhIbqJw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qKdoObEDfBJ6Q2azalDFoA" name="vision,_06idMeF9EeGLhp23ohzHSQ" guid="-qKdoObEDfBJ6Q2azalDFoA">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hN5Bg4O1BeFYkauI6fUGMQ" name="glossary,_06kSYeF9EeGLhp23ohzHSQ" guid="-hN5Bg4O1BeFYkauI6fUGMQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qg-gy6dp7eZX8yFguKZwgA" name="storyboard,_06mHkeF9EeGLhp23ohzHSQ" guid="-qg-gy6dp7eZX8yFguKZwgA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tLW3Yav74kN0wkGSQkq9oQ" name="user_role,_06n8weF9EeGLhp23ohzHSQ" guid="-tLW3Yav74kN0wkGSQkq9oQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--BtdcC77MrK6GPPlAdjrug" name="build,_07A-UeF9EeGLhp23ohzHSQ" guid="--BtdcC77MrK6GPPlAdjrug">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XRiLmhYsdLdh6MI4fPgGEQ" name="design,_07CMceF9EeGLhp23ohzHSQ" guid="-XRiLmhYsdLdh6MI4fPgGEQ">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uB8jC_HyelmQg7I9FTmmSw" name="developer_test,_07DakeF9EeGLhp23ohzHSQ" guid="-uB8jC_HyelmQg7I9FTmmSw">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ep1uaWmtLMM8FCQ8tdegWA" name="implementation,_07FPweF9EeGLhp23ohzHSQ" guid="-Ep1uaWmtLMM8FCQ8tdegWA">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lDCk5f0Ij-bKn6b6uHregQ" name="test_case,_07T5QeF9EeGLhp23ohzHSQ" guid="-lDCk5f0Ij-bKn6b6uHregQ">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QiMjLJg9znb2cHjE2InFAQ" name="architect,_0_GNEeF9EeGLhp23ohzHSQ" guid="-QiMjLJg9znb2cHjE2InFAQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-380vTqo8EAEYEyfwREqDIg" name="tester,_0_J3ceF9EeGLhp23ohzHSQ" guid="-380vTqo8EAEYEyfwREqDIg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9RobTRNcAGynrRBR99io6Q" name="user_support_specs,_0_RMMeF9EeGLhp23ohzHSQ" guid="-9RobTRNcAGynrRBR99io6Q">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-c_uH-AOKO3V07wSE7GcxSg" name="vision,_0_ToceF9EeGLhp23ohzHSQ" guid="-c_uH-AOKO3V07wSE7GcxSg">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FKhLYfkNGrS01rL4PZ6a-A" name="storyboard,_0_WEseF9EeGLhp23ohzHSQ" guid="-FKhLYfkNGrS01rL4PZ6a-A">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-G1ySoVJB4i6T_956w1b1IQ" name="test_case,_0_vtUeF9EeGLhp23ohzHSQ" guid="-G1ySoVJB4i6T_956w1b1IQ">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rWG9Amspw2dfyxQCHN6vaA" name="stakeholder_request.add,_1ABaIeF9EeGLhp23ohzHSQ" guid="-rWG9Amspw2dfyxQCHN6vaA">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ajtnUrSIKxRfhi_jHxfUuA" name="it_services_strategy,_1AIu4eF9EeGLhp23ohzHSQ" guid="-ajtnUrSIKxRfhi_jHxfUuA">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kINkgRbj4RefWxDlg26zyw" name="software_dist_plan,_1AKkEeF9EeGLhp23ohzHSQ" guid="-kINkgRbj4RefWxDlg26zyw">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FSYVZva5xqEpovGDvXN_dA" name="architecture_notebook,_1ANAUeF9EeGLhp23ohzHSQ" guid="-FSYVZva5xqEpovGDvXN_dA">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KR81TfmX_uXHvnwaRaKllw" name="build,_1AeGEeF9EeGLhp23ohzHSQ" guid="-KR81TfmX_uXHvnwaRaKllw">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bhVYjJUf6FqAUysdfAlgRg" name="design,_1Af7QeF9EeGLhp23ohzHSQ" guid="-bhVYjJUf6FqAUysdfAlgRg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mIlQXPUhRQOoiVjBTP8f9A" name="developer_test,_1Ai-keF9EeGLhp23ohzHSQ" guid="-mIlQXPUhRQOoiVjBTP8f9A">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OXM2NU6AfeIJf9cLr2uBJA" name="implementation,_1Ala0eF9EeGLhp23ohzHSQ" guid="-OXM2NU6AfeIJf9cLr2uBJA">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dwMmr72S2n60fkT3YOpVpw" name="user_support_specs,_1HR4seF9EeGLhp23ohzHSQ" guid="-dwMmr72S2n60fkT3YOpVpw">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SzHRqFqv1O97mGlLsalTjQ" name="requirements_management_process_description,_1HUU8eF9EeGLhp23ohzHSQ" guid="-SzHRqFqv1O97mGlLsalTjQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8JjZwSLVXfUgh7BBwbaoJA" name="vision,_1HWKIeF9EeGLhp23ohzHSQ" guid="-8JjZwSLVXfUgh7BBwbaoJA">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fooD2Ti_FebFRiVvAFSCGQ" name="glossary,_1HXYQeF9EeGLhp23ohzHSQ" guid="-fooD2Ti_FebFRiVvAFSCGQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-toQyBcKrehbyyDi4cZCg_Q" name="storyboard,_1HZNceF9EeGLhp23ohzHSQ" guid="-toQyBcKrehbyyDi4cZCg_Q">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WOjD4l4HNpMhs3vxGv25UA" name="user_role,_1HbCoeF9EeGLhp23ohzHSQ" guid="-WOjD4l4HNpMhs3vxGv25UA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2ef0LX_2OA5MIQ9ioTTOtQ" name="build,_1ID70eF9EeGLhp23ohzHSQ" guid="-2ef0LX_2OA5MIQ9ioTTOtQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3pc6c67HPYZnHTMt4FGpfQ" name="design,_1IFJ8eF9EeGLhp23ohzHSQ" guid="-3pc6c67HPYZnHTMt4FGpfQ">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-okRasPqPS7jIgcFSF9Q5Vg" name="developer_test,_1IG_IeF9EeGLhp23ohzHSQ" guid="-okRasPqPS7jIgcFSF9Q5Vg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dapHAl8cTW7q0RBPVD7GGw" name="implementation,_1IJbYeF9EeGLhp23ohzHSQ" guid="-dapHAl8cTW7q0RBPVD7GGw">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cih_vQgpusUvikhjF9cM9A" name="iteration_plan_project,_1IcWUeF9EeGLhp23ohzHSQ" guid="-cih_vQgpusUvikhjF9cM9A">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rRsL6S_G5dxEtdH5rUypJg" name="risk_list,_1IeLgeF9EeGLhp23ohzHSQ" guid="-rRsL6S_G5dxEtdH5rUypJg">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-J_jndKNu77Ocd-NVRmlDMA" name="project_manager,_08wqweF9EeGLhp23ohzHSQ" guid="-J_jndKNu77Ocd-NVRmlDMA">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SsnKRoNpReebSIAlx4lxGQ" name="architect,_082xYeF9EeGLhp23ohzHSQ" guid="-SsnKRoNpReebSIAlx4lxGQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3RBOiNT8BiDfn-CEVteCTA" name="tester,_087C0eF9EeGLhp23ohzHSQ" guid="-3RBOiNT8BiDfn-CEVteCTA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-40W1NeJeCpa5bSquYgnZvg" name="stakeholder_request.add,_09JFQeF9EeGLhp23ohzHSQ" guid="-40W1NeJeCpa5bSquYgnZvg">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cM90gGQ1TOY87MajyBZeIw" name="build,_09Py8eF9EeGLhp23ohzHSQ" guid="-cM90gGQ1TOY87MajyBZeIw">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zcGikhCMZnpckIzhyHRXtA" name="design,_09RoIeF9EeGLhp23ohzHSQ" guid="-zcGikhCMZnpckIzhyHRXtA">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-brOPfqWFFf7GcFEK_vMUbw" name="developer_test,_09TdUeF9EeGLhp23ohzHSQ" guid="-brOPfqWFFf7GcFEK_vMUbw">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JV8F52H9Ud-EbPFO_4UbXw" name="implementation,_09VSgeF9EeGLhp23ohzHSQ" guid="-JV8F52H9Ud-EbPFO_4UbXw">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HqNB9Ggjm8kH6pO19WKcrg" name="it_services_strategy,_09wwUeF9EeGLhp23ohzHSQ" guid="-HqNB9Ggjm8kH6pO19WKcrg">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UKZ6MGB3QV70rUwlgGOVrw" name="software_dist_plan,_09zMkeF9EeGLhp23ohzHSQ" guid="-UKZ6MGB3QV70rUwlgGOVrw">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AThTQ7M_VqTx8XnWO_hrEg" name="test_case,_09-yweF9EeGLhp23ohzHSQ" guid="-AThTQ7M_VqTx8XnWO_hrEg">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_PIEPUbuqj2VXQrr6bki0A" name="user_support_specs,_0-KY8eF9EeGLhp23ohzHSQ" guid="-_PIEPUbuqj2VXQrr6bki0A">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yKN-AIe1Hauyp3an_iNncg" name="requirements_attributes.add,_0-M1MeF9EeGLhp23ohzHSQ" guid="-yKN-AIe1Hauyp3an_iNncg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QYpY6Obrbye4RVzrnjfN3Q" name="requirements_traceability,_0-PRceF9EeGLhp23ohzHSQ" guid="-QYpY6Obrbye4RVzrnjfN3Q">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sQtMyaNy42KR7BpohArWLQ" name="requirements_management_process_description,_0-SUweF9EeGLhp23ohzHSQ" guid="-sQtMyaNy42KR7BpohArWLQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eIgf4HmXdivCJCqhlN1JoQ" name="storyboard,_0-VYEeF9EeGLhp23ohzHSQ" guid="-eIgf4HmXdivCJCqhlN1JoQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NOCLsDE-ajhV7wzXCiTdXw" name="user_role,_0-XNQeF9EeGLhp23ohzHSQ" guid="-NOCLsDE-ajhV7wzXCiTdXw">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-74JVXFarcX-2JZxhKFwMlw" name="project_manager,_1PeyceF9EeGLhp23ohzHSQ" guid="-74JVXFarcX-2JZxhKFwMlw">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-l4fJjPGwMPTVtxJt-kk2IQ" name="architect,_1Ph1weF9EeGLhp23ohzHSQ" guid="-l4fJjPGwMPTVtxJt-kk2IQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-V2u8maoRb0XugaUeCYGZUA" name="tester,_1PlgIeF9EeGLhp23ohzHSQ" guid="-V2u8maoRb0XugaUeCYGZUA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-seOaHbMOBzooPHwluk31sQ" name="build,_1PpxkeF9EeGLhp23ohzHSQ" guid="-seOaHbMOBzooPHwluk31sQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-spy6q7e1t2KzqbePQ32-zg" name="design,_1Pq_seF9EeGLhp23ohzHSQ" guid="-spy6q7e1t2KzqbePQ32-zg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UyIJoC__jU67j2iwWqjmxg" name="developer_test,_1Ps04eF9EeGLhp23ohzHSQ" guid="-UyIJoC__jU67j2iwWqjmxg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9iJdkR1ca3_sU9Is2k32Ew" name="implementation,_1PuqEeF9EeGLhp23ohzHSQ" guid="-9iJdkR1ca3_sU9Is2k32Ew">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-a6u_iUwFJWeIwEPKtCbTZA" name="it_services_strategy,_1QSqweF9EeGLhp23ohzHSQ" guid="-a6u_iUwFJWeIwEPKtCbTZA">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-P9c21PDbiyHk7s2Ssma2_Q" name="software_dist_plan,_1QUf8eF9EeGLhp23ohzHSQ" guid="-P9c21PDbiyHk7s2Ssma2_Q">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VdWdQi_EDedwOTXtw0b4TA" name="architecture_notebook,_1QWVIeF9EeGLhp23ohzHSQ" guid="-VdWdQi_EDedwOTXtw0b4TA">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RLuCYMpDLhn4PN_WUohFVg" name="test_case,_1QhUQeF9EeGLhp23ohzHSQ" guid="-RLuCYMpDLhn4PN_WUohFVg">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LbmAlHF1Ow6cc9eqFkfL_w" name="user_support_specs,_1QsTYeF9EeGLhp23ohzHSQ" guid="-LbmAlHF1Ow6cc9eqFkfL_w">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FppTpQb_VW6fUGeKGyEhuw" name="requirements_attributes.add,_1QuIkeF9EeGLhp23ohzHSQ" guid="-FppTpQb_VW6fUGeKGyEhuw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Qa2QNmfs5gW_Mn0byjDUwg" name="requirements_traceability,_1Qv9weF9EeGLhp23ohzHSQ" guid="-Qa2QNmfs5gW_Mn0byjDUwg">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oV9cMtuql8lBJC_XhtZerQ" name="requirements_management_process_description,_1Qxy8eF9EeGLhp23ohzHSQ" guid="-oV9cMtuql8lBJC_XhtZerQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iJJtziV44FyS3k8_t7VZeQ" name="glossary,_1QzoIeF9EeGLhp23ohzHSQ" guid="-iJJtziV44FyS3k8_t7VZeQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-K2cEdrMnuzqa9nHVYCG34g" name="storyboard,_1Q1dUeF9EeGLhp23ohzHSQ" guid="-K2cEdrMnuzqa9nHVYCG34g">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TLq225uJPnGI8Zdx8Sg1yw" name="user_role,_1Q35keF9EeGLhp23ohzHSQ" guid="-TLq225uJPnGI8Zdx8Sg1yw">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-e_MYu94uW2pnMi8qJX9mLQ" name="stakeholder_request.add,_1RVMkeF9EeGLhp23ohzHSQ" guid="-e_MYu94uW2pnMi8qJX9mLQ">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-u3-cYmruIQwDJCjM1q8u6A" name="any_role,_1RdvceF9EeGLhp23ohzHSQ" guid="-u3-cYmruIQwDJCjM1q8u6A">
    <refinedDescription>&lt;p>&#xD;
    This role allows anyone on a team to perform general tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Access artifacts in the configuration control system for development and maintenance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Submit change requests for the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Participate in assessments and reviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Volunteer to work on a particular iteration&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-loQQGqgXUxKZyGJjVnRWNw" name="user_support_specs,_1dKCEeF9EeGLhp23ohzHSQ" guid="-loQQGqgXUxKZyGJjVnRWNw">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Bv-iz8G7mb8_iLc7goo7ZA" name="requirements_management_process_description,_1dKpIeF9EeGLhp23ohzHSQ" guid="-Bv-iz8G7mb8_iLc7goo7ZA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_j56mGjvcQtzNuQT0gHi9g" name="vision,_1dL3QeF9EeGLhp23ohzHSQ" guid="-_j56mGjvcQtzNuQT0gHi9g">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TE2h2IWmCqvmXDYd5AevWw" name="glossary,_1dNFYeF9EeGLhp23ohzHSQ" guid="-TE2h2IWmCqvmXDYd5AevWw">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xvSamIERNZiycLy2kZj4jw" name="storyboard,_1dOTgeF9EeGLhp23ohzHSQ" guid="-xvSamIERNZiycLy2kZj4jw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Udz5Mh1bFBQep1D9CrjSTA" name="user_role,_1dPhoeF9EeGLhp23ohzHSQ" guid="-Udz5Mh1bFBQep1D9CrjSTA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ntlOTU7uBiSvgo_LWx9nOw" name="iteration_plan_project,_1d9TUeF9EeGLhp23ohzHSQ" guid="-ntlOTU7uBiSvgo_LWx9nOw">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lDNm0r3wR6x-vDjgPwBmYw" name="risk_list,_1d_IgeF9EeGLhp23ohzHSQ" guid="-lDNm0r3wR6x-vDjgPwBmYw">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CfKZ0Z_3zG4iCbBuUY_wAw" name="build,_1eNyAeF9EeGLhp23ohzHSQ" guid="-CfKZ0Z_3zG4iCbBuUY_wAw">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3cclZaPb7TzJuzK75tTSRA" name="design,_1ePAIeF9EeGLhp23ohzHSQ" guid="-3cclZaPb7TzJuzK75tTSRA">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WqSn-3wQ7pKxER3GwJp1nw" name="developer_test,_1eQ1UeF9EeGLhp23ohzHSQ" guid="-WqSn-3wQ7pKxER3GwJp1nw">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Abqit2bd-13hE8CbeI1BWQ" name="implementation,_1eSDceF9EeGLhp23ohzHSQ" guid="-Abqit2bd-13hE8CbeI1BWQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ix6PKlltHY6gWo2CVrFmHg" name="architect,_1WRW8eF9EeGLhp23ohzHSQ" guid="-ix6PKlltHY6gWo2CVrFmHg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PjcTjpxEyD6VnmotOnYukQ" name="it_services_strategy,_1WYEoeF9EeGLhp23ohzHSQ" guid="-PjcTjpxEyD6VnmotOnYukQ">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6OZoPMtl2SpzKlHlSiuY1Q" name="software_dist_plan,_1WYrseF9EeGLhp23ohzHSQ" guid="-6OZoPMtl2SpzKlHlSiuY1Q">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nqqIwXEz5ihZhnaSPYSbVw" name="architecture_notebook,_1WZ50eF9EeGLhp23ohzHSQ" guid="-nqqIwXEz5ihZhnaSPYSbVw">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dYhYhOnzMa_ajWFYiaiYtA" name="project_manager,_1WlgAeF9EeGLhp23ohzHSQ" guid="-dYhYhOnzMa_ajWFYiaiYtA">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PUTDsMlQF0FkPle3HMsN0g" name="tester,_1Wup8eF9EeGLhp23ohzHSQ" guid="-PUTDsMlQF0FkPle3HMsN0g">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-onD8q1jOWbhm7m7oTNpfEw" name="user_support_specs,_1W1XoeF9EeGLhp23ohzHSQ" guid="-onD8q1jOWbhm7m7oTNpfEw">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AVyYrNCAgnO2l27Wh8qHMQ" name="requirements_attributes.add,_1W3M0eF9EeGLhp23ohzHSQ" guid="-AVyYrNCAgnO2l27Wh8qHMQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uwcwhPHPMIrWKvF3Vr8ubg" name="requirements_traceability,_1W5pEeF9EeGLhp23ohzHSQ" guid="-uwcwhPHPMIrWKvF3Vr8ubg">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-h_njW_bb3vhv84mo4oQaKA" name="requirements_management_process_description,_1W8FUeF9EeGLhp23ohzHSQ" guid="-h_njW_bb3vhv84mo4oQaKA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jf2f378-mAhFsyifv0unTA" name="vision,_1W-hkeF9EeGLhp23ohzHSQ" guid="-jf2f378-mAhFsyifv0unTA">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Tm1_hJCAC1BEz8CjkwmJ8Q" name="glossary,_1XA90eF9EeGLhp23ohzHSQ" guid="-Tm1_hJCAC1BEz8CjkwmJ8Q">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-J5FQWfv8nQTz9mP5FRGK3Q" name="storyboard,_1XCzAeF9EeGLhp23ohzHSQ" guid="-J5FQWfv8nQTz9mP5FRGK3Q">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BmX_LT-5JtfXrq8m94r2HQ" name="user_role,_1XEoMeF9EeGLhp23ohzHSQ" guid="-BmX_LT-5JtfXrq8m94r2HQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Yle3pYDExK8jzCtmhOWIpw" name="test_case,_1X2rUeF9EeGLhp23ohzHSQ" guid="-Yle3pYDExK8jzCtmhOWIpw">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zcob8lB3UitxCDa6bIrf7A" name="stakeholder_request.add,_1YI_MeF9EeGLhp23ohzHSQ" guid="-zcob8lB3UitxCDa6bIrf7A">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YhVXlgjyP1VKePX0IrNtBg" name="build,_1YQ7AeF9EeGLhp23ohzHSQ" guid="-YhVXlgjyP1VKePX0IrNtBg">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-f0ZdTYvrjKxwK0JZhkbFqw" name="design,_1YSwMeF9EeGLhp23ohzHSQ" guid="-f0ZdTYvrjKxwK0JZhkbFqw">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XXTm_DyC_qTZCzbsR4x2dA" name="developer_test,_1YVMceF9EeGLhp23ohzHSQ" guid="-XXTm_DyC_qTZCzbsR4x2dA">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-R_E1KSq9OvvDWfWuKeiyFg" name="implementation,_1YXBoeF9EeGLhp23ohzHSQ" guid="-R_E1KSq9OvvDWfWuKeiyFg">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BlYjRXYQItma6wxx7MBFLQ" name="architect,_1UgcYOF9EeGLhp23ohzHSQ" guid="-BlYjRXYQItma6wxx7MBFLQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-11-_SY4m31asb1UNzres6Q" name="project_manager,_1UhDceF9EeGLhp23ohzHSQ" guid="-11-_SY4m31asb1UNzres6Q">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-haZLXFc1b61RyE2e-vZbVw" name="storyboard,_1Ul78eF9EeGLhp23ohzHSQ" guid="-haZLXFc1b61RyE2e-vZbVw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QL0UCXoAVZuSfGkw-UasLw" name="it_services_strategy,_1Uo_QeF9EeGLhp23ohzHSQ" guid="-QL0UCXoAVZuSfGkw-UasLw">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3HxP96ISNl8CgL08e__H5Q" name="software_dist_plan,_1Uq0ceF9EeGLhp23ohzHSQ" guid="-3HxP96ISNl8CgL08e__H5Q">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5KpAMb08rPSY5pnFD_SYxQ" name="user_support_specs,_1U7TIeF9EeGLhp23ohzHSQ" guid="-5KpAMb08rPSY5pnFD_SYxQ">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8l3lms6h5yXk-uDqMNhMaQ" name="requirements_attributes.add,_1U9vYeF9EeGLhp23ohzHSQ" guid="-8l3lms6h5yXk-uDqMNhMaQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-B15w73pLrMXlugzZqYUa-g" name="requirements_traceability,_1U_kkeF9EeGLhp23ohzHSQ" guid="-B15w73pLrMXlugzZqYUa-g">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0YDUJJv7Hg4i3bDZg7bmJg" name="requirements_management_process_description,_1VBZweF9EeGLhp23ohzHSQ" guid="-0YDUJJv7Hg4i3bDZg7bmJg">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-J_rorERvog2p33KqiXle_w" name="user_role,_1VFEIeF9EeGLhp23ohzHSQ" guid="-J_rorERvog2p33KqiXle_w">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RVlpfNoziQphZYwTvEXemw" name="stakeholder_request.add,_1VXYAeF9EeGLhp23ohzHSQ" guid="-RVlpfNoziQphZYwTvEXemw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PgyL5BXeooBfa5HOeg7NKQ" name="iteration_plan_project,_1VeFseF9EeGLhp23ohzHSQ" guid="-PgyL5BXeooBfa5HOeg7NKQ">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HL-0HsM34_a3uceH4B7nOw" name="risk_list,_1VfT0eF9EeGLhp23ohzHSQ" guid="-HL-0HsM34_a3uceH4B7nOw">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-n-K7NDXocBUfBjun2XjtAA" name="build,_1V5jgeF9EeGLhp23ohzHSQ" guid="-n-K7NDXocBUfBjun2XjtAA">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dnNvDHCjeNXOh4X_o1ebIQ" name="design,_1V7YseF9EeGLhp23ohzHSQ" guid="-dnNvDHCjeNXOh4X_o1ebIQ">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sd5a7jpUR2fjZj7yCr-29w" name="developer_test,_1V908eF9EeGLhp23ohzHSQ" guid="-sd5a7jpUR2fjZj7yCr-29w">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0Ssz7Y71gRib0GUqU80QAg" name="implementation,_1WARMeF9EeGLhp23ohzHSQ" guid="-0Ssz7Y71gRib0GUqU80QAg">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-meWs58NnoWPro0taugZWFQ" name="process_engineer,_1icxwOF9EeGLhp23ohzHSQ" guid="-meWs58NnoWPro0taugZWFQ">
    <refinedDescription>&lt;p>&#xD;
    This role plays an important part of any management team of a software project. The role is responsible for&#xD;
    all process related aspects of the project, such as :&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Tailoring the process to match the specific needs of the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Educating and mentoring project members on process related issues.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that valuable project experience is harvested and fed back into the process.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pmoV3wbBXFIx1NsQp71FuQ" name="project_manager,_1ihqQeF9EeGLhp23ohzHSQ" guid="-pmoV3wbBXFIx1NsQp71FuQ">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EtxpuAD0eWq3G4nZcHN-zg" name="architect,_1iktkeF9EeGLhp23ohzHSQ" guid="-EtxpuAD0eWq3G4nZcHN-zg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2PsdMFhFKdrHE3bMPL0osA" name="tester,_1irbQeF9EeGLhp23ohzHSQ" guid="-2PsdMFhFKdrHE3bMPL0osA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FZaYP7RDKWQV5Is6Un5yMQ" name="it_services_strategy,_1i2aYeF9EeGLhp23ohzHSQ" guid="-FZaYP7RDKWQV5Is6Un5yMQ">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xDtSsFqUnMc-4cg7SqezaA" name="software_dist_plan,_1i3ogeF9EeGLhp23ohzHSQ" guid="-xDtSsFqUnMc-4cg7SqezaA">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lUxoqokeLkK_jRpTEWW2eQ" name="architecture_notebook,_1i5dseF9EeGLhp23ohzHSQ" guid="-lUxoqokeLkK_jRpTEWW2eQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zm2oKUk8A-9-Aoi3VGxAWQ" name="risk_list,_1jGSAeF9EeGLhp23ohzHSQ" guid="-zm2oKUk8A-9-Aoi3VGxAWQ">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5BfFhfAYlJVIrl8Y-UR-ew" name="test_case,_1jXXweF9EeGLhp23ohzHSQ" guid="-5BfFhfAYlJVIrl8Y-UR-ew">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-f23sKUdKU4dKd3yT7AtnJA" name="user_support_specs,_1jkzIeF9EeGLhp23ohzHSQ" guid="-f23sKUdKU4dKd3yT7AtnJA">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zLWWBJstYVR5sgfauy1cRg" name="requirements_attributes.add,_1jmoUeF9EeGLhp23ohzHSQ" guid="-zLWWBJstYVR5sgfauy1cRg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YI6LjctEtpUSDSGNAa3lFQ" name="requirements_traceability,_1jpEkeF9EeGLhp23ohzHSQ" guid="-YI6LjctEtpUSDSGNAa3lFQ">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sFvxG9BKSh75EOir9n-4rw" name="requirements_management_process_description,_1jrg0eF9EeGLhp23ohzHSQ" guid="-sFvxG9BKSh75EOir9n-4rw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9HcmlHiGzutnrVZxRRK9ag" name="vision,_1jtWAeF9EeGLhp23ohzHSQ" guid="-9HcmlHiGzutnrVZxRRK9ag">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yupLxDiw9HhHtGeDlQQ7yw" name="glossary,_1jukIeF9EeGLhp23ohzHSQ" guid="-yupLxDiw9HhHtGeDlQQ7yw">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SKZRj61UdiM9v0nGMess1A" name="storyboard,_1jxAYeF9EeGLhp23ohzHSQ" guid="-SKZRj61UdiM9v0nGMess1A">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-L0TcBj9xwd892fLfAOky2A" name="user_role,_1jy1keF9EeGLhp23ohzHSQ" guid="-L0TcBj9xwd892fLfAOky2A">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ojLb4gcZm-mDiFFJ7fBClw" name="stakeholder_request.add,_1kPhgeF9EeGLhp23ohzHSQ" guid="-ojLb4gcZm-mDiFFJ7fBClw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_pKbCiDwSJCOCmKjNBYEpQ" name="build,_1kWPMeF9EeGLhp23ohzHSQ" guid="-_pKbCiDwSJCOCmKjNBYEpQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2LNticdX26uxyhiFtIOgWQ" name="design,_1kYEYeF9EeGLhp23ohzHSQ" guid="-2LNticdX26uxyhiFtIOgWQ">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-228wL5EkGNQ6YTbaxV916Q" name="developer_test,_1kagoeF9EeGLhp23ohzHSQ" guid="-228wL5EkGNQ6YTbaxV916Q">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--2L2O7XjqTnNN59x0P1-5Q" name="implementation,_1kcV0eF9EeGLhp23ohzHSQ" guid="--2L2O7XjqTnNN59x0P1-5Q">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-49gJ4-HlvuqwoXOtpQqKNQ" name="project_manager,_1naKQeF9EeGLhp23ohzHSQ" guid="-49gJ4-HlvuqwoXOtpQqKNQ">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6ryJzouV3Sys-LedSIG8Hg" name="architect,_1nd0oeF9EeGLhp23ohzHSQ" guid="-6ryJzouV3Sys-LedSIG8Hg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ae8ZSNw7ATmOCNqSdGXZdw" name="tester,_1njUMeF9EeGLhp23ohzHSQ" guid="-Ae8ZSNw7ATmOCNqSdGXZdw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-20sTvW5SiH9OsZsEbNPqzA" name="stakeholder_request.add,_1nozweF9EeGLhp23ohzHSQ" guid="-20sTvW5SiH9OsZsEbNPqzA">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4ZJrJVwldruQfahPqEReBQ" name="user_support_specs,_1nxWoeF9EeGLhp23ohzHSQ" guid="-4ZJrJVwldruQfahPqEReBQ">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aq7JCeNNExUfXV3XymoYRw" name="requirements_attributes.add,_1nykweF9EeGLhp23ohzHSQ" guid="-aq7JCeNNExUfXV3XymoYRw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-M3WVbNJTdHNUVqGtXJHqZQ" name="requirements_traceability,_1n0Z8eF9EeGLhp23ohzHSQ" guid="-M3WVbNJTdHNUVqGtXJHqZQ">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PXDB-hrlC7PAiV70bMNvCg" name="requirements_management_process_description,_1n2PIeF9EeGLhp23ohzHSQ" guid="-PXDB-hrlC7PAiV70bMNvCg">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qO9PeIKns426yMW8zyFRhQ" name="glossary,_1n4EUeF9EeGLhp23ohzHSQ" guid="-qO9PeIKns426yMW8zyFRhQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lQ_NZT2Qnlqo4q6QSWizyQ" name="storyboard,_1n5SceF9EeGLhp23ohzHSQ" guid="-lQ_NZT2Qnlqo4q6QSWizyQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KU_KkzQMWMo2WHNNIdRK0g" name="user_role,_1n7useF9EeGLhp23ohzHSQ" guid="-KU_KkzQMWMo2WHNNIdRK0g">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kEcxPVMtCswpnnZGIS9hLA" name="test_case,_1ooSQeF9EeGLhp23ohzHSQ" guid="-kEcxPVMtCswpnnZGIS9hLA">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_Nf_9NWtUHxjpif2m4kayQ" name="build,_1oz4ceF9EeGLhp23ohzHSQ" guid="-_Nf_9NWtUHxjpif2m4kayQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fupPfhKmSFT8Dk2uK2if9g" name="design,_1o1toeF9EeGLhp23ohzHSQ" guid="-fupPfhKmSFT8Dk2uK2if9g">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vVilKOefmUgE7sCZ0Pz7Bg" name="developer_test,_1o3i0eF9EeGLhp23ohzHSQ" guid="-vVilKOefmUgE7sCZ0Pz7Bg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TBiNVTrGqEIwwhpBdahv-A" name="implementation,_1o5YAeF9EeGLhp23ohzHSQ" guid="-TBiNVTrGqEIwwhpBdahv-A">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ziMhkY_YCKphqW6T4JcFaQ" name="it_services_strategy,_1pIBgeF9EeGLhp23ohzHSQ" guid="-ziMhkY_YCKphqW6T4JcFaQ">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OJJRFd0wqVU-bH6U-qB_SA" name="software_dist_plan,_1pKdweF9EeGLhp23ohzHSQ" guid="-OJJRFd0wqVU-bH6U-qB_SA">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NGbw3FLA-1ppRVPoSPlWBQ" name="any_role,_1pZuUeF9EeGLhp23ohzHSQ" guid="-NGbw3FLA-1ppRVPoSPlWBQ">
    <refinedDescription>&lt;p>&#xD;
    This role allows anyone on a team to perform general tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Access artifacts in the configuration control system for development and maintenance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Submit change requests for the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Participate in assessments and reviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Volunteer to work on a particular iteration&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fjiN1h2cCzaxkW_jA7hsxQ" name="project_manager,_1zHD8eF9EeGLhp23ohzHSQ" guid="-fjiN1h2cCzaxkW_jA7hsxQ">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xnkotl_YRNbcrUR90Q3WDQ" name="architect,_1zKuUeF9EeGLhp23ohzHSQ" guid="-xnkotl_YRNbcrUR90Q3WDQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZA1oeX5LPxGJphkbIilJgQ" name="tester,_1zQ08eF9EeGLhp23ohzHSQ" guid="-ZA1oeX5LPxGJphkbIilJgQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AhBLlfzr4A9jl6ZtnpQ9OA" name="it_services_strategy,_1zcbIeF9EeGLhp23ohzHSQ" guid="-AhBLlfzr4A9jl6ZtnpQ9OA">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0ELVRCCacTVORQLvVUXSew" name="software_dist_plan,_1zdpQeF9EeGLhp23ohzHSQ" guid="-0ELVRCCacTVORQLvVUXSew">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-94Id6tW98iLTr89qBvzz4w" name="architecture_notebook,_1zfeceF9EeGLhp23ohzHSQ" guid="-94Id6tW98iLTr89qBvzz4w">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yuo-fRaZJDQdLovu_Ko78w" name="user_support_specs,_1ztg4eF9EeGLhp23ohzHSQ" guid="-yuo-fRaZJDQdLovu_Ko78w">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4pka7f8eI9UqObgPQvQh6Q" name="requirements_management_process_description,_1zvWEeF9EeGLhp23ohzHSQ" guid="-4pka7f8eI9UqObgPQvQh6Q">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cnDcJqlUi66J7CD7bztb1w" name="vision,_1zxLQeF9EeGLhp23ohzHSQ" guid="-cnDcJqlUi66J7CD7bztb1w">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1ksZXPZdgHyHgJElrIuFbA" name="glossary,_1zyZYeF9EeGLhp23ohzHSQ" guid="-1ksZXPZdgHyHgJElrIuFbA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HPB3DWICUkth9QK_PrbUPA" name="storyboard,_1z0OkeF9EeGLhp23ohzHSQ" guid="-HPB3DWICUkth9QK_PrbUPA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mmtMqDB9x6A9axhejNecEA" name="user_role,_1z2q0eF9EeGLhp23ohzHSQ" guid="-mmtMqDB9x6A9axhejNecEA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-a6jSnjNq54sDNJiPR3x8gA" name="test_case,_10Uk4OF9EeGLhp23ohzHSQ" guid="-a6jSnjNq54sDNJiPR3x8gA">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hbNKATmF2lAzKX9toeWujQ" name="build,_10jOYeF9EeGLhp23ohzHSQ" guid="-hbNKATmF2lAzKX9toeWujQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-m7Y7acDcSobcnUt7VJ9SGg" name="design,_10lqoeF9EeGLhp23ohzHSQ" guid="-m7Y7acDcSobcnUt7VJ9SGg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uuOEo3Tlss9LsrBQ8deljQ" name="developer_test,_10oG4eF9EeGLhp23ohzHSQ" guid="-uuOEo3Tlss9LsrBQ8deljQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-doY_Eh9gw3elfzbAKhx-hA" name="implementation,_10p8EeF9EeGLhp23ohzHSQ" guid="-doY_Eh9gw3elfzbAKhx-hA">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-n-XkqcJpHyMiwsONBZIW0w" name="stakeholder_request.add,_107o4eF9EeGLhp23ohzHSQ" guid="-n-XkqcJpHyMiwsONBZIW0w">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k6G6C7JatSWpDKUgiUJFAg" name="risk_list,_11K5ceF9EeGLhp23ohzHSQ" guid="-k6G6C7JatSWpDKUgiUJFAg">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GTOoQZhLx6ctK9ev5SL4_g" name="project_manager,_1sgFoeF9EeGLhp23ohzHSQ" guid="-GTOoQZhLx6ctK9ev5SL4_g">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--tLTwNNk03xDj2tenFuhJw" name="architect,_1sllMeF9EeGLhp23ohzHSQ" guid="--tLTwNNk03xDj2tenFuhJw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QLsyfUtq7ZoFW7u2dM84rw" name="tester,_1sp2oeF9EeGLhp23ohzHSQ" guid="-QLsyfUtq7ZoFW7u2dM84rw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-u5u7fDztkVzgy0u_PAuC6A" name="stakeholder_request.add,_1swkUeF9EeGLhp23ohzHSQ" guid="-u5u7fDztkVzgy0u_PAuC6A">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hk7I0I2b_QzFzj2l2hOApA" name="it_services_strategy,_1s68YeF9EeGLhp23ohzHSQ" guid="-hk7I0I2b_QzFzj2l2hOApA">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Y1SI2GQq2fP6Ryp4LK4fsQ" name="software_dist_plan,_1s8xkeF9EeGLhp23ohzHSQ" guid="-Y1SI2GQq2fP6Ryp4LK4fsQ">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iN4N06JPnVmepEEKQxyQ_w" name="architecture_notebook,_1s-mweF9EeGLhp23ohzHSQ" guid="-iN4N06JPnVmepEEKQxyQ_w">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lNN5vAhEj8h2WTjWG0l8hw" name="user_support_specs,_1tK0AeF9EeGLhp23ohzHSQ" guid="-lNN5vAhEj8h2WTjWG0l8hw">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qqZfnonsbteAsn1YypYikQ" name="requirements_attributes.add,_1tMCIeF9EeGLhp23ohzHSQ" guid="-qqZfnonsbteAsn1YypYikQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-p3bjQPsL0KOaQjAQ924-Ww" name="requirements_traceability,_1tN3UeF9EeGLhp23ohzHSQ" guid="-p3bjQPsL0KOaQjAQ924-Ww">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0yBIcwvQMlJpPZYFyr9yww" name="requirements_management_process_description,_1tPsgeF9EeGLhp23ohzHSQ" guid="-0yBIcwvQMlJpPZYFyr9yww">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YyCjQtcNF0C6Flj4Vwldgg" name="vision,_1tRhseF9EeGLhp23ohzHSQ" guid="-YyCjQtcNF0C6Flj4Vwldgg">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KWexTks9umyzW4pa3wkqTQ" name="glossary,_1tTW4eF9EeGLhp23ohzHSQ" guid="-KWexTks9umyzW4pa3wkqTQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--aTRvIC6E8Fjk-4tyDYBxw" name="storyboard,_1tVzIeF9EeGLhp23ohzHSQ" guid="--aTRvIC6E8Fjk-4tyDYBxw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_mL3_Ozw_52DzYwYNvnDfQ" name="user_role,_1tZdgeF9EeGLhp23ohzHSQ" guid="-_mL3_Ozw_52DzYwYNvnDfQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NDrg-hdFexD4D0ZpxvxJRw" name="build,_1uHPMOF9EeGLhp23ohzHSQ" guid="-NDrg-hdFexD4D0ZpxvxJRw">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kwW4G6QG3qpSPllxWV-D3w" name="design,_1uJEYeF9EeGLhp23ohzHSQ" guid="-kwW4G6QG3qpSPllxWV-D3w">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JcPbrKZTSYTEHo12-UKnLw" name="developer_test,_1uLgoeF9EeGLhp23ohzHSQ" guid="-JcPbrKZTSYTEHo12-UKnLw">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Z186DzJL6K_G_JDMDtssAg" name="implementation,_1uN84eF9EeGLhp23ohzHSQ" guid="-Z186DzJL6K_G_JDMDtssAg">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rMNdZmwSLFh8ERThV-_2oQ" name="test_case,_1ufpseF9EeGLhp23ohzHSQ" guid="-rMNdZmwSLFh8ERThV-_2oQ">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ihRmTdN-ifvGCu4eA1j8kg" name="assess_iteration_results_project,_37ywoPCEEeG5Ru27XIhn3A" guid="-ihRmTdN-ifvGCu4eA1j8kg">
    <keyConsiderations>&lt;p>&#xD;
    While assessing the iteration results at the project level, consider doing the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coordinate&amp;nbsp;the sub teams activities such as iteration assessment and demonstration of iteration results to&#xD;
        stakeholders. Leverage iteration status reports created by sub teams.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Perform a retrospective with sub team leads to understand what went well - and what not -&amp;nbsp;for each sub&#xD;
        team.&amp;nbsp;Improve the overall process followed by all teams.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MivWyg2OdDwbcAodBgixxg" name="iteration_plan_project,_37zXsPCEEeG5Ru27XIhn3A" guid="-MivWyg2OdDwbcAodBgixxg">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XxDfnJipEXKUjemAdTz3Iw" name="work_items_list,_37zXsvCEEeG5Ru27XIhn3A" guid="-XxDfnJipEXKUjemAdTz3Iw">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FvR0AXfkh3A7S7aXnXBKGQ" name="assess_iteration_results_project,_-rp64PCEEeG5Ru27XIhn3A" guid="-FvR0AXfkh3A7S7aXnXBKGQ">
    <keyConsiderations>&lt;p>&#xD;
    While assessing the iteration results at the project level, consider doing the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coordinate&amp;nbsp;the sub teams activities such as iteration assessment and demonstration of iteration results to&#xD;
        stakeholders. Leverage iteration status reports created by sub teams.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Perform a retrospective with sub team leads to understand what went well - and what not -&amp;nbsp;for each sub&#xD;
        team.&amp;nbsp;Improve the overall process followed by all teams.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k4JcteNCSPwRbs8CU0eZSw" name="assess_plan_coverage_project_level,_MGTiIPCFEeG5Ru27XIhn3A" guid="-k4JcteNCSPwRbs8CU0eZSw">
    <refinedDescription>Verify that the following conditions are true: &#xD;
&lt;ul class=&quot;ul&quot;>&#xD;
    &lt;li class=&quot;li&quot;>&#xD;
        Each requirement has an implementation story and a test case linked to it&#xD;
    &lt;/li>&#xD;
    &lt;li class=&quot;li&quot;>&#xD;
        Each story is linked to a requirement and a test case&#xD;
    &lt;/li>&#xD;
    &lt;li class=&quot;li&quot;>&#xD;
        Each test case is linked to a story and a requirement&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yiFKWV6e8jir7EVmdOIHOw" name="project_manager,_MGWlcPCFEeG5Ru27XIhn3A" guid="-yiFKWV6e8jir7EVmdOIHOw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Cz1N43REQMNnSwwoBqDKyA" name="tester,_MGWldvCFEeG5Ru27XIhn3A" guid="-Cz1N43REQMNnSwwoBqDKyA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9Ed5BDWuK-9aVvj-mktNqA" name="test_case,_MGYaovCFEeG5Ru27XIhn3A" guid="-9Ed5BDWuK-9aVvj-mktNqA">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ynhx0049rrHXpxui4_ATPA" name="manage_iteration_project,_FR7rUPCFEeG5Ru27XIhn3A" guid="-ynhx0049rrHXpxui4_ATPA">
    <keyConsiderations>&lt;p>&#xD;
    While managing the iteration at the project level, consider doing the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Track the iteration progress of each sub team. Have frequent meetings with&amp;nbsp;one representative&amp;nbsp;of each sub&#xD;
        team to understand progress and identify roadblocks.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Work with the sub teams in case work of an iteration needs to be descoped in order to meet iteration objectives.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wIdU23LPr22NxRLuDwA8gg" name="risk_list,_FR8SYPCFEeG5Ru27XIhn3A" guid="-wIdU23LPr22NxRLuDwA8gg">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-r_nAmRLAlG21RikdMh9lkg" name="work_items_list,_FR85cPCFEeG5Ru27XIhn3A" guid="-r_nAmRLAlG21RikdMh9lkg">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XyciIS2LY3Qx5RIMflCh3w" name="iteration_plan_project,_FR85dPCFEeG5Ru27XIhn3A" guid="-XyciIS2LY3Qx5RIMflCh3w">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Iz9G8GCSs2-wXPpzrHkeBQ" name="assess_iteration_results_project,_P-lbQPCFEeG5Ru27XIhn3A" guid="-Iz9G8GCSs2-wXPpzrHkeBQ">
    <keyConsiderations>&lt;p>&#xD;
    While assessing the iteration results at the project level, consider doing the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coordinate&amp;nbsp;the sub teams activities such as iteration assessment and demonstration of iteration results to&#xD;
        stakeholders. Leverage iteration status reports created by sub teams.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Perform a retrospective with sub team leads to understand what went well - and what not -&amp;nbsp;for each sub&#xD;
        team.&amp;nbsp;Improve the overall process followed by all teams.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RciPmpH6ocarApvps8166Q" name="iteration_plan_team,_5Im5IfLhEeGcxNgLB-1TgQ" guid="-RciPmpH6ocarApvps8166Q">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, this artifact describes the&amp;nbsp;sub team's objectives, work assignments, and evaluation&#xD;
    criteria for the iteration, refining the goals from the&amp;nbsp;project leadership team&amp;nbsp;iteration plan that apply to&#xD;
    the sub team.&amp;nbsp;This artifact&amp;nbsp;is created by the sub team lead and reviewed by the project manager.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>This artifact has the same attributes and relationships as &lt;a class=&quot;elementLink&quot;&#xD;
href=&quot;./../../practice.mgmt.team_of_teams.base-ibm/workproducts/iteration_plan_project_AC0B4E4F.html&quot;&#xD;
guid=&quot;_KHf8IFAHEeCk-Pay6xRCzA&quot;>Iteration Plan (Project Level)&lt;/a>, limited to the team's scope.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BycGchnarOt1r3zWXHCpPA" name="user_support_specs,_5RJKEfLhEeGcxNgLB-1TgQ" guid="-BycGchnarOt1r3zWXHCpPA">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PjvxhWp0spDRuf47L4yb_Q" name="design,_5SUOwfLhEeGcxNgLB-1TgQ" guid="-PjvxhWp0spDRuf47L4yb_Q">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vrP_WjGA6ehZVbVgzeC8dQ" name="user_support_specs,_5iupUfLhEeGcxNgLB-1TgQ" guid="-vrP_WjGA6ehZVbVgzeC8dQ">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YD65uVREJUvrsCQia_Qsug" name="design,_5jW7cfLhEeGcxNgLB-1TgQ" guid="-YD65uVREJUvrsCQia_Qsug">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Clg46mANZBz8_uQBt34zbA" name="design,_5wMdkfLhEeGcxNgLB-1TgQ" guid="-Clg46mANZBz8_uQBt34zbA">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-x6ghRpG43cPO2IxEg1BzoQ" name="user_support_specs,_5weKYfLhEeGcxNgLB-1TgQ" guid="-x6ghRpG43cPO2IxEg1BzoQ">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RQfxUby1lHyF5a94hI6ukA" name="process_engineer,_X4_YAQNHEeKgIrW2BoUv0Q" guid="-RQfxUby1lHyF5a94hI6ukA">
    <refinedDescription>&lt;p>&#xD;
    This role plays an important part of any management team of a software project. The role is responsible for&#xD;
    all process related aspects of the project, such as :&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Tailoring the process to match the specific needs of the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Educating and mentoring project members on process related issues.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that valuable project experience is harvested and fed back into the process.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IP9DmIkwTgNTT8hm8jskVw" name="architect,_X5GFsANHEeKgIrW2BoUv0Q" guid="-IP9DmIkwTgNTT8hm8jskVw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0A_ov1WpXJ5ObgkFp7SIyg" name="tester,_X5JwEQNHEeKgIrW2BoUv0Q" guid="-0A_ov1WpXJ5ObgkFp7SIyg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--rTx-D608PSWhYZVrpiFmQ" name="build,_X5Rr4QNHEeKgIrW2BoUv0Q" guid="--rTx-D608PSWhYZVrpiFmQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CTXPe-F6thmQraQQ6Icvnw" name="design,_X5ThEQNHEeKgIrW2BoUv0Q" guid="-CTXPe-F6thmQraQQ6Icvnw">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0Xr7MTedZn0WXXW6YYI-lw" name="developer_test,_X5UvMQNHEeKgIrW2BoUv0Q" guid="-0Xr7MTedZn0WXXW6YYI-lw">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kd24pObJuwKb0uiQv7S-yw" name="implementation,_X5WkYQNHEeKgIrW2BoUv0Q" guid="-kd24pObJuwKb0uiQv7S-yw">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lcqtbvjO_1IZJV5bdk5nGg" name="user_support_specs,_X5wNAQNHEeKgIrW2BoUv0Q" guid="-lcqtbvjO_1IZJV5bdk5nGg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rLbtlG_unAxFbS7JubZoXw" name="requirements_attributes.add,_X5yCMQNHEeKgIrW2BoUv0Q" guid="-rLbtlG_unAxFbS7JubZoXw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Y4aekq5xp-o4eUh91zAgHg" name="requirements_traceability,_X5z3YQNHEeKgIrW2BoUv0Q" guid="-Y4aekq5xp-o4eUh91zAgHg">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eMBe_jgMjs5GRYcsXNp8Ew" name="requirements_management_process_description,_X51skQNHEeKgIrW2BoUv0Q" guid="-eMBe_jgMjs5GRYcsXNp8Ew">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rmZcNc6T8THIAc2QtYlB-A" name="vision,_X53hwQNHEeKgIrW2BoUv0Q" guid="-rmZcNc6T8THIAc2QtYlB-A">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OWHB9KcR2f1QegwEpJZhIA" name="glossary,_X55W8QNHEeKgIrW2BoUv0Q" guid="-OWHB9KcR2f1QegwEpJZhIA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tqn96qQwU3lt1T7pZsXYNA" name="storyboard,_X57MIQNHEeKgIrW2BoUv0Q" guid="-tqn96qQwU3lt1T7pZsXYNA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9Ia0WyP62UGIZK5NROK3mA" name="user_role,_X59BUQNHEeKgIrW2BoUv0Q" guid="-9Ia0WyP62UGIZK5NROK3mA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Llu4Wl-7iufaDkvriDg6Yw" name="test_case,_X6cJgQNHEeKgIrW2BoUv0Q" guid="-Llu4Wl-7iufaDkvriDg6Yw">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-erRXJO6jXVarF9hFW6kHZQ" name="it_services_strategy,_X6o90QNHEeKgIrW2BoUv0Q" guid="-erRXJO6jXVarF9hFW6kHZQ">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2lEtsnBrDQwowj_Wtwjy4Q" name="software_dist_plan,_X6soMQNHEeKgIrW2BoUv0Q" guid="-2lEtsnBrDQwowj_Wtwjy4Q">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-h0pShGkKm9_RzVfv4QmMyQ" name="architecture_notebook,_X61LEANHEeKgIrW2BoUv0Q" guid="-h0pShGkKm9_RzVfv4QmMyQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nCL4HJ5EnoZt457vS3ygGg" name="architect,_YCkx0QNHEeKgIrW2BoUv0Q" guid="-nCL4HJ5EnoZt457vS3ygGg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_ZA6tecwdcGVFH64fivJHg" name="tester,_YCpDQQNHEeKgIrW2BoUv0Q" guid="-_ZA6tecwdcGVFH64fivJHg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CXL8VaBkmo8oM2CjF0_BSg" name="test_case,_YCzbUQNHEeKgIrW2BoUv0Q" guid="-CXL8VaBkmo8oM2CjF0_BSg">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BICtN5GLAhQjufl4V0nz4A" name="user_support_specs,_YC_BgQNHEeKgIrW2BoUv0Q" guid="-BICtN5GLAhQjufl4V0nz4A">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZRaUoFkyjOwP51PG4Le2Dw" name="vision,_YDCE0QNHEeKgIrW2BoUv0Q" guid="-ZRaUoFkyjOwP51PG4Le2Dw">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-b5ji-h6sPNHs3fig3ncHQw" name="storyboard,_YDEhEQNHEeKgIrW2BoUv0Q" guid="-b5ji-h6sPNHs3fig3ncHQw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OR4ZOzKULfPrU9f_pMNxMg" name="it_services_strategy,_YDewwQNHEeKgIrW2BoUv0Q" guid="-OR4ZOzKULfPrU9f_pMNxMg">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eb9BMJ1oCIoOsHM1JAVmnQ" name="software_dist_plan,_YDhNAQNHEeKgIrW2BoUv0Q" guid="-eb9BMJ1oCIoOsHM1JAVmnQ">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oqOmTU_OFyScQUNEYFXgpg" name="architecture_notebook,_YDjCMQNHEeKgIrW2BoUv0Q" guid="-oqOmTU_OFyScQUNEYFXgpg">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-a_II_otqjFwl-OSf5v4FXA" name="build,_YD0vAQNHEeKgIrW2BoUv0Q" guid="-a_II_otqjFwl-OSf5v4FXA">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7MKmlkMQg7wIYlRNJUoyqg" name="design,_YD2kMQNHEeKgIrW2BoUv0Q" guid="-7MKmlkMQg7wIYlRNJUoyqg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dJZuLIq-3uTZWmB0GczxJw" name="developer_test,_YD4ZYQNHEeKgIrW2BoUv0Q" guid="-dJZuLIq-3uTZWmB0GczxJw">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7hbryw2FKdHfMymQcbvq1A" name="implementation,_YD6OkQNHEeKgIrW2BoUv0Q" guid="-7hbryw2FKdHfMymQcbvq1A">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2TMKwHTDBxDn9O_9qRI9Aw" name="stakeholder_request.add,_YEGb0QNHEeKgIrW2BoUv0Q" guid="-2TMKwHTDBxDn9O_9qRI9Aw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XgEwkTAK8Jb7e5W8RMgIWw" name="requirements_management_process_description,_YF06IQNHEeKgIrW2BoUv0Q" guid="-XgEwkTAK8Jb7e5W8RMgIWw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WTjACWqEP1duPT8r4HwXkQ" name="vision,_YF2vUQNHEeKgIrW2BoUv0Q" guid="-WTjACWqEP1duPT8r4HwXkQ">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dKo2Ajt106EHJ0RhCDGrfQ" name="glossary,_YF3WYQNHEeKgIrW2BoUv0Q" guid="-dKo2Ajt106EHJ0RhCDGrfQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-H-qTD9_pY5tP0zGP0mX1eA" name="storyboard,_YF4kgQNHEeKgIrW2BoUv0Q" guid="-H-qTD9_pY5tP0zGP0mX1eA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ox0VCsCqgtiEpYPg3-0z_g" name="user_role,_YF5yoQNHEeKgIrW2BoUv0Q" guid="-Ox0VCsCqgtiEpYPg3-0z_g">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wH0gA4-mg7S7pVgW-61xZA" name="iteration_plan_project,_YGhdsQNHEeKgIrW2BoUv0Q" guid="-wH0gA4-mg7S7pVgW-61xZA">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ghs-qSpUDrxZA-ULpLckgw" name="risk_list,_YGir0QNHEeKgIrW2BoUv0Q" guid="-Ghs-qSpUDrxZA-ULpLckgw">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-recTwQJfAyCVeHe_g8KIwQ" name="build,_YGx8YQNHEeKgIrW2BoUv0Q" guid="-recTwQJfAyCVeHe_g8KIwQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YSSdt48pJo74UQoTqjmpZg" name="developer_test,_YGzxkQNHEeKgIrW2BoUv0Q" guid="-YSSdt48pJo74UQoTqjmpZg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rOSzkkDlDHybJ0Ms_I7Wyw" name="implementation,_YG0_sQNHEeKgIrW2BoUv0Q" guid="-rOSzkkDlDHybJ0Ms_I7Wyw">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vRFd1YTnLche53QfHOIcVw" name="project_manager,_X_H1MQNHEeKgIrW2BoUv0Q" guid="-vRFd1YTnLche53QfHOIcVw">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wR_pF8K0pkM3SyBzuediRw" name="architect,_X_QYEQNHEeKgIrW2BoUv0Q" guid="-wR_pF8K0pkM3SyBzuediRw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-N86cNP3aTiNMeSy-HE0BvA" name="tester,_X_YT4QNHEeKgIrW2BoUv0Q" guid="-N86cNP3aTiNMeSy-HE0BvA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yz_wa8lRxpTtntP6VpGLog" name="stakeholder_request.add,_YAE3cQNHEeKgIrW2BoUv0Q" guid="-yz_wa8lRxpTtntP6VpGLog">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-unpuN_P6Hg3MEC-h5YGvFA" name="test_case,_YAPPgQNHEeKgIrW2BoUv0Q" guid="-unpuN_P6Hg3MEC-h5YGvFA">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gOQ0CeR9h-HGWeOEKNiGHg" name="user_support_specs,_YAfuMQNHEeKgIrW2BoUv0Q" guid="-gOQ0CeR9h-HGWeOEKNiGHg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5j3b__Ag-fQhROnVO7nmRw" name="requirements_attributes.add,_YAhjYQNHEeKgIrW2BoUv0Q" guid="-5j3b__Ag-fQhROnVO7nmRw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-d7mv0ge59k0BzVuM_90y1Q" name="requirements_traceability,_YAkmsQNHEeKgIrW2BoUv0Q" guid="-d7mv0ge59k0BzVuM_90y1Q">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-laKUYFipufks39zGxO4Vdw" name="requirements_management_process_description,_YAoREQNHEeKgIrW2BoUv0Q" guid="-laKUYFipufks39zGxO4Vdw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QPXSe4Lna13RaXmvrFuAPA" name="storyboard,_YAuXsQNHEeKgIrW2BoUv0Q" guid="-QPXSe4Lna13RaXmvrFuAPA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-z2JDiurV2GDpRdpV_JpC_Q" name="user_role,_YAyCEANHEeKgIrW2BoUv0Q" guid="-z2JDiurV2GDpRdpV_JpC_Q">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NgFA5H5pjPUMdfcT4Eg8GA" name="build,_YBX38QNHEeKgIrW2BoUv0Q" guid="-NgFA5H5pjPUMdfcT4Eg8GA">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7_z2PJ1UxiUsQa4BFNhciw" name="design,_YBa7QQNHEeKgIrW2BoUv0Q" guid="-7_z2PJ1UxiUsQa4BFNhciw">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oF8wEARoBn-6gwuV9_JLbQ" name="developer_test,_YBd-kQNHEeKgIrW2BoUv0Q" guid="-oF8wEARoBn-6gwuV9_JLbQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tldS6QzQaYsdLqe_ZhZ6CA" name="implementation,_YBhB4QNHEeKgIrW2BoUv0Q" guid="-tldS6QzQaYsdLqe_ZhZ6CA">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zolTdeTWZr9HNiv5wKl5Mg" name="it_services_strategy,_YByusQNHEeKgIrW2BoUv0Q" guid="-zolTdeTWZr9HNiv5wKl5Mg">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-O0QkWHbNhsXH6u3_teDUtg" name="software_dist_plan,_YB2ZEQNHEeKgIrW2BoUv0Q" guid="-O0QkWHbNhsXH6u3_teDUtg">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1OhjhjfB2RTp4jBjPPDDrw" name="project_manager,_YIYe4QNHEeKgIrW2BoUv0Q" guid="-1OhjhjfB2RTp4jBjPPDDrw">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5stUGBcMT7ofBOYBghswXw" name="architect,_YIdXYQNHEeKgIrW2BoUv0Q" guid="-5stUGBcMT7ofBOYBghswXw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hg8cLEQRtep6J43YOx-3iA" name="tester,_YIiP4QNHEeKgIrW2BoUv0Q" guid="-hg8cLEQRtep6J43YOx-3iA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CqhhUQ2Lh16ZOPlgxnPnPw" name="test_case,_YItPAQNHEeKgIrW2BoUv0Q" guid="-CqhhUQ2Lh16ZOPlgxnPnPw">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-75d6-aenge28ZYHXyJ-Hnw" name="it_services_strategy,_YI3AAQNHEeKgIrW2BoUv0Q" guid="-75d6-aenge28ZYHXyJ-Hnw">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0UbhzLpMyt_l_NXCIODxWg" name="software_dist_plan,_YI4OIQNHEeKgIrW2BoUv0Q" guid="-0UbhzLpMyt_l_NXCIODxWg">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LHeZkQRipS8fd_Kl0c8JvQ" name="architecture_notebook,_YI6DUQNHEeKgIrW2BoUv0Q" guid="-LHeZkQRipS8fd_Kl0c8JvQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jZolvqQfV06A0TK2eE0q7A" name="stakeholder_request.add,_YJGQkQNHEeKgIrW2BoUv0Q" guid="-jZolvqQfV06A0TK2eE0q7A">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-X1XerZSZl0XOMB6NSWqOvA" name="user_support_specs,_YJOMYQNHEeKgIrW2BoUv0Q" guid="-X1XerZSZl0XOMB6NSWqOvA">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4P1n2rI11Aq5BNEoOKm9FQ" name="requirements_attributes.add,_YJPagQNHEeKgIrW2BoUv0Q" guid="-4P1n2rI11Aq5BNEoOKm9FQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DWofLQHgg2T5zgk0WUbFOA" name="requirements_traceability,_YJR2wQNHEeKgIrW2BoUv0Q" guid="-DWofLQHgg2T5zgk0WUbFOA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kM31CFiDp-kt7fhwesRGhg" name="requirements_management_process_description,_YJTr8QNHEeKgIrW2BoUv0Q" guid="-kM31CFiDp-kt7fhwesRGhg">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-B_-nySiAZy6BaM9sAhAhqw" name="glossary,_YJVhIQNHEeKgIrW2BoUv0Q" guid="-B_-nySiAZy6BaM9sAhAhqw">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_9D8s5qD8gZ79_E_V_yIjQ" name="storyboard,_YJX9YANHEeKgIrW2BoUv0Q" guid="-_9D8s5qD8gZ79_E_V_yIjQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-a9vJy-yoD3VCzDBPxXUUMA" name="user_role,_YJZykQNHEeKgIrW2BoUv0Q" guid="-a9vJy-yoD3VCzDBPxXUUMA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yzEvNosqkaAJRRMN9skkTA" name="build,_YJ_BYQNHEeKgIrW2BoUv0Q" guid="-yzEvNosqkaAJRRMN9skkTA">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JAYsS_6u8MBTboAZvO0Pjg" name="design,_YKA2kQNHEeKgIrW2BoUv0Q" guid="-JAYsS_6u8MBTboAZvO0Pjg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gLLKJKaozq7AgTCHYBPYDg" name="developer_test,_YKCrwQNHEeKgIrW2BoUv0Q" guid="-gLLKJKaozq7AgTCHYBPYDg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tGIUzhINAU_eWnn_-nTL_g" name="implementation,_YKEg8QNHEeKgIrW2BoUv0Q" guid="-tGIUzhINAU_eWnn_-nTL_g">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dZxzITWVk_lCOCvqmigV8Q" name="any_role,_YKSjYQNHEeKgIrW2BoUv0Q" guid="-dZxzITWVk_lCOCvqmigV8Q">
    <refinedDescription>&lt;p>&#xD;
    This role allows anyone on a team to perform general tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Access artifacts in the configuration control system for development and maintenance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Submit change requests for the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Participate in assessments and reviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Volunteer to work on a particular iteration&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iro7E_RTkePM0Lo47H50Fg" name="project_manager,_YLYIgQNHEeKgIrW2BoUv0Q" guid="-iro7E_RTkePM0Lo47H50Fg">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ESq4SFtDsipkEvvGTDZt7Q" name="architect,_YLby4QNHEeKgIrW2BoUv0Q" guid="-ESq4SFtDsipkEvvGTDZt7Q">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HztP0Cy_BCTWVsGA7Eec7g" name="tester,_YLgEUQNHEeKgIrW2BoUv0Q" guid="-HztP0Cy_BCTWVsGA7Eec7g">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OCTByn9bMKZzS4bkcxIEUw" name="it_services_strategy,_YLp1UQNHEeKgIrW2BoUv0Q" guid="-OCTByn9bMKZzS4bkcxIEUw">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NCyi9kd9hRxK0UQmveAyJw" name="software_dist_plan,_YLrqgQNHEeKgIrW2BoUv0Q" guid="-NCyi9kd9hRxK0UQmveAyJw">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KeaGTSd-FUC1WGFbEMAMWQ" name="architecture_notebook,_YLs4oQNHEeKgIrW2BoUv0Q" guid="-KeaGTSd-FUC1WGFbEMAMWQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Q9vGWRasvhx0M_RKR9fywA" name="risk_list,_YL5F4QNHEeKgIrW2BoUv0Q" guid="-Q9vGWRasvhx0M_RKR9fywA">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KgOr0WoXQUm9DLOPdF5acA" name="test_case,_YMNO8QNHEeKgIrW2BoUv0Q" guid="-KgOr0WoXQUm9DLOPdF5acA">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QDbhIuVMt1Aa8W2ycitu9w" name="build,_YMbRYANHEeKgIrW2BoUv0Q" guid="-QDbhIuVMt1Aa8W2ycitu9w">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oKcG1G_JoKSD7aes5txFEg" name="design,_YMdGkQNHEeKgIrW2BoUv0Q" guid="-oKcG1G_JoKSD7aes5txFEg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-145rafScVUlvsH6_9D9ukA" name="developer_test,_YMe7wQNHEeKgIrW2BoUv0Q" guid="-145rafScVUlvsH6_9D9ukA">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pV21qChQCaDRuqN50A4M6Q" name="implementation,_YMgw8QNHEeKgIrW2BoUv0Q" guid="-pV21qChQCaDRuqN50A4M6Q">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iIudaPv-ggDYt6edI7VRGw" name="stakeholder_request.add,_YMuzYQNHEeKgIrW2BoUv0Q" guid="-iIudaPv-ggDYt6edI7VRGw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5Xay88GdSPqobd_NMF5gkg" name="user_support_specs,_YM2vMQNHEeKgIrW2BoUv0Q" guid="-5Xay88GdSPqobd_NMF5gkg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fQ85UABtB7c9lCvP9gb0JA" name="requirements_attributes.add,_YM4kYQNHEeKgIrW2BoUv0Q" guid="-fQ85UABtB7c9lCvP9gb0JA">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lnkAIXbmPt6mWhguJJg6CA" name="requirements_traceability,_YM6ZkQNHEeKgIrW2BoUv0Q" guid="-lnkAIXbmPt6mWhguJJg6CA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OHS0rW8ltHzkM2XAZGodag" name="requirements_management_process_description,_YM8OwQNHEeKgIrW2BoUv0Q" guid="-OHS0rW8ltHzkM2XAZGodag">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NOUkc2LzhgE8kgKCRc4u8Q" name="vision,_YM-D8QNHEeKgIrW2BoUv0Q" guid="-NOUkc2LzhgE8kgKCRc4u8Q">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nKniWplEfEIDtLV2Tng2Cw" name="glossary,_YM_5IQNHEeKgIrW2BoUv0Q" guid="-nKniWplEfEIDtLV2Tng2Cw">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-i8ekh-S56nC2wx8Rv07H1g" name="storyboard,_YNBuUQNHEeKgIrW2BoUv0Q" guid="-i8ekh-S56nC2wx8Rv07H1g">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vik7qAZ3FDbKD7AT05S7Gg" name="user_role,_YNEKkQNHEeKgIrW2BoUv0Q" guid="-vik7qAZ3FDbKD7AT05S7Gg">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RSe9GaTJKJRRPDpecS0laQ" name="requirements_management_process_description,_YTj0IQNHEeKgIrW2BoUv0Q" guid="-RSe9GaTJKJRRPDpecS0laQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0MInD7xC3XpLiOf5XI1P2w" name="vision,_YTlCQQNHEeKgIrW2BoUv0Q" guid="-0MInD7xC3XpLiOf5XI1P2w">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0BarK21ZsHcG7R7fF4ddVg" name="glossary,_YTmQYQNHEeKgIrW2BoUv0Q" guid="-0BarK21ZsHcG7R7fF4ddVg">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tPFyUmXeaIIsi_4KUbx_IA" name="storyboard,_YTnegQNHEeKgIrW2BoUv0Q" guid="-tPFyUmXeaIIsi_4KUbx_IA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9rYbfeTiA64Ltv8FRGFriA" name="user_role,_YTosoQNHEeKgIrW2BoUv0Q" guid="-9rYbfeTiA64Ltv8FRGFriA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7QPEVJcSOJsFouk_R6zfVg" name="iteration_plan_project,_YUKREQNHEeKgIrW2BoUv0Q" guid="-7QPEVJcSOJsFouk_R6zfVg">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-e41wMYR16GjX0XrWbCCkAg" name="risk_list,_YULfMQNHEeKgIrW2BoUv0Q" guid="-e41wMYR16GjX0XrWbCCkAg">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8idBNN1LXeyTL5Y6X99t4g" name="build,_YUfoQQNHEeKgIrW2BoUv0Q" guid="-8idBNN1LXeyTL5Y6X99t4g">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vx1yBM5i-mSFNbb_ue8twQ" name="developer_test,_YUg2YQNHEeKgIrW2BoUv0Q" guid="-vx1yBM5i-mSFNbb_ue8twQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WO4DZ8WPx8G6X_mhe0RLBw" name="implementation,_YUjSoANHEeKgIrW2BoUv0Q" guid="-WO4DZ8WPx8G6X_mhe0RLBw">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-obwUjGaZmd6zPSeEI96zrA" name="architect,_YQJ60QNHEeKgIrW2BoUv0Q" guid="-obwUjGaZmd6zPSeEI96zrA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-E2lIM46h71IsVQFXbmiGxw" name="it_services_strategy,_YQNlMQNHEeKgIrW2BoUv0Q" guid="-E2lIM46h71IsVQFXbmiGxw">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AvDdkMunXUSUCD133fWJtg" name="software_dist_plan,_YQOzUQNHEeKgIrW2BoUv0Q" guid="-AvDdkMunXUSUCD133fWJtg">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CpMVrlH835q_N8ftTv899Q" name="architecture_notebook,_YQQBcQNHEeKgIrW2BoUv0Q" guid="-CpMVrlH835q_N8ftTv899Q">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SOZeFGQOGgZqWFkuHslyLQ" name="build,_YQf5EQNHEeKgIrW2BoUv0Q" guid="-SOZeFGQOGgZqWFkuHslyLQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EVE3CZkTTQG_5mnfEN_u9Q" name="project_manager,_YQn04QNHEeKgIrW2BoUv0Q" guid="-EVE3CZkTTQG_5mnfEN_u9Q">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3iLvi5xOcpRGRttzoNGVYg" name="tester,_YQ0pMQNHEeKgIrW2BoUv0Q" guid="-3iLvi5xOcpRGRttzoNGVYg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wCf4e8MekX9r8Go2hGRNFg" name="test_case,_YQ7W4QNHEeKgIrW2BoUv0Q" guid="-wCf4e8MekX9r8Go2hGRNFg">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vJJ6be2oWCxr_xSLoM8o5Q" name="design,_YRNDsQNHEeKgIrW2BoUv0Q" guid="-vJJ6be2oWCxr_xSLoM8o5Q">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UtHxxaZ3CrtN0bkXXB94zw" name="developer_test,_YRO44QNHEeKgIrW2BoUv0Q" guid="-UtHxxaZ3CrtN0bkXXB94zw">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ydyyFhifKPDZ4SnxtIPRjg" name="implementation,_YRQHAQNHEeKgIrW2BoUv0Q" guid="-ydyyFhifKPDZ4SnxtIPRjg">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pyh5epSB1juyvzkcVgtayg" name="user_support_specs,_YRpIkQNHEeKgIrW2BoUv0Q" guid="-pyh5epSB1juyvzkcVgtayg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ccac8LYHwMkdN_aqvavd2A" name="requirements_attributes.add,_YRq9wQNHEeKgIrW2BoUv0Q" guid="-Ccac8LYHwMkdN_aqvavd2A">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jKwVSXzfDigU5BXL17BlkA" name="requirements_traceability,_YRsy8QNHEeKgIrW2BoUv0Q" guid="-jKwVSXzfDigU5BXL17BlkA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vfE-8r7gP_8p26omMw_9ig" name="requirements_management_process_description,_YRuoIQNHEeKgIrW2BoUv0Q" guid="-vfE-8r7gP_8p26omMw_9ig">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-v-yglqmJd_qE6652SPL1Rg" name="vision,_YRwdUQNHEeKgIrW2BoUv0Q" guid="-v-yglqmJd_qE6652SPL1Rg">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jPH6PhkdX71JXPs2y6LSJg" name="glossary,_YRy5kANHEeKgIrW2BoUv0Q" guid="-jPH6PhkdX71JXPs2y6LSJg">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5vt8VTWSo0esIdnc6k4l1w" name="storyboard,_YR184QNHEeKgIrW2BoUv0Q" guid="-5vt8VTWSo0esIdnc6k4l1w">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rpKNAOHRwS1KxL26GwdbNQ" name="user_role,_YR3yEQNHEeKgIrW2BoUv0Q" guid="-rpKNAOHRwS1KxL26GwdbNQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-J3ThDucspPOIyJjt6nh2bg" name="stakeholder_request.add,_YSQMkQNHEeKgIrW2BoUv0Q" guid="-J3ThDucspPOIyJjt6nh2bg">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-h-1BsCfJkAEZ-VprmMHj8w" name="architect,_YOLk4QNHEeKgIrW2BoUv0Q" guid="-h-1BsCfJkAEZ-VprmMHj8w">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QreZ5iUJOmLl-mmakjltKA" name="project_manager,_YOML8QNHEeKgIrW2BoUv0Q" guid="-QreZ5iUJOmLl-mmakjltKA">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CW_o-bub-GAU7edeLhzQUw" name="storyboard,_YOSSkQNHEeKgIrW2BoUv0Q" guid="-CW_o-bub-GAU7edeLhzQUw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--OsTy18HVYl_i7i-WsFBWw" name="user_support_specs,_YOft8QNHEeKgIrW2BoUv0Q" guid="--OsTy18HVYl_i7i-WsFBWw">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-U2LeGNNqVP_IiGu71S9Lpw" name="requirements_attributes.add,_YOhjIQNHEeKgIrW2BoUv0Q" guid="-U2LeGNNqVP_IiGu71S9Lpw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4l2YQ0okoDd-qYwzzfT-Sw" name="requirements_traceability,_YOixQQNHEeKgIrW2BoUv0Q" guid="-4l2YQ0okoDd-qYwzzfT-Sw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aO_JStf096W4MS3WROjPYA" name="requirements_management_process_description,_YOkmcQNHEeKgIrW2BoUv0Q" guid="-aO_JStf096W4MS3WROjPYA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_e0aZvQqg0xufjRK-DXfLQ" name="user_role,_YOnpwQNHEeKgIrW2BoUv0Q" guid="-_e0aZvQqg0xufjRK-DXfLQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kyhanTY9U0PvUYVgCwWH1w" name="stakeholder_request.add,_YO1FIQNHEeKgIrW2BoUv0Q" guid="-kyhanTY9U0PvUYVgCwWH1w">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cQ1K-gGhazrg3QKii5_67g" name="iteration_plan_project,_YO-PEQNHEeKgIrW2BoUv0Q" guid="-cQ1K-gGhazrg3QKii5_67g">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kTixqFJ403MInPEw5ZW6ww" name="risk_list,_YPAEQQNHEeKgIrW2BoUv0Q" guid="-kTixqFJ403MInPEw5ZW6ww">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Fgtq_d5YYkFhI6So9DeGGg" name="it_services_strategy,_YPUNUQNHEeKgIrW2BoUv0Q" guid="-Fgtq_d5YYkFhI6So9DeGGg">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-S_aHNO9UWn3P5bAAW-iOfw" name="software_dist_plan,_YPVbcQNHEeKgIrW2BoUv0Q" guid="-S_aHNO9UWn3P5bAAW-iOfw">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LDQD4kGhZi5reCRlPWDaaA" name="build,_YPzVgQNHEeKgIrW2BoUv0Q" guid="-LDQD4kGhZi5reCRlPWDaaA">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kCuEU4sS2ET97278oegopg" name="design,_YP3m8QNHEeKgIrW2BoUv0Q" guid="-kCuEU4sS2ET97278oegopg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QPzrZdCPjoElefMYFYDN1g" name="developer_test,_YP6DMQNHEeKgIrW2BoUv0Q" guid="-QPzrZdCPjoElefMYFYDN1g">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sMIVdeQkFIcUpRUb-QZCnA" name="implementation,_YP8fcQNHEeKgIrW2BoUv0Q" guid="-sMIVdeQkFIcUpRUb-QZCnA">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4nOAfYnQ-RDf0xxnvdFyug" name="project_manager,_YWMRYQNHEeKgIrW2BoUv0Q" guid="-4nOAfYnQ-RDf0xxnvdFyug">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xkb57aUgUVX9i3juiVwelg" name="architect,_YWP7wQNHEeKgIrW2BoUv0Q" guid="-xkb57aUgUVX9i3juiVwelg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ax99hsGtBXiBR-VEDYvBSg" name="tester,_YWUNMQNHEeKgIrW2BoUv0Q" guid="-Ax99hsGtBXiBR-VEDYvBSg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-b8JAEeYuK4j_OSSZvDc8cg" name="build,_YWelQQNHEeKgIrW2BoUv0Q" guid="-b8JAEeYuK4j_OSSZvDc8cg">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0PPe_y5QPIhGN9P8dzX69A" name="design,_YWgacQNHEeKgIrW2BoUv0Q" guid="-0PPe_y5QPIhGN9P8dzX69A">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GQ0q-fc-Gyp6LFa2nhKClQ" name="developer_test,_YWhokQNHEeKgIrW2BoUv0Q" guid="-GQ0q-fc-Gyp6LFa2nhKClQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CMo0ZxV6LxybYwrUne3Wmg" name="implementation,_YWjdwQNHEeKgIrW2BoUv0Q" guid="-CMo0ZxV6LxybYwrUne3Wmg">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6Hp9FXCNVWv_e0c8dbf2Rg" name="test_case,_YW4N4QNHEeKgIrW2BoUv0Q" guid="-6Hp9FXCNVWv_e0c8dbf2Rg">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0eEI91Oq0Fojwjfgy-dMAg" name="risk_list,_YXB-4QNHEeKgIrW2BoUv0Q" guid="-0eEI91Oq0Fojwjfgy-dMAg">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-i8rvIg7pEHoD-TLgqdNFpA" name="stakeholder_request.add,_YXOzMQNHEeKgIrW2BoUv0Q" guid="-i8rvIg7pEHoD-TLgqdNFpA">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-C-8rmXhOqmRGNkyfIVF4Qg" name="it_services_strategy,_YXVg4QNHEeKgIrW2BoUv0Q" guid="-C-8rmXhOqmRGNkyfIVF4Qg">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-R0RoWuWaUeDNs3qZNILCtw" name="software_dist_plan,_YXX9IQNHEeKgIrW2BoUv0Q" guid="-R0RoWuWaUeDNs3qZNILCtw">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-82Dft82Wm2y2jWInGM-D1Q" name="architecture_notebook,_YXaZYQNHEeKgIrW2BoUv0Q" guid="-82Dft82Wm2y2jWInGM-D1Q">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MdN2H2B41IDlB8yq-wogyg" name="user_support_specs,_YXl_kQNHEeKgIrW2BoUv0Q" guid="-MdN2H2B41IDlB8yq-wogyg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1SDn2emuFZkXKb_CtX3nyw" name="requirements_attributes.add,_YXn0wQNHEeKgIrW2BoUv0Q" guid="-1SDn2emuFZkXKb_CtX3nyw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VZR4pzYpqAYR9LCEpFujoA" name="requirements_traceability,_YXqRAQNHEeKgIrW2BoUv0Q" guid="-VZR4pzYpqAYR9LCEpFujoA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-F6gDfoDHOeU6LyySbIiLGw" name="requirements_management_process_description,_YXsGMQNHEeKgIrW2BoUv0Q" guid="-F6gDfoDHOeU6LyySbIiLGw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-H4PzQPzTxniuoPz0Xz01Fg" name="vision,_YXuicQNHEeKgIrW2BoUv0Q" guid="-H4PzQPzTxniuoPz0Xz01Fg">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mkXlgVRUkKsolUIJ5dN7VA" name="glossary,_YXwXoQNHEeKgIrW2BoUv0Q" guid="-mkXlgVRUkKsolUIJ5dN7VA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Xcg315XIyUo9oG7c6rGbBA" name="storyboard,_YXyz4QNHEeKgIrW2BoUv0Q" guid="-Xcg315XIyUo9oG7c6rGbBA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XJ-XF2AdRGlGV7Vr6Zrtlg" name="user_role,_YX1QIQNHEeKgIrW2BoUv0Q" guid="-XJ-XF2AdRGlGV7Vr6Zrtlg">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0Lq5hNYy1-I3kbHG2ddwLA" name="process_engineer,_YZcZsQNHEeKgIrW2BoUv0Q" guid="-0Lq5hNYy1-I3kbHG2ddwLA">
    <refinedDescription>&lt;p>&#xD;
    This role plays an important part of any management team of a software project. The role is responsible for&#xD;
    all process related aspects of the project, such as :&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Tailoring the process to match the specific needs of the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Educating and mentoring project members on process related issues.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that valuable project experience is harvested and fed back into the process.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8bGUZPiUa74Nhmie9SzluA" name="project_manager,_YaSuQQNHEeKgIrW2BoUv0Q" guid="-8bGUZPiUa74Nhmie9SzluA">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HNVmY1bCoPL8b2_tqsLXgA" name="architect,_YaW_sQNHEeKgIrW2BoUv0Q" guid="-HNVmY1bCoPL8b2_tqsLXgA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k3vN6Kts7YCJM9KGuGDGBw" name="tester,_YabRIQNHEeKgIrW2BoUv0Q" guid="-k3vN6Kts7YCJM9KGuGDGBw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ohpK7cYSoLYPA1PwVSdFMQ" name="user_support_specs,_YagJoQNHEeKgIrW2BoUv0Q" guid="-ohpK7cYSoLYPA1PwVSdFMQ">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-G0vTRMqq_3FCY-Q9AQur0g" name="requirements_attributes.add,_Yah-0ANHEeKgIrW2BoUv0Q" guid="-G0vTRMqq_3FCY-Q9AQur0g">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hiDPS3EPD_Bg8qYlLn_qVA" name="requirements_traceability,_YajM8QNHEeKgIrW2BoUv0Q" guid="-hiDPS3EPD_Bg8qYlLn_qVA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DhzhNAmJLieS1kkp7CFxKw" name="requirements_management_process_description,_YalCIQNHEeKgIrW2BoUv0Q" guid="-DhzhNAmJLieS1kkp7CFxKw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-azlca9FTuvFkll52bpzfTA" name="glossary,_Yam3UQNHEeKgIrW2BoUv0Q" guid="-azlca9FTuvFkll52bpzfTA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-J1YwACeOzjh1prED9ujjBg" name="storyboard,_YaosgQNHEeKgIrW2BoUv0Q" guid="-J1YwACeOzjh1prED9ujjBg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ALBcjKuBgRylpP3ko5YpkQ" name="user_role,_YaqhsQNHEeKgIrW2BoUv0Q" guid="-ALBcjKuBgRylpP3ko5YpkQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZNH6IgXvIqhQ4VYedyr2JQ" name="build,_YbDjQQNHEeKgIrW2BoUv0Q" guid="-ZNH6IgXvIqhQ4VYedyr2JQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hdzSt47aD7vw-jOX8Tfgxg" name="design,_YbFYcQNHEeKgIrW2BoUv0Q" guid="-hdzSt47aD7vw-jOX8Tfgxg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WMF7mM3aez3MkdvrK7SnOw" name="developer_test,_YbHNoQNHEeKgIrW2BoUv0Q" guid="-WMF7mM3aez3MkdvrK7SnOw">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HzK35lXBoyrILJy_d1THlg" name="implementation,_YbJp4QNHEeKgIrW2BoUv0Q" guid="-HzK35lXBoyrILJy_d1THlg">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lZX5CHNFYOkyI1JFsvRG0Q" name="test_case,_YbWeMQNHEeKgIrW2BoUv0Q" guid="-lZX5CHNFYOkyI1JFsvRG0Q">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-d3ijmQ3JgFRe0Krvtux47g" name="stakeholder_request.add,_YbircQNHEeKgIrW2BoUv0Q" guid="-d3ijmQ3JgFRe0Krvtux47g">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JnAALbz2z715erH6zyJmdA" name="it_services_strategy,_Yb7F8QNHEeKgIrW2BoUv0Q" guid="-JnAALbz2z715erH6zyJmdA">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CbjnsNbktoI6YtL0KyzN1Q" name="software_dist_plan,_Yb9iMQNHEeKgIrW2BoUv0Q" guid="-CbjnsNbktoI6YtL0KyzN1Q">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-01d9djw6ZezU9MQOw2l3PA" name="any_role,_YcKWgQNHEeKgIrW2BoUv0Q" guid="-01d9djw6ZezU9MQOw2l3PA">
    <refinedDescription>&lt;p>&#xD;
    This role allows anyone on a team to perform general tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Access artifacts in the configuration control system for development and maintenance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Submit change requests for the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Participate in assessments and reviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Volunteer to work on a particular iteration&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Tl4lx_w606IB41IQQ_T1GQ" name="iteration_plan_project,_Ygs4QQNHEeKgIrW2BoUv0Q" guid="-Tl4lx_w606IB41IQQ_T1GQ">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mcj85XwVKQYHwr8GGilwwA" name="risk_list,_YgtfUQNHEeKgIrW2BoUv0Q" guid="-mcj85XwVKQYHwr8GGilwwA">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-drl0L2I1uudViCv-QldagA" name="requirements_management_process_description,_YjJIQQNHEeKgIrW2BoUv0Q" guid="-drl0L2I1uudViCv-QldagA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CzsYNwlziQrgiS6HeSKWmw" name="vision,_YjK9cQNHEeKgIrW2BoUv0Q" guid="-CzsYNwlziQrgiS6HeSKWmw">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gqMv6oAEPyQdwCjR-iekGQ" name="glossary,_YjMLkQNHEeKgIrW2BoUv0Q" guid="-gqMv6oAEPyQdwCjR-iekGQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GnqVmji3U1jphasDItc0mQ" name="storyboard,_YjOAwQNHEeKgIrW2BoUv0Q" guid="-GnqVmji3U1jphasDItc0mQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Z7UDQzAYlGbratcPy5hhmw" name="user_role,_YjP18QNHEeKgIrW2BoUv0Q" guid="-Z7UDQzAYlGbratcPy5hhmw">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qyGgkG0lQ1SPhCa0SwtMPQ" name="build,_YjuXEANHEeKgIrW2BoUv0Q" guid="-qyGgkG0lQ1SPhCa0SwtMPQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UMdBbY-ZAWez61UbcQUgPg" name="developer_test,_YjwMQQNHEeKgIrW2BoUv0Q" guid="-UMdBbY-ZAWez61UbcQUgPg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2jRii4MsU7TPgjZj950qjQ" name="implementation,_YjxaYQNHEeKgIrW2BoUv0Q" guid="-2jRii4MsU7TPgjZj950qjQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bGVYSc6qbMOObUcmd4Tofw" name="project_manager,_YdZFkQNHEeKgIrW2BoUv0Q" guid="-bGVYSc6qbMOObUcmd4Tofw">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-URVUGljWzIfgFOqR1GAHAA" name="architect,_YdfzQQNHEeKgIrW2BoUv0Q" guid="-URVUGljWzIfgFOqR1GAHAA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-S4ZJtM1iRMbtpD4hUgwoYA" name="tester,_Ydl54QNHEeKgIrW2BoUv0Q" guid="-S4ZJtM1iRMbtpD4hUgwoYA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Kr_9f6x-I0VHPx5cLJgJDQ" name="test_case,_Ydt1sQNHEeKgIrW2BoUv0Q" guid="-Kr_9f6x-I0VHPx5cLJgJDQ">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZIBAYyXnvonsrhUBkE0Ifw" name="build,_Yd5b4QNHEeKgIrW2BoUv0Q" guid="-ZIBAYyXnvonsrhUBkE0Ifw">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iXE_SKkWK8UMKviHYPsPkg" name="design,_Yd74IQNHEeKgIrW2BoUv0Q" guid="-iXE_SKkWK8UMKviHYPsPkg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Cz_3jZBMTV2YweMmCd7Efw" name="developer_test,_Yd9tUQNHEeKgIrW2BoUv0Q" guid="-Cz_3jZBMTV2YweMmCd7Efw">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QbgXyvOjxHr-umaxzDR-qw" name="implementation,_Yd_igQNHEeKgIrW2BoUv0Q" guid="-QbgXyvOjxHr-umaxzDR-qw">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nhgVwfz4In6X8pF9klbOwA" name="user_support_specs,_YeMW0QNHEeKgIrW2BoUv0Q" guid="-nhgVwfz4In6X8pF9klbOwA">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BqYjOVtaL21H4b-Bnn9Qrg" name="requirements_attributes.add,_YeOzEQNHEeKgIrW2BoUv0Q" guid="-BqYjOVtaL21H4b-Bnn9Qrg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-b86Bxh1g_eUzUIcBEU9U-A" name="requirements_traceability,_YeQoQQNHEeKgIrW2BoUv0Q" guid="-b86Bxh1g_eUzUIcBEU9U-A">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TSabDlOGu8ODziPe9IDEqw" name="requirements_management_process_description,_YeTEgQNHEeKgIrW2BoUv0Q" guid="-TSabDlOGu8ODziPe9IDEqw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-I96I3jK-p54s_QoxrRa7Uw" name="vision,_YeVgwQNHEeKgIrW2BoUv0Q" guid="-I96I3jK-p54s_QoxrRa7Uw">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zaC-j6jPeTzxzL0loJi_DA" name="glossary,_YeYkEQNHEeKgIrW2BoUv0Q" guid="-zaC-j6jPeTzxzL0loJi_DA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HxbSTWUdLy8z6_8sWX39WQ" name="storyboard,_YecOcQNHEeKgIrW2BoUv0Q" guid="-HxbSTWUdLy8z6_8sWX39WQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gthy09m0zN1DHmqYGiH52g" name="user_role,_YefRwQNHEeKgIrW2BoUv0Q" guid="-gthy09m0zN1DHmqYGiH52g">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hdInLD_pBBWmr98ZKSJE7Q" name="stakeholder_request.add,_Ye7WoQNHEeKgIrW2BoUv0Q" guid="-hdInLD_pBBWmr98ZKSJE7Q">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mQOFFls5yjRkdNKMfxGQhw" name="it_services_strategy,_YfIyAQNHEeKgIrW2BoUv0Q" guid="-mQOFFls5yjRkdNKMfxGQhw">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9hqg-kj9188Vy1D8R3oemw" name="software_dist_plan,_YfL1UQNHEeKgIrW2BoUv0Q" guid="-9hqg-kj9188Vy1D8R3oemw">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-a4yMtwTcQvOsT6dJo0VINw" name="architecture_notebook,_YfORkQNHEeKgIrW2BoUv0Q" guid="-a4yMtwTcQvOsT6dJo0VINw">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Q21soBXSAP3qeRTXHBIjVw" name="project_manager,_YkucoQNHEeKgIrW2BoUv0Q" guid="-Q21soBXSAP3qeRTXHBIjVw">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jgR73G-0703sspiFeLSldg" name="architect,_YkyuEQNHEeKgIrW2BoUv0Q" guid="-jgR73G-0703sspiFeLSldg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aiEYCRlh_176LSKhf2Zfgw" name="tester,_Yk2YcQNHEeKgIrW2BoUv0Q" guid="-aiEYCRlh_176LSKhf2Zfgw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kGYcdXemMwpACzFfD0JEwA" name="build,_Yk7Q8QNHEeKgIrW2BoUv0Q" guid="-kGYcdXemMwpACzFfD0JEwA">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rQHqzF5HHsYeKTtThaGWBg" name="design,_Yk8fEQNHEeKgIrW2BoUv0Q" guid="-rQHqzF5HHsYeKTtThaGWBg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NXwXWLLIonTYHXyWAXqLtg" name="developer_test,_Yk-UQQNHEeKgIrW2BoUv0Q" guid="-NXwXWLLIonTYHXyWAXqLtg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-W4O8wIUa0kUpYn9t3gWvTQ" name="implementation,_YlAJcQNHEeKgIrW2BoUv0Q" guid="-W4O8wIUa0kUpYn9t3gWvTQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-REICU29YfyLkG0EVrcALIw" name="stakeholder_request.add,_YlcOUQNHEeKgIrW2BoUv0Q" guid="-REICU29YfyLkG0EVrcALIw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-j3WI21VlSOZ1bglDJbQPZw" name="it_services_strategy,_YljjEQNHEeKgIrW2BoUv0Q" guid="-j3WI21VlSOZ1bglDJbQPZw">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YodFUrximYXJa6l_GgpIfg" name="software_dist_plan,_YllYQQNHEeKgIrW2BoUv0Q" guid="-YodFUrximYXJa6l_GgpIfg">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kuP1mFH5NYkzcj5T_ajtnw" name="architecture_notebook,_YlmmYQNHEeKgIrW2BoUv0Q" guid="-kuP1mFH5NYkzcj5T_ajtnw">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Y2MDaY2HOP0CbDq2GH_glg" name="test_case,_YlxlgQNHEeKgIrW2BoUv0Q" guid="-Y2MDaY2HOP0CbDq2GH_glg">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tHIUc-7-H5XUkGLzCVHh_g" name="user_support_specs,_Yl8koQNHEeKgIrW2BoUv0Q" guid="-tHIUc-7-H5XUkGLzCVHh_g">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6VHomRi0Y9vNqFh_o5Ugog" name="requirements_attributes.add,_Yl-Z0QNHEeKgIrW2BoUv0Q" guid="-6VHomRi0Y9vNqFh_o5Ugog">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jRO3d4g4nXCCeSdmp94JFw" name="requirements_traceability,_YmAPAQNHEeKgIrW2BoUv0Q" guid="-jRO3d4g4nXCCeSdmp94JFw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YAzeN-WPDMiaozxhDmjoZA" name="requirements_management_process_description,_YmBdIQNHEeKgIrW2BoUv0Q" guid="-YAzeN-WPDMiaozxhDmjoZA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PpUSa2Pp1SgtDQrkXL6OVg" name="vision,_YmDSUQNHEeKgIrW2BoUv0Q" guid="-PpUSa2Pp1SgtDQrkXL6OVg">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wVbTy5OG-unOcwYZyaT8XA" name="glossary,_YmFHgQNHEeKgIrW2BoUv0Q" guid="-wVbTy5OG-unOcwYZyaT8XA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yi79mhIJoTtwGZIfzGAm6A" name="storyboard,_YmG8sQNHEeKgIrW2BoUv0Q" guid="-yi79mhIJoTtwGZIfzGAm6A">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kVb-8hxkVlDZnWVjkQLRQA" name="user_role,_YmJY8QNHEeKgIrW2BoUv0Q" guid="-kVb-8hxkVlDZnWVjkQLRQA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UTHqUcKmpNkfZ6Ylt2pCow" name="process_engineer,_-rcpUQN5EeKChvM9b5PTSQ" guid="-UTHqUcKmpNkfZ6Ylt2pCow">
    <refinedDescription>&lt;p>&#xD;
    This role plays an important part of any management team of a software project. The role is responsible for&#xD;
    all process related aspects of the project, such as :&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Tailoring the process to match the specific needs of the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Educating and mentoring project members on process related issues.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that valuable project experience is harvested and fed back into the process.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yBje6Uqi2LyjG_HU3he2rg" name="architect,_-t-Y4QN5EeKChvM9b5PTSQ" guid="-yBje6Uqi2LyjG_HU3he2rg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tfgPPLCqRKCOqRio9eab6w" name="tester,_-uCqUQN5EeKChvM9b5PTSQ" guid="-tfgPPLCqRKCOqRio9eab6w">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5yUpkzRFcWQXVR3O4box3g" name="user_support_specs,_-uiZkAN5EeKChvM9b5PTSQ" guid="-5yUpkzRFcWQXVR3O4box3g">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9pnxcHuefByNx7zbcGkmZw" name="vision,_-umD8QN5EeKChvM9b5PTSQ" guid="-9pnxcHuefByNx7zbcGkmZw">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SVEvwslRHuRBHmHZRC2tyw" name="storyboard,_-uogMQN5EeKChvM9b5PTSQ" guid="-SVEvwslRHuRBHmHZRC2tyw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1NQ6x-0BkWsSd1gH2hAZ9Q" name="test_case,_-u6NAQN5EeKChvM9b5PTSQ" guid="-1NQ6x-0BkWsSd1gH2hAZ9Q">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bdQLyig2hYDATK3sbuoCww" name="build,_-vFzMQN5EeKChvM9b5PTSQ" guid="-bdQLyig2hYDATK3sbuoCww">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wRkKMCjmBe5GynCqimOIWQ" name="design,_-vHoYQN5EeKChvM9b5PTSQ" guid="-wRkKMCjmBe5GynCqimOIWQ">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ly1SbHH_2YWJ6JO1D6uOMg" name="developer_test,_-vJdkQN5EeKChvM9b5PTSQ" guid="-Ly1SbHH_2YWJ6JO1D6uOMg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5GvGVD-Uf7y_1QDQkns3fw" name="implementation,_-vL50QN5EeKChvM9b5PTSQ" guid="-5GvGVD-Uf7y_1QDQkns3fw">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qT-usj4_EveF6EUKbnXXPg" name="it_services_strategy,_-veNsQN5EeKChvM9b5PTSQ" guid="-qT-usj4_EveF6EUKbnXXPg">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UXhClWsthtRgE0BadBir4w" name="software_dist_plan,_-vgC4QN5EeKChvM9b5PTSQ" guid="-UXhClWsthtRgE0BadBir4w">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MWArgrZy8SvCWNUADcCtrw" name="architecture_notebook,_-vifIQN5EeKChvM9b5PTSQ" guid="-MWArgrZy8SvCWNUADcCtrw">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_A-_LwTMGjPw3m5Kf1IDDg" name="user_support_specs,_-xME8QN5EeKChvM9b5PTSQ" guid="-_A-_LwTMGjPw3m5Kf1IDDg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1qdqAu_5r1H17jwaZiwvXw" name="requirements_management_process_description,_-xNTEQN5EeKChvM9b5PTSQ" guid="-1qdqAu_5r1H17jwaZiwvXw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HlqCSWapY4zJfhqdfUZj5w" name="vision,_-xOhMQN5EeKChvM9b5PTSQ" guid="-HlqCSWapY4zJfhqdfUZj5w">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-70E2dYIau4SH1pB0hNQHvA" name="glossary,_-xPvUQN5EeKChvM9b5PTSQ" guid="-70E2dYIau4SH1pB0hNQHvA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2ivGYNHGaTtwhQN9yYpRiQ" name="storyboard,_-xQ9cQN5EeKChvM9b5PTSQ" guid="-2ivGYNHGaTtwhQN9yYpRiQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YT7SzPg7AugiEPyBxtXyeg" name="user_role,_-xSLkQN5EeKChvM9b5PTSQ" guid="-YT7SzPg7AugiEPyBxtXyeg">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Fjam9uScy_gQGQ69AdnmmA" name="iteration_plan_project,_-xsbQQN5EeKChvM9b5PTSQ" guid="-Fjam9uScy_gQGQ69AdnmmA">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CWzmDxYa0lfNhEF9TVlmKA" name="risk_list,_-xtpYQN5EeKChvM9b5PTSQ" guid="-CWzmDxYa0lfNhEF9TVlmKA">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nrQnqxwf0d5r61_B6Ny3zA" name="build,_-x858QN5EeKChvM9b5PTSQ" guid="-nrQnqxwf0d5r61_B6Ny3zA">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-w7mriErJw3JmZRhL8aOv0w" name="design,_-x-IEQN5EeKChvM9b5PTSQ" guid="-w7mriErJw3JmZRhL8aOv0w">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IqUnmVg7tpI35Rz4IeEA2g" name="developer_test,_-x_WMQN5EeKChvM9b5PTSQ" guid="-IqUnmVg7tpI35Rz4IeEA2g">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YXIEBx_MUIG-FQnV8JpblA" name="implementation,_-yAkUQN5EeKChvM9b5PTSQ" guid="-YXIEBx_MUIG-FQnV8JpblA">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XShhTJNti8xjw4X51OdC4A" name="project_manager,_-r25AQN5EeKChvM9b5PTSQ" guid="-XShhTJNti8xjw4X51OdC4A">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-O0zNfyePW5ak0UMxgcVCIg" name="architect,_-r7xgQN5EeKChvM9b5PTSQ" guid="-O0zNfyePW5ak0UMxgcVCIg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cCQebqwjGJ-pdrb-xGlK4w" name="tester,_-sAC8QN5EeKChvM9b5PTSQ" guid="-cCQebqwjGJ-pdrb-xGlK4w">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sLhtXp8s8wOVXc3dTVClKw" name="it_services_strategy,_-sGwoQN5EeKChvM9b5PTSQ" guid="-sLhtXp8s8wOVXc3dTVClKw">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-u7qf_nptYtcCCCP99y7VUw" name="software_dist_plan,_-sIl0QN5EeKChvM9b5PTSQ" guid="-u7qf_nptYtcCCCP99y7VUw">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Wx0el_OMxcLANGXcnEbmhw" name="build,_-sqxUQN5EeKChvM9b5PTSQ" guid="-Wx0el_OMxcLANGXcnEbmhw">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-f5rdxEzth-FoWOOcY_jDpA" name="design,_-ssmgAN5EeKChvM9b5PTSQ" guid="-f5rdxEzth-FoWOOcY_jDpA">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aatndibCic-JiUZEwB_XCA" name="developer_test,_-subsQN5EeKChvM9b5PTSQ" guid="-aatndibCic-JiUZEwB_XCA">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nOGgD0jjQ3nupzggtKSFEg" name="implementation,_-swQ4QN5EeKChvM9b5PTSQ" guid="-nOGgD0jjQ3nupzggtKSFEg">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Fc4BbcS3i464cOrSHEneDw" name="user_support_specs,_-s7QAQN5EeKChvM9b5PTSQ" guid="-Fc4BbcS3i464cOrSHEneDw">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6FeA--X3ZvY5aivNNRtfSA" name="requirements_attributes.add,_-s9sQQN5EeKChvM9b5PTSQ" guid="-6FeA--X3ZvY5aivNNRtfSA">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gLHDZJo6Mbf9EdAKVJPNeg" name="requirements_traceability,_-tAIgQN5EeKChvM9b5PTSQ" guid="-gLHDZJo6Mbf9EdAKVJPNeg">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZJRtEEJ2JxCs_YUIiBphwQ" name="requirements_management_process_description,_-tCkwQN5EeKChvM9b5PTSQ" guid="-ZJRtEEJ2JxCs_YUIiBphwQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AhiNz_S-DpUlSMLlXF9ayg" name="storyboard,_-tFoEQN5EeKChvM9b5PTSQ" guid="-AhiNz_S-DpUlSMLlXF9ayg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5Eb_Vt-LIKk4OugZ0s8fQA" name="user_role,_-tHdQQN5EeKChvM9b5PTSQ" guid="-5Eb_Vt-LIKk4OugZ0s8fQA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-s_60kl0bJFq7zhjvndIKYQ" name="test_case,_-tc0cQN5EeKChvM9b5PTSQ" guid="-s_60kl0bJFq7zhjvndIKYQ">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tajMCcR1_6w-SUr2G5LUcg" name="project_manager,_-zej8QN5EeKChvM9b5PTSQ" guid="-tajMCcR1_6w-SUr2G5LUcg">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-L8vyPIOCcl0x47fdEGgbbA" name="architect,_-ziOUQN5EeKChvM9b5PTSQ" guid="-L8vyPIOCcl0x47fdEGgbbA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DMKtw8JWYQaihpriN9COGg" name="tester,_-zl4sQN5EeKChvM9b5PTSQ" guid="-DMKtw8JWYQaihpriN9COGg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-adakso-5YNzZqz5plyD88Q" name="it_services_strategy,_-zqxMAN5EeKChvM9b5PTSQ" guid="-adakso-5YNzZqz5plyD88Q">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-r0XQS23KFED2tv7ClfTGhg" name="software_dist_plan,_-zr_UQN5EeKChvM9b5PTSQ" guid="-r0XQS23KFED2tv7ClfTGhg">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dtf5eziBgBs1K-LH7s2YUQ" name="architecture_notebook,_-zubkQN5EeKChvM9b5PTSQ" guid="-dtf5eziBgBs1K-LH7s2YUQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9fx6pzkAkGyAXY0kXuHdSQ" name="test_case,_-z728QN5EeKChvM9b5PTSQ" guid="-9fx6pzkAkGyAXY0kXuHdSQ">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KMvB7tigk4fvA7iBPGPqKQ" name="user_support_specs,_-0IrQAN5EeKChvM9b5PTSQ" guid="-KMvB7tigk4fvA7iBPGPqKQ">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NEDiF9ZcarNe3L9mPxVQZg" name="requirements_attributes.add,_-0KgcQN5EeKChvM9b5PTSQ" guid="-NEDiF9ZcarNe3L9mPxVQZg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZZZ-SGYxNNauXFEBIuVz4A" name="requirements_traceability,_-0M8sQN5EeKChvM9b5PTSQ" guid="-ZZZ-SGYxNNauXFEBIuVz4A">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ihQDZGpNOJAFkwFyrn3Kaw" name="requirements_management_process_description,_-0Ox4QN5EeKChvM9b5PTSQ" guid="-ihQDZGpNOJAFkwFyrn3Kaw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wDISV-sTdkYpz9djUmAu6Q" name="glossary,_-0ROIAN5EeKChvM9b5PTSQ" guid="-wDISV-sTdkYpz9djUmAu6Q">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mjE1h_hOKmL5hvONFZEScA" name="storyboard,_-0ScQQN5EeKChvM9b5PTSQ" guid="-mjE1h_hOKmL5hvONFZEScA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hhg2Ltppnkf0J3hpZQIVzg" name="user_role,_-0URcQN5EeKChvM9b5PTSQ" guid="-hhg2Ltppnkf0J3hpZQIVzg">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9wye9mE9nIizWDQNuwOvPA" name="build,_-0nMYQN5EeKChvM9b5PTSQ" guid="-9wye9mE9nIizWDQNuwOvPA">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-d0SJGPxNN6BF_XcnvMpfZw" name="design,_-0oagQN5EeKChvM9b5PTSQ" guid="-d0SJGPxNN6BF_XcnvMpfZw">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-etLAuX6b8OMvk_UsHaGhuA" name="developer_test,_-0q2wQN5EeKChvM9b5PTSQ" guid="-etLAuX6b8OMvk_UsHaGhuA">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-U2dGR1VeMafAXaiaY06P8A" name="implementation,_-0sr8QN5EeKChvM9b5PTSQ" guid="-U2dGR1VeMafAXaiaY06P8A">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KCCqnovE6jbfBXeI19U1tw" name="any_role,_-1Sh0QN5EeKChvM9b5PTSQ" guid="-KCCqnovE6jbfBXeI19U1tw">
    <refinedDescription>&lt;p>&#xD;
    This role allows anyone on a team to perform general tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Access artifacts in the configuration control system for development and maintenance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Submit change requests for the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Participate in assessments and reviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Volunteer to work on a particular iteration&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sc8g1zpoHP0l0eHasL1lvA" name="project_manager,_-2MgwQN5EeKChvM9b5PTSQ" guid="-sc8g1zpoHP0l0eHasL1lvA">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_oM9kh727xUFC8qgraZxdQ" name="architect,_-2QyMQN5EeKChvM9b5PTSQ" guid="-_oM9kh727xUFC8qgraZxdQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aSPC464mSqv0877tK2mp2A" name="tester,_-2UckQN5EeKChvM9b5PTSQ" guid="-aSPC464mSqv0877tK2mp2A">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8FSDo9qkDsUwQYbaiSacnA" name="it_services_strategy,_-2cYYQN5EeKChvM9b5PTSQ" guid="-8FSDo9qkDsUwQYbaiSacnA">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Un_3ZYGllA-qDnSYBvPb_A" name="software_dist_plan,_-2c_cQN5EeKChvM9b5PTSQ" guid="-Un_3ZYGllA-qDnSYBvPb_A">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Q66Kp_neGeuQlxwh9F3OcQ" name="architecture_notebook,_-2eNkQN5EeKChvM9b5PTSQ" guid="-Q66Kp_neGeuQlxwh9F3OcQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XoJ-Kw8qLq7PZKaZnqD3fg" name="build,_-2pzwQN5EeKChvM9b5PTSQ" guid="-XoJ-Kw8qLq7PZKaZnqD3fg">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-N4YokDT0yPOobcOrJIFtJQ" name="design,_-2rB4QN5EeKChvM9b5PTSQ" guid="-N4YokDT0yPOobcOrJIFtJQ">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LbsI0vD2tP8XXB-bDkdzWA" name="developer_test,_-2sQAQN5EeKChvM9b5PTSQ" guid="-LbsI0vD2tP8XXB-bDkdzWA">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cGg9eLeYJIocMfurdfUUig" name="implementation,_-2uFMQN5EeKChvM9b5PTSQ" guid="-cGg9eLeYJIocMfurdfUUig">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Sj9Ai2-ntbu30LB9yJCikA" name="risk_list,_-2_K8QN5EeKChvM9b5PTSQ" guid="-Sj9Ai2-ntbu30LB9yJCikA">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EeUuZDe0G0gU_X-4qpx0ug" name="user_support_specs,_-3ObgQN5EeKChvM9b5PTSQ" guid="-EeUuZDe0G0gU_X-4qpx0ug">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Q9xmRziiz42YSQRRBGa21Q" name="requirements_attributes.add,_-3QQsQN5EeKChvM9b5PTSQ" guid="-Q9xmRziiz42YSQRRBGa21Q">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k0NUS7B-MBU2vZPlMOL6Vw" name="requirements_traceability,_-3Ss8QN5EeKChvM9b5PTSQ" guid="-k0NUS7B-MBU2vZPlMOL6Vw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-o7EnJpkeBltK48tyvr1B9g" name="requirements_management_process_description,_-3UiIQN5EeKChvM9b5PTSQ" guid="-o7EnJpkeBltK48tyvr1B9g">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0k5VgNTDnxXqPTRazafUcg" name="vision,_-3XlcQN5EeKChvM9b5PTSQ" guid="-0k5VgNTDnxXqPTRazafUcg">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2BtxiNUai0HNrqm5Fi7gog" name="glossary,_-3YzkQN5EeKChvM9b5PTSQ" guid="-2BtxiNUai0HNrqm5Fi7gog">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UjyiiWTmsvdNht01QBcTkg" name="storyboard,_-3aowQN5EeKChvM9b5PTSQ" guid="-UjyiiWTmsvdNht01QBcTkg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-j2_mdGtHY8iYYmY6QWrX0g" name="user_role,_-3dFAQN5EeKChvM9b5PTSQ" guid="-j2_mdGtHY8iYYmY6QWrX0g">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2rnhN83_LTNSw0so9lzUdw" name="test_case,_-32toQN5EeKChvM9b5PTSQ" guid="-2rnhN83_LTNSw0so9lzUdw">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-T8zR2qadbuTPeT7S2cPUtw" name="user_support_specs,_-9T1YQN5EeKChvM9b5PTSQ" guid="-T8zR2qadbuTPeT7S2cPUtw">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KFKDG9Alh7Igxmap-HqyZQ" name="requirements_management_process_description,_-9UccQN5EeKChvM9b5PTSQ" guid="-KFKDG9Alh7Igxmap-HqyZQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4cUCFAIRVV8juETrT4-FKQ" name="vision,_-9VqkQN5EeKChvM9b5PTSQ" guid="-4cUCFAIRVV8juETrT4-FKQ">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KPxqcb1TvzrZbgkp4d9sSA" name="glossary,_-9XfwQN5EeKChvM9b5PTSQ" guid="-KPxqcb1TvzrZbgkp4d9sSA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ta_X2c60OJ8i3eLrkS_VvA" name="storyboard,_-9YG0QN5EeKChvM9b5PTSQ" guid="-Ta_X2c60OJ8i3eLrkS_VvA">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FrArGoenVIqGqhDx2N1IpQ" name="user_role,_-9ZU8QN5EeKChvM9b5PTSQ" guid="-FrArGoenVIqGqhDx2N1IpQ">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-w6wPRB3dfnYu5S5_rDNWKw" name="build,_-95EMQN5EeKChvM9b5PTSQ" guid="-w6wPRB3dfnYu5S5_rDNWKw">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-u209Bz_XrNgWDinJb4lxAg" name="design,_-96SUQN5EeKChvM9b5PTSQ" guid="-u209Bz_XrNgWDinJb4lxAg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Fogj1cplR6JzYn4rqFXmwg" name="developer_test,_-97gcQN5EeKChvM9b5PTSQ" guid="-Fogj1cplR6JzYn4rqFXmwg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zob3bmE4VjX8MoDmOYNgGA" name="implementation,_-98ukQN5EeKChvM9b5PTSQ" guid="-zob3bmE4VjX8MoDmOYNgGA">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7Z6q6s-P8_-eSrGrXV4fhA" name="iteration_plan_project,_-_auMQN5EeKChvM9b5PTSQ" guid="-7Z6q6s-P8_-eSrGrXV4fhA">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IMUaf_Cauq3s1n27RE-OqQ" name="risk_list,_-_b8UQN5EeKChvM9b5PTSQ" guid="-IMUaf_Cauq3s1n27RE-OqQ">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EJO0Ma_UNsBYHzIzUUILhQ" name="architect,_-6hAEQN5EeKChvM9b5PTSQ" guid="-EJO0Ma_UNsBYHzIzUUILhQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OSjD99fezxBgPr3KFbJH6g" name="build,_-6jcUQN5EeKChvM9b5PTSQ" guid="-OSjD99fezxBgPr3KFbJH6g">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gwrivTOamW4_NujUEntztA" name="it_services_strategy,_-6o74QN5EeKChvM9b5PTSQ" guid="-gwrivTOamW4_NujUEntztA">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VvEN79r4xWGLViRHeMSc2g" name="software_dist_plan,_-6qKAAN5EeKChvM9b5PTSQ" guid="-VvEN79r4xWGLViRHeMSc2g">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QdGpUxjospFZwLqpkzswGg" name="architecture_notebook,_-6qxEQN5EeKChvM9b5PTSQ" guid="-QdGpUxjospFZwLqpkzswGg">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GXnh7iCFDVyQTPFVMQp6_w" name="project_manager,_-61wMQN5EeKChvM9b5PTSQ" guid="-GXnh7iCFDVyQTPFVMQp6_w">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3BvhsrdSiYPPHeQeWKhOUQ" name="tester,_-6_hMQN5EeKChvM9b5PTSQ" guid="-3BvhsrdSiYPPHeQeWKhOUQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dRBbVOh3W-19EFyS0FazVA" name="test_case,_-7OxwQN5EeKChvM9b5PTSQ" guid="-dRBbVOh3W-19EFyS0FazVA">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AS7RNVjdFF1wglfersJEDg" name="user_support_specs,_-7nzUQN5EeKChvM9b5PTSQ" guid="-AS7RNVjdFF1wglfersJEDg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1_igjIkhVuB-VvNZlmk78w" name="requirements_attributes.add,_-7pogQN5EeKChvM9b5PTSQ" guid="-1_igjIkhVuB-VvNZlmk78w">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cUHqWIcfnwOiNkSwYL-BuQ" name="requirements_traceability,_-7rdsQN5EeKChvM9b5PTSQ" guid="-cUHqWIcfnwOiNkSwYL-BuQ">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3KZPjU34k1XhbzXJjWKZhQ" name="requirements_management_process_description,_-7tS4QN5EeKChvM9b5PTSQ" guid="-3KZPjU34k1XhbzXJjWKZhQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZKny6GhC11u12ooN4WfZnQ" name="vision,_-7uhAQN5EeKChvM9b5PTSQ" guid="-ZKny6GhC11u12ooN4WfZnQ">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DCcr_fSXDhFVpWjHjIKKuQ" name="glossary,_-7wWMQN5EeKChvM9b5PTSQ" guid="-DCcr_fSXDhFVpWjHjIKKuQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KNk33oQx4s90hJxKlcoE4g" name="storyboard,_-7yLYQN5EeKChvM9b5PTSQ" guid="-KNk33oQx4s90hJxKlcoE4g">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZXKRbymlgSG9rJPcDAJEdw" name="user_role,_-70AkQN5EeKChvM9b5PTSQ" guid="-ZXKRbymlgSG9rJPcDAJEdw">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-I8PPxqRKlU8i4FGPdwAVzg" name="design,_-8IJoQN5EeKChvM9b5PTSQ" guid="-I8PPxqRKlU8i4FGPdwAVzg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TyzyXZgdJURfG5jGjy4SmA" name="developer_test,_-8J-0QN5EeKChvM9b5PTSQ" guid="-TyzyXZgdJURfG5jGjy4SmA">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jJFoo9jNXanRKu1ZuXrjjg" name="implementation,_-8L0AQN5EeKChvM9b5PTSQ" guid="-jJFoo9jNXanRKu1ZuXrjjg">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dS8NjZz7dGzmV_gS7rBXkA" name="architect,_-42zMQN5EeKChvM9b5PTSQ" guid="-dS8NjZz7dGzmV_gS7rBXkA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k6KeXBiXzqOv3q4oV2tCJg" name="project_manager,_-44BUQN5EeKChvM9b5PTSQ" guid="-k6KeXBiXzqOv3q4oV2tCJg">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-meoVvRgzfbjA_3rEqGvbrg" name="storyboard,_-4-H8QN5EeKChvM9b5PTSQ" guid="-meoVvRgzfbjA_3rEqGvbrg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-n5wCkXU_TtQvE1qCN9YrXw" name="it_services_strategy,_-5N_kQN5EeKChvM9b5PTSQ" guid="-n5wCkXU_TtQvE1qCN9YrXw">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-toJp5oH-379FVlC7MTnePQ" name="software_dist_plan,_-5P0wQN5EeKChvM9b5PTSQ" guid="-toJp5oH-379FVlC7MTnePQ">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8jQcB9pLI7jLj6Z_ozoxWQ" name="iteration_plan_project,_-5ivsQN5EeKChvM9b5PTSQ" guid="-8jQcB9pLI7jLj6Z_ozoxWQ">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HsqAt8G0jSQKr6OgvINV2Q" name="risk_list,_-5j90QN5EeKChvM9b5PTSQ" guid="-HsqAt8G0jSQKr6OgvINV2Q">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-meWECCzQork18pptcxo6FA" name="user_support_specs,_-5zOYQN5EeKChvM9b5PTSQ" guid="-meWECCzQork18pptcxo6FA">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FLHP81jj_gTllX9S-uQyLw" name="requirements_attributes.add,_-50cgQN5EeKChvM9b5PTSQ" guid="-FLHP81jj_gTllX9S-uQyLw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Nen8q4RwVnYfZ_aBdsoWWw" name="requirements_traceability,_-52RsQN5EeKChvM9b5PTSQ" guid="-Nen8q4RwVnYfZ_aBdsoWWw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_7j6RzoDjATZXsDslHLCFw" name="requirements_management_process_description,_-53f0QN5EeKChvM9b5PTSQ" guid="-_7j6RzoDjATZXsDslHLCFw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-S2GF2UWojx194GmpIZ-u9w" name="user_role,_-56jIQN5EeKChvM9b5PTSQ" guid="-S2GF2UWojx194GmpIZ-u9w">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ecmp136IhWMEI5eDYhilrA" name="build,_-6P6UQN5EeKChvM9b5PTSQ" guid="-ecmp136IhWMEI5eDYhilrA">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LsrQMVcNBSiakltmD0ywtg" name="design,_-6RvgQN5EeKChvM9b5PTSQ" guid="-LsrQMVcNBSiakltmD0ywtg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GTclfzMevlqAFj-BX1ZjaQ" name="developer_test,_-6TksQN5EeKChvM9b5PTSQ" guid="-GTclfzMevlqAFj-BX1ZjaQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hGc-46Y_qkEIXvuQpvyAFQ" name="implementation,_-6VZ4QN5EeKChvM9b5PTSQ" guid="-hGc-46Y_qkEIXvuQpvyAFQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nXJQ4oHjqyXd3euSyZzDjw" name="project_manager,__A578QN5EeKChvM9b5PTSQ" guid="-nXJQ4oHjqyXd3euSyZzDjw">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_9hV4Btb9kEenvPKLQ_PHg" name="architect,__A9mUQN5EeKChvM9b5PTSQ" guid="-_9hV4Btb9kEenvPKLQ_PHg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cv0P6VnmrHz1x4n45tcAUQ" name="tester,__BB3wQN5EeKChvM9b5PTSQ" guid="-cv0P6VnmrHz1x4n45tcAUQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cxJm-rrjC33gQl-QO7dYSQ" name="it_services_strategy,__BOFAQN5EeKChvM9b5PTSQ" guid="-cxJm-rrjC33gQl-QO7dYSQ">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ajjo0oJ8hGB7Xs1wV05aBA" name="software_dist_plan,__BPTIQN5EeKChvM9b5PTSQ" guid="-ajjo0oJ8hGB7Xs1wV05aBA">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1OeXaQDfUy-fcR7XEfUbkQ" name="architecture_notebook,__BQhQQN5EeKChvM9b5PTSQ" guid="-1OeXaQDfUy-fcR7XEfUbkQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zj1OtphECNChMNSZdmmf2Q" name="test_case,__BaSQQN5EeKChvM9b5PTSQ" guid="-zj1OtphECNChMNSZdmmf2Q">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5GLU8pJCMj_XLt0IwWf7GA" name="build,__Bt0QQN5EeKChvM9b5PTSQ" guid="-5GLU8pJCMj_XLt0IwWf7GA">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-l5ft7Ryf7iBc-s1_Sb6yGQ" name="design,__BvCYQN5EeKChvM9b5PTSQ" guid="-l5ft7Ryf7iBc-s1_Sb6yGQ">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-92os_0OPsWJjCIycgJLTKg" name="developer_test,__Bw3kQN5EeKChvM9b5PTSQ" guid="-92os_0OPsWJjCIycgJLTKg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rXGcq-uXuG-gtos9uyWf7g" name="implementation,__ByFsQN5EeKChvM9b5PTSQ" guid="-rXGcq-uXuG-gtos9uyWf7g">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hv0Mv9LVI0bSIgrKtNoG9Q" name="risk_list,__B9r4QN5EeKChvM9b5PTSQ" guid="-hv0Mv9LVI0bSIgrKtNoG9Q">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tlN22qzuipoUkdbnE7mhNw" name="user_support_specs,__CJSEAN5EeKChvM9b5PTSQ" guid="-tlN22qzuipoUkdbnE7mhNw">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aMbDlRuM5jmvWMbmN733xQ" name="requirements_attributes.add,__CLHQQN5EeKChvM9b5PTSQ" guid="-aMbDlRuM5jmvWMbmN733xQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2Mqdvmp29q2ajT645ooRfw" name="requirements_traceability,__CM8cQN5EeKChvM9b5PTSQ" guid="-2Mqdvmp29q2ajT645ooRfw">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Zx9v4xD15_jld3-ptJGeZw" name="requirements_management_process_description,__COxoQN5EeKChvM9b5PTSQ" guid="-Zx9v4xD15_jld3-ptJGeZw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7Zo-h-Jd_aFL_U-KcrWSZg" name="vision,__CQm0QN5EeKChvM9b5PTSQ" guid="-7Zo-h-Jd_aFL_U-KcrWSZg">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uoY6Hqq0JXObuNRmRSPF2Q" name="glossary,__CTDEQN5EeKChvM9b5PTSQ" guid="-uoY6Hqq0JXObuNRmRSPF2Q">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UDuPrHpx8LpCM_NRlLtjoQ" name="storyboard,__CVfUQN5EeKChvM9b5PTSQ" guid="-UDuPrHpx8LpCM_NRlLtjoQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-L65IbIYAhoBjSRTZhCjksA" name="user_role,__CX7kQN5EeKChvM9b5PTSQ" guid="-L65IbIYAhoBjSRTZhCjksA">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6FeiLG1E9K41GAFv4XImyQ" name="process_engineer,__CyLQQN5EeKChvM9b5PTSQ" guid="-6FeiLG1E9K41GAFv4XImyQ">
    <refinedDescription>&lt;p>&#xD;
    This role plays an important part of any management team of a software project. The role is responsible for&#xD;
    all process related aspects of the project, such as :&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Tailoring the process to match the specific needs of the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Educating and mentoring project members on process related issues.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that valuable project experience is harvested and fed back into the process.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-B2F619oCrHEVjfDnGXS9xg" name="project_manager,__DvNgQN5EeKChvM9b5PTSQ" guid="-B2F619oCrHEVjfDnGXS9xg">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-D3zgw88SNl8R1woZQZXHPA" name="architect,__DyQ0QN5EeKChvM9b5PTSQ" guid="-D3zgw88SNl8R1woZQZXHPA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--ZLTn0RHylkZYqZcnteW7w" name="tester,__D17MQN5EeKChvM9b5PTSQ" guid="--ZLTn0RHylkZYqZcnteW7w">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-H-JC-4K6k-C_UFePeUegMQ" name="user_support_specs,__D_sMQN5EeKChvM9b5PTSQ" guid="-H-JC-4K6k-C_UFePeUegMQ">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oQkyzquhdNqm09NtZgSVlg" name="requirements_attributes.add,__EBhYQN5EeKChvM9b5PTSQ" guid="-oQkyzquhdNqm09NtZgSVlg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jSK6v5AW-lL24ZJULJAUYQ" name="requirements_traceability,__ECvgQN5EeKChvM9b5PTSQ" guid="-jSK6v5AW-lL24ZJULJAUYQ">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Z17-c42tvpcGS7Ff6Tyy-w" name="requirements_management_process_description,__EEksQN5EeKChvM9b5PTSQ" guid="-Z17-c42tvpcGS7Ff6Tyy-w">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VDZ62tSZqTAbZHnVCEGFFA" name="glossary,__EFy0QN5EeKChvM9b5PTSQ" guid="-VDZ62tSZqTAbZHnVCEGFFA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jenZOxV44ImTHvcUkhYl0w" name="storyboard,__EHoAQN5EeKChvM9b5PTSQ" guid="-jenZOxV44ImTHvcUkhYl0w">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SJMYqZNnGrTG_-mWL6B_Ow" name="user_role,__EI2IQN5EeKChvM9b5PTSQ" guid="-SJMYqZNnGrTG_-mWL6B_Ow">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4b-UVgv5jv7PgpalT4-vTg" name="it_services_strategy,__EvTEQN5EeKChvM9b5PTSQ" guid="-4b-UVgv5jv7PgpalT4-vTg">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-G89Plyn1_XeRxnkY0WboDA" name="software_dist_plan,__ExIQQN5EeKChvM9b5PTSQ" guid="-G89Plyn1_XeRxnkY0WboDA">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IdmGH-zPkqzOzrpeOd6dIw" name="test_case,__E65QQN5EeKChvM9b5PTSQ" guid="-IdmGH-zPkqzOzrpeOd6dIw">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Kg_ELcZ9QqgQ-uTDrw4wGQ" name="build,__FEDMQN5EeKChvM9b5PTSQ" guid="-Kg_ELcZ9QqgQ-uTDrw4wGQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OYZmLeKc4odKvXFw4cxuMg" name="design,__FFRUQN5EeKChvM9b5PTSQ" guid="-OYZmLeKc4odKvXFw4cxuMg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GuO_WA9P5I1YDJ5vPGJvZA" name="developer_test,__FHGgQN5EeKChvM9b5PTSQ" guid="-GuO_WA9P5I1YDJ5vPGJvZA">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-b3csJBCA4iWVIWZfC0BtGg" name="implementation,__FJiwAN5EeKChvM9b5PTSQ" guid="-b3csJBCA4iWVIWZfC0BtGg">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--Hqd9L1uBzmrMOyY23z5CA" name="any_role,__FVwAQN5EeKChvM9b5PTSQ" guid="--Hqd9L1uBzmrMOyY23z5CA">
    <refinedDescription>&lt;p>&#xD;
    This role allows anyone on a team to perform general tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Access artifacts in the configuration control system for development and maintenance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Submit change requests for the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Participate in assessments and reviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Volunteer to work on a particular iteration&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uNCKsvk2pnfb3z4kdvMkDg" name="user_support_specs,__JB9MQN5EeKChvM9b5PTSQ" guid="-uNCKsvk2pnfb3z4kdvMkDg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3JBFYmMRQTEu2bHcPAqEGQ" name="requirements_management_process_description,__JDLUQN5EeKChvM9b5PTSQ" guid="-3JBFYmMRQTEu2bHcPAqEGQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-p5oyU6M6i5I2xqS7pJMyzw" name="vision,__JDyYQN5EeKChvM9b5PTSQ" guid="-p5oyU6M6i5I2xqS7pJMyzw">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6HHttTzDB-s4-bMKzLZTxA" name="glossary,__JFAgQN5EeKChvM9b5PTSQ" guid="-6HHttTzDB-s4-bMKzLZTxA">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PRKU5NomIbN9CPnFx83Uxg" name="storyboard,__JFnkQN5EeKChvM9b5PTSQ" guid="-PRKU5NomIbN9CPnFx83Uxg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-I2B1MQL4VF1psYb9FmoHmg" name="user_role,__JG1sQN5EeKChvM9b5PTSQ" guid="-I2B1MQL4VF1psYb9FmoHmg">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-P6cPTe0brtIuJb2Jiq1F0A" name="build,__JZwoQN5EeKChvM9b5PTSQ" guid="-P6cPTe0brtIuJb2Jiq1F0A">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cvoHbP1iBrKemwccjVlxLA" name="design,__Ja-wQN5EeKChvM9b5PTSQ" guid="-cvoHbP1iBrKemwccjVlxLA">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QV2aRDV51lpofYTrJ-Tf_Q" name="developer_test,__JcM4QN5EeKChvM9b5PTSQ" guid="-QV2aRDV51lpofYTrJ-Tf_Q">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Baeup82T01SsUyzZrNf2mg" name="implementation,__JdbAQN5EeKChvM9b5PTSQ" guid="-Baeup82T01SsUyzZrNf2mg">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-N7VMJM15fyotMBQJ57Siyw" name="iteration_plan_project,__JzZQQN5EeKChvM9b5PTSQ" guid="-N7VMJM15fyotMBQJ57Siyw">
    <keyConsiderations>&lt;p>&#xD;
    In a team of teams context, the project leadership team produces iteration plans that drive the sub teams' iteration&#xD;
    plans. The high level&amp;nbsp;iteration plans are part of the larger project release plan, and they typically define:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-team items which will be facilitated by the project leadership team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Goals which should be injected into the&amp;nbsp;sub team plans&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lPh8kXmpmXbYHXLp8QSP2g" name="risk_list,__J0nYQN5EeKChvM9b5PTSQ" guid="-lPh8kXmpmXbYHXLp8QSP2g">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ut0IKJgZw3lGU6IU9J48Aw" name="project_manager,__GY44QN5EeKChvM9b5PTSQ" guid="-ut0IKJgZw3lGU6IU9J48Aw">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dxfV6kEsuSN4MXn-Fpo4OA" name="architect,__GdKUQN5EeKChvM9b5PTSQ" guid="-dxfV6kEsuSN4MXn-Fpo4OA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BwT_AJn01mdQ0v4F6xeHmw" name="tester,__GhbwQN5EeKChvM9b5PTSQ" guid="-BwT_AJn01mdQ0v4F6xeHmw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-c98YpOqNCNQ4OFjxpwzDlg" name="it_services_strategy,__Gu3IQN5EeKChvM9b5PTSQ" guid="-c98YpOqNCNQ4OFjxpwzDlg">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-j5lZGPlEOayGaKMsRoe4ZQ" name="software_dist_plan,__GwsUQN5EeKChvM9b5PTSQ" guid="-j5lZGPlEOayGaKMsRoe4ZQ">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MzMqdV-Pf3R3UfE3GoPt2A" name="architecture_notebook,__GyhgQN5EeKChvM9b5PTSQ" guid="-MzMqdV-Pf3R3UfE3GoPt2A">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9OSrMMq1DyoMy1-uDIRPyw" name="build,__G7rcQN5EeKChvM9b5PTSQ" guid="-9OSrMMq1DyoMy1-uDIRPyw">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-odSkLEIqjtn9q3lOz01X4w" name="design,__G85kQN5EeKChvM9b5PTSQ" guid="-odSkLEIqjtn9q3lOz01X4w">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0EvxXn2Fk0hPkg8-WI5tMA" name="developer_test,__G-uwQN5EeKChvM9b5PTSQ" guid="-0EvxXn2Fk0hPkg8-WI5tMA">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WNH2bWWy7XcXhV_TydjaVw" name="implementation,__G_84QN5EeKChvM9b5PTSQ" guid="-WNH2bWWy7XcXhV_TydjaVw">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aJurGwPDeIAYz403rh16bw" name="user_support_specs,__HLjEQN5EeKChvM9b5PTSQ" guid="-aJurGwPDeIAYz403rh16bw">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SXKN8geSgcB0mXjXIJg9nw" name="requirements_attributes.add,__HNYQQN5EeKChvM9b5PTSQ" guid="-SXKN8geSgcB0mXjXIJg9nw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NRbkytPEW8Fp0Dd9L7Tdvg" name="requirements_traceability,__HP0gQN5EeKChvM9b5PTSQ" guid="-NRbkytPEW8Fp0Dd9L7Tdvg">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RLd-cfFxllOWN1eGT4ZmUQ" name="requirements_management_process_description,__HSQwQN5EeKChvM9b5PTSQ" guid="-RLd-cfFxllOWN1eGT4ZmUQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Qmqzc1ZSlnKSAxajmF4LfA" name="vision,__HUF8QN5EeKChvM9b5PTSQ" guid="-Qmqzc1ZSlnKSAxajmF4LfA">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8igdoiJxVpTuejY5AXKwKg" name="glossary,__HVUEQN5EeKChvM9b5PTSQ" guid="-8igdoiJxVpTuejY5AXKwKg">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8Ja_XIoVQ8a_9aYgvC0jUw" name="storyboard,__HXJQQN5EeKChvM9b5PTSQ" guid="-8Ja_XIoVQ8a_9aYgvC0jUw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Jc_CBd_rG6fGU6hmv-Ypkw" name="user_role,__HZlgAN5EeKChvM9b5PTSQ" guid="-Jc_CBd_rG6fGU6hmv-Ypkw">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tPvQ8qkkReKwYYH9rDqGCQ" name="test_case,__Hwx4QN5EeKChvM9b5PTSQ" guid="-tPvQ8qkkReKwYYH9rDqGCQ">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HDVogjp6BUwp10pg7yTnuA" name="project_manager,__Kgj4QN5EeKChvM9b5PTSQ" guid="-HDVogjp6BUwp10pg7yTnuA">
    <keyConsiderations>&lt;p>&#xD;
    In the context of a team of teams, this role leads the project leadership team and has the following responsibilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Responsible for the release plan&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the iterations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the release themes in collaboration with product managers&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines the overall process and rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintains the project area&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defines iteration themes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans and tracks iteration progress&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Weekly status report&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Runs weekly planning call&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviews plans&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitates cross team efforts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensures project health (green builds, tracks risks, make issues visible)&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oqjrXaB2g3JAz0LnT7xL8A" name="architect,__KkOQQN5EeKChvM9b5PTSQ" guid="-oqjrXaB2g3JAz0LnT7xL8A">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PXBPzYSGr9JcEafxC04iJw" name="tester,__KofsQN5EeKChvM9b5PTSQ" guid="-PXBPzYSGr9JcEafxC04iJw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QJRCx6oU1AkU83_jL15ufA" name="it_services_strategy,__KsxIQN5EeKChvM9b5PTSQ" guid="-QJRCx6oU1AkU83_jL15ufA">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6U860ifEqmmH4GZ23RWX1Q" name="software_dist_plan,__KumUQN5EeKChvM9b5PTSQ" guid="-6U860ifEqmmH4GZ23RWX1Q">
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZqM58Yg2nQmL9A6UGWRWCA" name="architecture_notebook,__KwbgAN5EeKChvM9b5PTSQ" guid="-ZqM58Yg2nQmL9A6UGWRWCA">
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot;&#xD;
    guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It provides a place for maintaining the list of architectural issues, along with the associated architectural&#xD;
    decisions, designs, patterns, code documented (or pointed to), and so forth -- all at appropriate levels to make it&#xD;
    easy to understand what architectural decisions have been made and remain to be made.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is helpful for architects to use this artifact to collaborate with other team members in developing the architecture&#xD;
    and to help team members understand the motivation behind architectural decisions so that those decisions can be&#xD;
    robustly implemented. For example, the architect may put constraints on how data is packaged and communicated between&#xD;
    different parts of the system. This may appear to be a burden, but the justification in the Architecture Notebook can&#xD;
    explain that there is a significant performance bottleneck when communicating with a legacy system. The rest of the&#xD;
    system must adapt to this bottleneck by following a specific data packaging scheme.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This artifact should also inform the team members how the system is partitioned or organized so that the team can adapt&#xD;
    to the needs of the system. It also gives a first glimpse of the system and its technical motivations to whoever must&#xD;
    maintain and change the architecture later.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sPEpn_gYE3osrfs2GnBznA" name="user_support_specs,__K8owQN5EeKChvM9b5PTSQ" guid="-sPEpn_gYE3osrfs2GnBznA">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1gpROrn-MfOCmkB4l8fEwg" name="requirements_attributes.add,__K924QN5EeKChvM9b5PTSQ" guid="-1gpROrn-MfOCmkB4l8fEwg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MRqhyEPwKT3YkMYPN_owzQ" name="requirements_traceability,__K_sEQN5EeKChvM9b5PTSQ" guid="-MRqhyEPwKT3YkMYPN_owzQ">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tHEd5BIBivp4DXOUAw9P9Q" name="requirements_management_process_description,__LA6MQN5EeKChvM9b5PTSQ" guid="-tHEd5BIBivp4DXOUAw9P9Q">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-STEQfawVTU4bsLueE8cYIA" name="vision,__LCvYQN5EeKChvM9b5PTSQ" guid="-STEQfawVTU4bsLueE8cYIA">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QYt2Znnt48mBk_u6kZpr9A" name="glossary,__LD9gQN5EeKChvM9b5PTSQ" guid="-QYt2Znnt48mBk_u6kZpr9A">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JWpPu8mAbeLQSs4rQ6KNBg" name="storyboard,__LFysQN5EeKChvM9b5PTSQ" guid="-JWpPu8mAbeLQSs4rQ6KNBg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LT46tAggbFd6bfR5jK34qw" name="user_role,__LHn4QN5EeKChvM9b5PTSQ" guid="-LT46tAggbFd6bfR5jK34qw">
    <refinedDescription>&lt;p> A user role&amp;nbsp;represents users of the system under development who have &#xD;
  similar attributes. These are some of the common attributes that differentiate &#xD;
  user roles from each other: &lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequency of using the software&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficiency with using computers and similar systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain knowledge&#xD;
    &lt;/li>&#xD;
    &#xD;
  &lt;li> Reasons for using the system or problems that they want to solve&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p> Identifying user roles&amp;nbsp;helps the team and stakeholders gain insight on &#xD;
  who will use the system, what their objectives are,&amp;nbsp;what problems they &#xD;
  have that the system will be solving, and so on. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jQqHj_LupTtkrs0bXn-fbg" name="test_case,__LeNMQN5EeKChvM9b5PTSQ" guid="-jQqHj_LupTtkrs0bXn-fbg">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iAnJabqPocytDeKyj7xc_A" name="build,__LrokQN5EeKChvM9b5PTSQ" guid="-iAnJabqPocytDeKyj7xc_A">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pspLAODllEIIZJzF0cTtRg" name="design,__LuE0QN5EeKChvM9b5PTSQ" guid="-pspLAODllEIIZJzF0cTtRg">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LmKqp6a8qLnxsxVu2wsfRA" name="developer_test,__Lv6AQN5EeKChvM9b5PTSQ" guid="-LmKqp6a8qLnxsxVu2wsfRA">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-odCVBymprSsQeyM71ZHv_Q" name="implementation,__LyWQQN5EeKChvM9b5PTSQ" guid="-odCVBymprSsQeyM71ZHv_Q">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gTizZqKKwdr_DslKjImSzw" name="requirements_attributes,_qA6LIQZyEeK3WNVhPQyv8w" guid="-gTizZqKKwdr_DslKjImSzw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-f3Y9UAvohrINjZMKJewwWQ" name="user_story,_qBNtIQZyEeK3WNVhPQyv8w" guid="-f3Y9UAvohrINjZMKJewwWQ">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot; guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-au-dy6IoynupNDfJm2TLuw" name="requirements_attributes,_qKEHIQZyEeK3WNVhPQyv8w" guid="-au-dy6IoynupNDfJm2TLuw">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2dSJDTPB_C8sLFeFeBhQmQ" name="user_story,_qKSwoQZyEeK3WNVhPQyv8w" guid="-2dSJDTPB_C8sLFeFeBhQmQ">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot; guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7kvpI3pXA8zqa_-KXI1ETQ" name="requirements_attributes,_qNNhwQZyEeK3WNVhPQyv8w" guid="-7kvpI3pXA8zqa_-KXI1ETQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gp6UksEjbjmr38ogp0rhjw" name="user_story,_qNengQZyEeK3WNVhPQyv8w" guid="-gp6UksEjbjmr38ogp0rhjw">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot; guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MoFXFsDIrfDJcQ4P63PJUQ" name="requirements_attributes,_qTfv8QZyEeK3WNVhPQyv8w" guid="-MoFXFsDIrfDJcQ4P63PJUQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-C9CGZ_QgcxYUqMGwRRj9uQ" name="user_story,_qT0gEQZyEeK3WNVhPQyv8w" guid="-C9CGZ_QgcxYUqMGwRRj9uQ">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot; guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kOw1S7KFoXZBaRg0b5JD5A" name="requirements_attributes,_qRmSgQZyEeK3WNVhPQyv8w" guid="-kOw1S7KFoXZBaRg0b5JD5A">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-d6CJ6gwLDoBbo0x0-YGPRw" name="user_story,_qRwDgQZyEeK3WNVhPQyv8w" guid="-d6CJ6gwLDoBbo0x0-YGPRw">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot; guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-J0wnCNMXW_ABSQ7HHEQbww" name="requirements_attributes,_qb5eAQZyEeK3WNVhPQyv8w" guid="-J0wnCNMXW_ABSQ7HHEQbww">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GhpJY1cT9xhDIfmpgX87Jw" name="user_story,_qcQqYQZyEeK3WNVhPQyv8w" guid="-GhpJY1cT9xhDIfmpgX87Jw">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot; guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-IfHRNWh2qJvIubZPzoGA9w" name="requirements_attributes,_qftnAQZyEeK3WNVhPQyv8w" guid="-IfHRNWh2qJvIubZPzoGA9w">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fbrCzswftvUSaaV8ntYVXQ" name="user_story,_qf7pcQZyEeK3WNVhPQyv8w" guid="-fbrCzswftvUSaaV8ntYVXQ">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot; guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QEGQgLBLDvwZhxyJPfMY5A" name="requirements_attributes,_qjTtkQZyEeK3WNVhPQyv8w" guid="-QEGQgLBLDvwZhxyJPfMY5A">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-g3DPTPhQHstT5JlQkjO6Qg" name="user_story,_qjsIEQZyEeK3WNVhPQyv8w" guid="-g3DPTPhQHstT5JlQkjO6Qg">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot; guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-telJndzPuKSx7l4MkQ2mfQ" name="requirements_attributes,_qpaVkQZyEeK3WNVhPQyv8w" guid="-telJndzPuKSx7l4MkQ2mfQ">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-N3nQsLIwuA3loEJeM4T5SA" name="user_story,_qpq0QQZyEeK3WNVhPQyv8w" guid="-N3nQsLIwuA3loEJeM4T5SA">
    <keyConsiderations>&lt;p>&#xD;
    Well-written user stories possess&amp;nbsp;the characteristics defined in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.user_story_driven_dev.base-ibm/guidances/concepts/invest_model_2D82989.html&quot; guid=&quot;_K8khID55Ed6FxpOwnkUDmw&quot;>INVEST Model&lt;/a>. For example, one of the characteristics of a good user story is that&#xD;
    it can be tested even before development begins. This makes the user story valuable to stakeholders in a practical way.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    User stories capture the intended functionality of the system under development, from the user role&#xD;
    perspective.&amp;nbsp;They are simple, clear, brief descriptions written&amp;nbsp;using business language in the context in&#xD;
    which the need or capability&amp;nbsp;will be&amp;nbsp;used in the system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A user story is in fact a reminder for further conversation between the team and stakeholders. User stories&amp;nbsp;are&#xD;
    written down, but they are not meant to be contractual, or even interpreted without further discussions with the&#xD;
    stakeholders. The on-going interaction between stakeholders and the team (to discuss the details of a user story) are&#xD;
    more important than the resulting textual description itself.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
</xmi:XMI>
