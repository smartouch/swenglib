<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-qpEe9Te-1B5VKefmzaOnFA" name="planned_vs_actual_effort,_ZkJQQLQyEd6HgZ8EwRW1Og" guid="-qpEe9Te-1B5VKefmzaOnFA" changeDate="2010-01-08T09:40:15.562-0800" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Purpose&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Effort translates the size of functionality (measured in points) into a detailed estimate of effort, typically measured&#xD;
    in units of days or hours. The Planned versus Actual Effort metric is used to monitor variance in the amount of actual&#xD;
    hours worked compared to the amount planned. This helps the team identify the degree to which effort variance across&#xD;
    the lifecycle might impact the cost of the project. It also helps the team monitor the accuracy of their estimates in&#xD;
    order to improve project predictability.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;h3>&#xD;
    Definition&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Planned versus Actual Effort is captured at the work item level, and totals are rolled up for each iteration and the&#xD;
    overall release as follows:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Work Item&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Work Item Planned Effort&lt;/strong> - Estimated number of hours it will take to complete a specific work item&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Work Item Actual Effort&lt;/strong> - Actual number of hours it took to complete a specific work item.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;strong>Iteration&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Iteration Planned Effort&lt;/strong> - Estimated number of hours it will take to complete all work items&#xD;
        planned for a specific iteration.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Iteration Actual Effort&lt;/strong> - Actual number of hours it took to complete all work items planned for a&#xD;
        specific iteration.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;strong>Release&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Total Planned Effort&lt;/strong> &lt;strong>-&lt;/strong> Estimated number of hours it will take to complete all&#xD;
        work items for the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Total Actual Effort&lt;/strong> - Actual number of hours it took to complete all work items for the&#xD;
        project&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Analysis&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A good way to monitor Planned versus Actual Effort throughout the lifecycle is to use two trend lines. Plot Planned&#xD;
    Effort and Actual Effort on the Y axis and iterations on the X axis. This allows you to monitor Planned versus Actual&#xD;
    Effort at the iteration and release levels. Monitor the hours variance between planned and actual effort in each&#xD;
    iteration to identify trends across the lifecycle.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Using Planned versus Actual Effort to monitor project execution&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Planned versus Actual Effort is used as a project execution metric to help a team monitor and steer their project&#xD;
    performance. As actual and planned effort is tracked in each iteration, trends are identified that help the team&#xD;
    understand if their estimates are improving.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Expected trend&lt;/strong> - Estimates should improve iteration to iteration as the amount of uncertainty in the&#xD;
    project decreases. Trend lines will show less and less variance between planned and actual effort as the project&#xD;
    progresses. The project is likely on track for cost, and the team can have high confidence in their predictability.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Effort variance remains high throughout the lifecycle&lt;/strong> - This trend can occur when the team is&#xD;
    estimating work in chunks that are too large. The larger the task, the more room for error there is in estimation.&#xD;
    Break large tasks down into a number of smaller work items. Ongoing poor estimation can also occur when the team&#xD;
    continues to struggle with a new technology. Additional training or mentoring might be required to get the team on&#xD;
    track and enable better estimates. Confirm that the team is not estimating too far out into the future. Provide&#xD;
    just-in-time detailed estimates during iteration planning. Team members should collaborate to validate individual&#xD;
    estimates. When it is too hard to provide an estimate for a particular work item, the team must take action to resolve&#xD;
    any open issues. Address uncertainty throughout the lifecycle rather than waiting until the end to deal with&#xD;
    outstanding issues. When requirements are not detailed enough, estimates are likely to be off. Perform sufficient&#xD;
    analysis and receive clarification as needed prior to producing detailed estimates for iteration planning. Determine if&#xD;
    process or tooling efficiencies should be introduced to eliminate overhead. When estimation variance is high throughout&#xD;
    the lifecycle, the project is at risk of being over budget (meaning the team should probably cut scope) or under budget&#xD;
    (meaning the team could be adding more value by delivering more features).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Sudden spike&lt;/strong> - A sudden increase in effort variance typically indicates a surprise of some sort. The&#xD;
    team may not have fully understood a particular requirement, waited too long to address any associated risks, or an&#xD;
    unexpected risk has emerged. Effort variance can also increase when a team member completes a work item but did not&#xD;
    create the original estimate and is not familiar with that part of the system. The introduction of new team members can&#xD;
    also result in a sudden change in effort variance. Confirm that the team is addressing uncertainty throughout the&#xD;
    lifecycle in order to minimize surprises. When this trend occurs, identify the cause of the unusual variance and&#xD;
    determine if it is likely to be repeated. If so, cost is likely to be impacted resulting in the need to reduce scope&#xD;
    and adjust future iteration plans. If the cause it not likely to be a recurring problem, and has been addressed by the&#xD;
    team, there is no need to dramatically change plans for the next iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Up and down&lt;/strong> - Effort variance that fluctuates drastically throughout the lifecycle indicates a serious&#xD;
    problem. The team is experiencing a great deal of surprises and disruptions. Some factors are affecting the project&#xD;
    that cannot be controlled or managed. Perhaps requirements are continually changing, or a particular technology has a&#xD;
    cycle of working as expected in a given iteration and then causing unexpected problems in the next. When this trend&#xD;
    occurs it means that you cannot manage the project effectively throughout the lifecycle and that your cost and schedule&#xD;
    are at risk. Collaborate with stakeholders to address requirements churn. Focus on addressing technology risks to&#xD;
    uncover any additional unknowns. Bring in mentors to help where needed. Confirm that the team is gathering all&#xD;
    information needed before providing estimates at the beginning of each iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    &lt;strong>Monitoring Planned versus Actual Effort at the work item level&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If estimation variance is high, you can generate a scatter chart of work item-level variance to identify the source of&#xD;
    the problem in a given iteration. It could be that most of the estimates provided by the team in a given iteration were&#xD;
    reasonably accurate, but a few estimates were off by a large margin. Use a scatter chart to monitor Planned versus&#xD;
    Actual Effort for each work item in the iteration to determine the standard deviation in estimates. Monitor the&#xD;
    standard deviation in planned versus actual effort in each iteration to identify trends across the lifecycle. You may&#xD;
    discover that only certain work items were estimated poorly, or that particular team members often over or&#xD;
    under-estimate. This knowledge helps the team take corrective action and improve their predictability.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Using Planned versus Actual Effort to monitor capability improvement&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Planned Versus Actual Effort is also used as a capability improvement metric. It helps a team and middle management&#xD;
    (project manager, product owner) monitor improvements made during the project lifecycle in adopting practices such as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Team Change Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test-Driven Development&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Continuous Integration&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Concurrent Testing&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Iterative Development&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Whole Team&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Continuous Integration&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Shared Vision&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        User Story-Driven Development&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Evolutionary Architecture&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Teams successfully adopting these practices will demonstrate improvements across the lifecycle that will help to reduce&#xD;
    effort variance. Operational Executives can also use this metric to monitor systematic improvement in reducing costs&#xD;
    across the organization by adopting these practices.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Expected trend&lt;/strong> - Successful teams decrease their effort variance as the project progresses. They&#xD;
    consistently stay on budget and have high project predictability.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Increasing or fluctuating effort variance&lt;/strong> - When teams consistently display these trends, they should&#xD;
    analyze their projects to identify any common causes for the variance in order to take appropriate corrective action.&#xD;
    For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        If developers are clear on requirements and are addressing uncertainty throughout the lifecycle, they may have a&#xD;
        problem with efficiency. Reduce manual and inefficient build and test procedures by adopting Continuous&#xD;
        Integration, Test Driven Development, and Concurrent Testing practices.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        If teams are performing their work efficiently, but changes are not managed well in projects, they may need to&#xD;
        focus on better software configuration management. Implement tooling to track and control changes, and implement&#xD;
        best practices of Team Change Management.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        When projects typically experience surprises later in the lifecycle and scope is not controlled well, teams may not&#xD;
        be collaborating well across the lifecycle. Introduce practices that encourage teams to communicate well and take&#xD;
        action on feedback, deliver working software frequently, integrate their work, and increase visibility of their&#xD;
        progress throughout the lifecycle such as Iterative Development, Continuous Integration, Whole Team, and Test&#xD;
        Driven Development.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        When projects often have high requirements churn and stakeholders are not satisfied that the right capabilities are&#xD;
        delivered, teams should improve their ability to elicit requirements by adopting the Shared Vision and User&#xD;
        Story-Driven Development practices.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Frequency and reporting&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Detailed estimates are provided at the beginning of each iteration. Actuals are reported at the end of each iteration&#xD;
    for work items completed in that iteration. The Planned versus Actual Effort chart is reviewed with the team during&#xD;
    each iteration retrospective and discussed with stakeholders to help identify trends.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Collection and reporting tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Teams can capture estimated and actual effort for work items in IBM&amp;reg; Rational&amp;reg; Team Concert&amp;reg;.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Assumptions and prerequisites&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        User Stories/ Use Cases are elaborated&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Detailed estimates for work items assigned to an iteration are logged during iteration planning&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Detailed estimates are provided by the team member who will perform the work.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        All actual hours worked by the team to complete work items in a given iteration must be logged at the end of that&#xD;
        iteration&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Pitfalls, advice, and countermeasures&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Estimates will differ depending on the person who will perform the work. It can be useful for individual team&#xD;
        members to monitor their own estimation variance for the sake of improvement, but overall team estimation variance&#xD;
        is what is most useful for project monitoring.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Estimates will change as more information is learned about a particular work item. However, in order to analyze&#xD;
        trends, estimates should be frozen at the beginning of the iteration.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Make sure that any tool used to capture effort data is simple to use and does not introduce too much overhead to&#xD;
        the team.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Do not exclude overtime hours in order to appear more productive, or to stay within original estimates. This will&#xD;
        decrease the effectiveness of your trend analysis, and impair the team's ability to track real improvements or&#xD;
        issues with estimating.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicate key constraints and assumptions with estimates.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Continue to validate estimates by comparing with past experience.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To calculate a variance percentage for any level (release, iteration, or work item), use the following calculation:&#xD;
        Effort Variance = ((Actual Effort- Planned Effort) / Planned Effort) *100&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use quality metrics as a countermeasure to Planned versus Actual effort. If teams are highly incented to reduce&#xD;
        estimation variance, they spend less time testing in order to deliver work items within their original estimates.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Customer Satisfaction can also be used as a countermeasure to this metric. If too much scope is removed from the&#xD;
        release to make up for underestimating, stakeholders may report low customer satisfaction with the project.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
