<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-1uqGOw6ePHOEOP-FHbHBSw" name="business_value_velocity,_6B5TwKinEd6PSodkFd3_JA" guid="-1uqGOw6ePHOEOP-FHbHBSw" changeDate="2010-09-27T12:55:26.781-0600" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Purpose&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    This metric&amp;nbsp;helps the team and organization focus on how much business value they are delivering, rather than on&#xD;
    maximizing the amount of functionality they are delivering in an iteration regardless of its business value. This&#xD;
    metric helps the team understand and communicate the progress made toward delivering expected value and it supports&#xD;
    planning and prioritization efforts.&lt;br />&#xD;
    &lt;br />&#xD;
    The Business Value Velocity metric answers the following questions:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        How much business value has been delivered?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How much business value remains to be delivered for a given planned release?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        At what rate is business value being incrementally delivered in an iteration?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In addition, calculating the ratio of business value delivered to effort (Business Value Points divided by User Story&#xD;
    Points), a team can observe and reflect on how much value they are delivering for a given amount of effort. This&#xD;
    application of the metric may be especially useful in terms of portfolio management and balancing investments across&#xD;
    many products and releases.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    By identifying the business value of features and stories, the Product Owner is able to see the explicit tradeoffs in&#xD;
    business value when prioritizing the release backlog. As an example, the Product Owner can make an informed decision to&#xD;
    drop user stories with lower business value from the release or to give stories with a greater business value a higher&#xD;
    priority to ensure that the greatest business value is delivered earlier.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Definition&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Business Value Points = Relative Points assigned to each item in product backlog estimating the value that will be&#xD;
    generated when that piece of the product is delivered. Typically value is assigned at the feature level and points are&#xD;
    allocated across its stories.&lt;br />&#xD;
    &lt;br />&#xD;
    Business Value Burnup = Total number of Business Value Points the team has delivered in the release, usually tracked&#xD;
    for each iteration&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Analysis&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Use a trend line to monitor the burn up of Business Value Burnup over time. Plot the number of business value points on&#xD;
    the Y axis and iterations on the X axis.&lt;br />&#xD;
    &lt;br />&#xD;
    &lt;strong>Expected trend&lt;/strong> - The trend will slope upward as value is delivered in each iteration. The highest&#xD;
    value features are delivered early in the project, so the slope of the line will gradually decrease.&lt;br />&#xD;
    &lt;br />&#xD;
    When Business Value points are not burning up, meaning that cumulative business is not increasing, corrective action is&#xD;
    needed. The team may not be successfully adopting iterative development best practices. The team may be operating in&#xD;
    more of a waterfall fashion focusing on requirements and design only before delivering any working software that&#xD;
    delivers value. Provide a coach or mentor to help teams that are new to Iterative Development, or that are struggling.&#xD;
    Encourage retrospective reviews at the end of each iteration to help teams evaluate their adoption of Iterative&#xD;
    Development and Release Planning best practices.&lt;br />&#xD;
    &lt;br />&#xD;
    Another possibility is that the team is transitioning and has included efforts related to practice improvement, such as&#xD;
    continuous integration, test automation or test driven development tooling and education or other practice&#xD;
    improvements, within the context of user stories or as separate work items in the release backlog for visibility and&#xD;
    prioritization of the work they are doing.&lt;br />&#xD;
    &lt;br />&#xD;
    Although traditionally only content related to the release should be in the release backlog, some teams are including&#xD;
    infrastructure and practice-related tasks to build visibility and help the team to adopt Continuous Integration or&#xD;
    other practices at a reasonable pace in alignment with business needs. If these activities are kept outside of the&#xD;
    scope of the visible work, the Product Owner, management team and development team may have less focus on it. Of&#xD;
    course, the team could just get it done and have it reduce the teamâ€™s velocity (and, thereby, the amount of work that&#xD;
    the commits to each iteration), but some teams find value in making a conscious decision about the investment.&lt;br />&#xD;
    &lt;br />&#xD;
    It is also possible that the velocity is not burning up because the user stories have dependencies on other items.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Frequency and reporting&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Team members post activity daily in an easily accessible location. This includes work items added and removed, and&#xD;
    status updates to work items. The resulting burnup chart can be shown by a team lead/ scrum master during each&#xD;
    iteration to help identify trends.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Collection and reporting tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Business Value Points can be maintained in IBM Rational Team Concert by adding a custom&amp;nbsp;Business Value&amp;nbsp;field&#xD;
    to the work item template.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Assumptions and prerequisites&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Business Value for all new work items is estimated relative to previously implemented items.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Time-boxed iterations are scheduled.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The team has a prioritized backlog of work items that is maintained on a daily basis. Each user story work item has&#xD;
        an assigned business value associated.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Iteration review meetings take place at the end of each iteration.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The team delivers working software every iteration.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;br />&#xD;
    Pitfalls, advice, and countermeasures&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Confirm that business value points are not assigned at too fine grained a level. Confirm that value is delivered by&#xD;
        that item alone.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business involvement is essential to determining business value. The development team cannot do this in isolation.&#xD;
        The product owner's primary responsibility is to make prioritization decisions based on the business value of each&#xD;
        feature (drawing on business objectives for the project to determine the relative business value points to assign).&#xD;
        As features are delivered throughout the project, return on investment can be projected based on business value&#xD;
        delivered by the team.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        While likely not calculated, the team should consider what percentage of the iteration was spent on delivering&#xD;
        business value (developing code, testing, and so forth) as opposed to tasks like diagramming, documenting, and&#xD;
        sitting in on meetings.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assigning business value points to features can be difficult so it is important to document assumptions. Calibrate&#xD;
        the valuation model once the software is in production and real data is available.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;em>Velocity&lt;/em> is not the same thing as &lt;em>Value&lt;/em>. A team with excellent velocity could be delivering&#xD;
        working software without measurable, high business value.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use Customer Satisfaction as a countermeasure to Business Value Velocity. The team may be assigning high business&#xD;
        value points to features that are not important to stakeholders. Stakeholder priorities may have changed. When&#xD;
        Customer Satisfaction is low, and Business Value Velocity shows a steady burn-up, reach out to stakeholders to&#xD;
        confirm that there is a shared understanding of the highest priority features that must be delivered.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
