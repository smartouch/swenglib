<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-WuqU7G_IbbwYBaLgiuFBeg" name="cost_per_unit_of_work,_eD4yALQyEd6HgZ8EwRW1Og" guid="-WuqU7G_IbbwYBaLgiuFBeg" changeDate="2010-01-08T08:25:29.093-0800" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Purpose&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    This metric is used to monitor costs throughout the project lifecycle based on the cost of the team and their velocity.&#xD;
    The calculated value of delivering a point is multiplied by the total number of points in the backlog in order to&#xD;
    monitor and project the estimated cost of the project at completion.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As team velocity increases over time, cost per unit of work decreases. However, if team velocity drops due to factors&#xD;
    such as unexpected rework or re-estimation, Cost per Unit of work increases, potentially negatively impacting the&#xD;
    project budget. Monitoring this metric in each iteration helps the team understand whether they are burning budget at a&#xD;
    sustainable rate.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Definition&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Cost per Unit of Work for a given iteration = cost of the team for the iteration / velocity&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The cost of the team is typically calculated based on the number of hours worked by each team member and their internal&#xD;
    rate.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A good way to monitor Cost per Unit over time is to use a trend line. Plot Cost per Unit on the Y axis and iterations&#xD;
    on the X axis.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;h3>&#xD;
    Analysis&#xD;
&lt;/h3>&#xD;
&lt;h4>&#xD;
    Using Cost per Unit of Work to monitor project execution&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Cost per Unit of Work is used as a project execution metric to help teams monitor and steer their project performance.&#xD;
    As the cost of delivering each point is tracked across iterations, trends are identified to help the team predict&#xD;
    whether they will complete the project within the planned budget. If the Cost per Point remains too high, the team can&#xD;
    take appropriate corrective action to meet the needs of its stakeholders.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Expected trend&lt;/strong> - Cost per Point is typically higher in early iterations, decreasing as team velocity&#xD;
    increases. As velocity stabilizes so does Cost per Point (assuming that team costs also remain stable). This enables&#xD;
    better forecasting of project cost at completion.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Sudden spike&lt;/strong> - This trend indicates that some disruption occurred to drive costs up or productivity&#xD;
    down, or both. When a new team member is added in an attempt to increase velocity, the team cost increases, but&#xD;
    velocity might take time to increase as the new person gets acclimated. This can temporarily inflate the Cost per&#xD;
    Point. Monitor velocity to confirm that team productivity improves as the result of the addition. Cost Per Point can&#xD;
    also spike when there is a large amount of rework required. This results in a significant reduction in the team's&#xD;
    ability to deliver new functionality. Analyze the associated change requests to determine whether the team needs to do&#xD;
    a better job of clarifying stakeholder requirements or focus more on the quality of their delivered code. This trend&#xD;
    can also occur when one or more work items planned for an iteration are significantly underestimated. It is important&#xD;
    to determine the cause of the estimation variance in order to know the correct corrective action to take. The team may&#xD;
    need to work harder to address unknowns in the project or get stakeholder clarification on requirements before&#xD;
    providing detailed estimates for the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Although this metric is useful for projecting the impact of disruptions throughout the lifecycle of the project, it can&#xD;
    also help measure the impact of efficiency improvements implemented by the team.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Using Cost Per Unit of Work to monitor capability improvement&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Cost per Unit of Work is also used as a Capability Improvement metric. It helps a team and middle management (project&#xD;
    manager, product owner) monitor improvements made during the project lifecycle in adopting practices such as Iterative&#xD;
    Development and Release Planning.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Teams that adopt these practices successfully will demonstrate improvements across the lifecycle, such as delivering&#xD;
    working software in time-boxed iterations, collaborating with stakeholders and receiving frequent feedback, and&#xD;
    performing just-in-time planning for each iteration, that will help to reduce the costs of delivering functionality.&#xD;
    Operational executives can also use this metric to monitor systematic improvement in reducing cost across the&#xD;
    organization by adopting these practices.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Expected trend -&lt;/strong> Successful teams decrease their Cost per Point by increasing their velocity as the&#xD;
    project progresses.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Cost per Point remains high throughout the lifecycle&lt;/strong> - When teams typically show no or little&#xD;
    reduction in the Cost per Unit of Work as their projects progress, it can indicate trouble in adopting Iterative&#xD;
    Development and Release Planning practices. Teams may not be delivering working software in each iteration, keeping&#xD;
    their velocity low, resulting in a high cost per point. Or they may be estimating their work too far out in the future&#xD;
    rather than providing detailed estimates at the beginning of the iteration for which the work is planned.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Frequency and reporting&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Cost per Point is calculated at the end of the iteration when costs and velocity are known. The Cost per Point chart&#xD;
    can be shown by a team lead during the iteration review with stakeholders to illustrate any impacts to project&#xD;
    costs.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Collection and reporting tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Team costs are typically tracked in a spreadsheet or project management tool. Iteration Velocity is captured in IBM&amp;reg;&#xD;
    Rational&amp;reg; Team Concert&amp;reg;. A Cost per Unit trend chart can be created in a simple spreadsheet with these inputs.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Assumptions and prerequisites&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Iterations are scheduled and time-boxed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The team has a prioritized backlog of work items that is maintained on a daily basis&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        User stories or use cases are elaborated and estimated in terms of &lt;em>points&lt;/em>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The team is delivering working software every iteration&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Pitfalls, advice, and countermeasures&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Because Cost per Unit of Work is affected by the cost of the team, organizations might be tempted to increase Cost&#xD;
        per Point with cheaper resources. However, cheaper resources may not be as productive, thus canceling out the&#xD;
        savings by delivering less.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Cost per Unit does not include non-staffing costs of development (such as hardware and development tools) which can&#xD;
        also significantly impact the actual cost at completion of a project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Cost per Point in the first iteration is not a useful metric for projecting actual costs of the project, because&#xD;
        the team still has many unknowns to address and their velocity has not yet stabilized.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Do not compare Cost per Unit of Work among teams. This metric is dependent on velocity which is specific to&#xD;
        individual teams. Different teams will likely have different estimates and different story point costs.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        In agile projects, cost is typically a constraint and budgeting is more an exercise in monitoring how much value&#xD;
        can be delivered by the team over the project lifecycle for the approved budget.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Lowering Cost per Point is a goal for teams that are striving to stay within budget, but countermeasures should be&#xD;
        monitored to ensure that this is not achieved at the expense of quality or customer satisfaction. Confirm that&#xD;
        stakeholder satisfaction is high by verifying they are receiving their requested functionality and that the quality&#xD;
        of delivered software is high.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
