<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1">
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XYqVFJunaHEdiy60aLUZAQ" name="Create QA Plan,_Ij4QgJEyEeCnTdC8bcBfaw" guid="-XYqVFJunaHEdiy60aLUZAQ">
    <refinedDescription>&lt;p>&#xD;
    The SQAP identifies the procedures, practices, standards, and governance for the fulfillment of the software quality&#xD;
    assurance function. This document specifies:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        the appropriate set of relevant project, business, and industry standards&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        guidelines and/or checklists for work products to be reviewed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the method for conducting reviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the procedures for performing QA audits&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        how to assess compliance to project processes and practice standards&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the tools used in the performance of the QA functions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        create an evidence trail of the QA activities and their outputs and outcomes&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xOAHyO62oqld-5aMsunbog" name="Create CM Plan,_LxzlEJEyEeCnTdC8bcBfaw" guid="-xOAHyO62oqld-5aMsunbog">
    <refinedDescription>&lt;p>&#xD;
    The CM Plan is a composite document which contains all the information necessary to effectively carry out configuration&#xD;
    management tasks for the project. This includes the documentation of&amp;nbsp;CM policies and procedures.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The&amp;nbsp;&lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.mgmt.configuration_mgmt.base-ibm/workproducts/configuration_management_plan_F3F7F5C3.html&quot;&#xD;
    guid=&quot;_Sfx6kFPJEeC0QeFAXej8ZA&quot;>Configuration Management Plan&lt;/a> describes the necessary input for effective CM&#xD;
    planning. The template is intended to serve as a guideline and intent of each section should be addressed within the&#xD;
    context of a given project/product.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This task is part of tailoring a process for a project ( See &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.mgmt.project_process_tailoring.base/tasks/tailor_process_5C4EB327.html&quot;&#xD;
    guid=&quot;_NOBsuCZLEd-QuZFPf_YdqQ&quot;>Tailor the Process&lt;/a>)&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TxIkCeWy2TqC8UhXZ1guTg" name="Create Certification Plan,_RkGT0JEyEeCnTdC8bcBfaw" guid="-TxIkCeWy2TqC8UhXZ1guTg">
    <refinedDescription>This task creates the PSAC, which ensures that the software product being developed will meet the requirements for&#xD;
certification. This plan will provide an overview of system and software architecture and the proposed safety criticality&#xD;
level(s) for the product (with justification).</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TFfrq4ZNfuKw6ghG1fwYNQ" name="Create SW Dev Plan,_TZ0fUJEyEeCnTdC8bcBfaw" guid="-TFfrq4ZNfuKw6ghG1fwYNQ">
    <refinedDescription>The purpose of the SDP is to characterize the project, development and management activities, staffing, tooling, schedule,&#xD;
and deliverables. This plan should address all phases of the software lifecycle, including requirements, architecture,&#xD;
analysis, design, integration, and testing in terms of process, tools, staffing, and so on.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fAJHFso_gZ4XXTEDDpTlmw" name="Create SW Ver Plan,_VIPI8JEyEeCnTdC8bcBfaw" guid="-fAJHFso_gZ4XXTEDDpTlmw">
    <refinedDescription>This&amp;nbsp;plan identifies the schedules, staffing, tooling, methods, and deliverables for the verification of the software&#xD;
as well as how traceability of the test cases, methods and tooling to the system and software requirements is created and&#xD;
maintained.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FUC4H5E3GFoLcz0oiPqjYA" name="perform_review,__IENoJiVEeCHuaDqfjetaA" guid="-FUC4H5E3GFoLcz0oiPqjYA">
    <keyConsiderations>&lt;p>&#xD;
    Reviews are &lt;em>very&lt;/em> expensive to perform but, when performed well,&amp;nbsp;are highly valuable. It is crucial that&#xD;
    they be performed effectively. Identified issues should be solved outside of the meeting. Subsequent reviews need only&#xD;
    go over the action lists from the meeting to ensure each issue has been appropriately addressed. This means that action&#xD;
    lists are essential artifacts for effective reviews.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is crucial to understand that reviews are not a replacement for good modeling in the first place. One of the basic&#xD;
    requirements prior to a review is that the model &lt;em>executes properly&lt;/em>. In a PIM review, this means that it is&#xD;
    debugged and can replicate (via execution) the use case scenarios. In a PSM review, this means that the model has&#xD;
    passed formal unit testing. You should NEVER find a compilation problem in a review; it is far cheaper to have the&#xD;
    product owner find that on their own &lt;em>prior to planning the review&lt;/em> rather than find it in a room full of&#xD;
    people. The intent of the review should be to evaluate an set of already high-quality artifacts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is also very important to &lt;em>stay focused&lt;/em> during the review. The meeting leader needs to rule with a (silk&#xD;
    covered) iron fist. Reviews are very expensive so the object is to perform the intent of the review as efficiently as&#xD;
    possible.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note: subsequent reviews of an already-reviewed work product should focus exclusively on the action list from the&#xD;
    previous review.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    There are a number of work products created in a modern software-centric development project. Any of them may be&#xD;
    subject to a review, depending on the delivery process in which they are created. Some of these include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Requirements specification&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems engineering models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Architectural Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Project schedules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software or hardware design models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software source code&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test cases, procedures, and results&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Software Development Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Quality Assurance Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Software Verification Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Verification and Validation Test Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Configuration Management Plan&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The best way to inject quality into work products is through careful engineering and demonstration and test via&#xD;
    execution or simulation. For many of these work products, execution isnâ€™t feasible, so reviews are a way of assessing&#xD;
    the quality of the work product. In addition, many work products must conform to guidelines, standards or templates and&#xD;
    this is most easily demonstrated through a review process. Lastly, reviews also serve to disseminate information to&#xD;
    different stakeholders about the structure, content, and quality of a work product.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SuM5eUiuIjsKQGxemvg0_g" name="reviewer,__IENoZiVEeCHuaDqfjetaA" guid="-SuM5eUiuIjsKQGxemvg0_g">
    <refinedDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_Reviewer__role_definition&quot; name=&quot;XE_Reviewer__role_definition&quot;>&lt;/a>&lt;a id=&quot;Description&quot;&#xD;
name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    Any member of the project team can take on the &lt;a class=&quot;PresentationName&quot;&#xD;
    guid=&quot;{638E0897-F63B-444C-8178-D05224689DE7}&quot;>Reviewer&lt;/a> role, as long as they have the appropriate pre-requisite&#xD;
    skills. For reviews that involve multiple team members, one person playing this role will also need to take&#xD;
    responsibility for coordinating the review process itself , playing the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.default.role_def.extend-ibm/roles/review_coordinator_D598A3E4.html&quot;&#xD;
    guid=&quot;{D6CA9DC7-4DF2-4BA4-A0AD-7FBAEB6539E1}&quot;>Review Coordinator&lt;/a> role. Reviews can be generalized into two main&#xD;
    categories: management reviews of project progress and technical reviews of project work products.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_LxgEke6gVS-o9wAo1NzAg" name="review_coordinator,__IENpZiVEeCHuaDqfjetaA" guid="-_LxgEke6gVS-o9wAo1NzAg">
    <refinedDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_Review_Coordinator__role_definition&quot;&#xD;
name=&quot;XE_Review_Coordinator__role_definition&quot;>&lt;/a>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;PresentationName&quot; guid=&quot;{D6CA9DC7-4DF2-4BA4-A0AD-7FBAEB6539E1}&quot;>Review Coordinator&lt;/a> role is&#xD;
    responsible for managing the review process. Reviews can be generalized into two main categories: management reviews of&#xD;
    project progress and technical reviews of project work products. This role is responsible for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Ensuring that required reviews are conducted&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that the appropriate review attendees are included and notified with appropriate review details&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Conducting the review in an appropriate and efficient manner&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that follow-up tasks that result from the review are managed to closure&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    When staffing this role, you need to consider both the skills required for the role and the different approaches you&#xD;
    can take to assigning staff to the role.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wtm8nfk8sUkV8tzwafU9Vw" name="review_record,__Iz0gJiVEeCHuaDqfjetaA" guid="-wtm8nfk8sUkV8tzwafU9Vw">
    <refinedDescription>&lt;p>&#xD;
    &lt;!--StartFragment-->A review record is an assessment work product specialized for capturing the results of review&#xD;
    activities.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hDLYTMAUl1Aj9Av5RPLyjQ" name="work_items_list,__Iz0hJiVEeCHuaDqfjetaA" guid="-hDLYTMAUl1Aj9Av5RPLyjQ">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gBRSsjKgOJRg3U0moK38Sw" name="change_request,__Iz0hpiVEeCHuaDqfjetaA" guid="-gBRSsjKgOJRg3U0moK38Sw">
    <refinedDescription>&lt;p>&#xD;
    A change request (CR) is typically a proposed variance from the system's current (or currently planned) behavior. It&#xD;
    can also be used for a generic piece of work that is required to support the project. Change requests may include&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A report of an error (defect)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An enhancement request&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Change requests provide a record of decisions and, with an appropriate assessment process, ensures that their change&#xD;
    impacts are considered.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some important types of change requests include:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Enhancement Requests&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Used by various stakeholders to request future features that they desire to have included in the product. These are a&#xD;
    type of stakeholder request that capture and articulate an understanding of the stakeholders needs.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Defects&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Reports of anomalies or failures in a delivered work product. Defects include such things as omissions and&#xD;
    imperfections found during early lifecycle phases, or symptoms of faults (failures) that need to be isolated and&#xD;
    corrected within the software. Defects may also include deviations from what can reasonably be expected of the software&#xD;
    behavior (such as usability issues).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The purpose of a defect is to communicate the details of the issue, enabling corrective action, resolution, and&#xD;
    tracking to occur.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-J2F710odE9uNRUnkEWWMrg" name="qa_engineer,_4EPOAZkjEeC4zvtKrl-GoQ" guid="-J2F710odE9uNRUnkEWWMrg">
    <refinedDescription>This role is focused on adherence to process and industry standards and guidelines. They are heavily involved in reviews,&#xD;
primarily ensuring that checklists meant to quantity adherence to standards and guidelines are met. They often have a role&#xD;
in following up to ensure action items from reviews are completed.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SBkXEQ4S53Uw2I1deKZc7w" name="project_plan,_4EPOBJkjEeC4zvtKrl-GoQ" guid="-SBkXEQ4S53Uw2I1deKZc7w">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in&#xD;
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it&#xD;
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and&#xD;
    their milestones.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect&#xD;
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of&#xD;
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the&#xD;
    project.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-V6oApp1cUdZ0XEHIxCydww" name="project_manager,_4EPOB5kjEeC4zvtKrl-GoQ" guid="-V6oApp1cUdZ0XEHIxCydww">
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver&amp;nbsp;the&#xD;
        desired&amp;nbsp;result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-14xgNGfsyeBu02jcUVu2AQ" name="rt_rel_czar,_4EPOCpkjEeC4zvtKrl-GoQ" guid="-14xgNGfsyeBu02jcUVu2AQ">
    <refinedDescription>This&amp;nbsp;role only exists within projects developing high-reliability systems or applications. The Reliability Czar role&#xD;
is active throughout the project development and participates and oversees the following activities &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Specifying reliability requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing work products for reliability, including &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Requirements&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Use Cases&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Requirements scenarios&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Architecture&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Algorithms&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Classes, functions, and variables&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Test suites and test cases&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Configuration Management approach&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performing Fault Means Effect Analysis (FMEA)&amp;nbsp;to determine relations of faults, hazards, risks, and control&#xD;
        measures&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviewing work products for adherence to reliability requirements and/or regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performing traceability between reliability&amp;nbsp;requirements and work products&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    With the explicit allocation of responsibility for reliability, high-reliability projects can be run more efficiently&#xD;
    and productively, while reducing the risk of failing to meet the safety needs of the developed product.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7lfRrjmiWpbmgBmYQxL6lw" name="rt_safe_czar,_4EPODZkjEeC4zvtKrl-GoQ" guid="-7lfRrjmiWpbmgBmYQxL6lw">
    <refinedDescription>&lt;p>&#xD;
    This&amp;nbsp;role only exists within projects developing safety critical systems or applications.&amp;nbsp;This &amp;nbsp;role is&#xD;
    active throughout the project development and participates and oversees the following activities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Specifying safety requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing work products for safety, including&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Requirements&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Use Cases&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Requirements scenarios&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Architecture&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Algorithms&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Classes, functions, and variables&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Test suites and test cases&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Configuration Management approach&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performing fault tree analysis (FTA) to determine relations of faults, hazards, risks, and control measures&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviewing work products for adherence to safety requirements and/or regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performing traceability between safety requirements and work products&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    With the explicit allocation of responsibility for safety, safety critical projects can be run more efficiently and&#xD;
    productively, while reducing the risk of failing to meet the safety needs of the developed product.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nqSIFbSran0zeu5jSMGyNg" name="qa_plan,_4EPOEJkjEeC4zvtKrl-GoQ" guid="-nqSIFbSran0zeu5jSMGyNg">
    <refinedDescription>&lt;p>&#xD;
    This work product addresses the role, activities, outputs and sequence of software quality assurance activities through&#xD;
    the entire software development lifecycle. The primary software quality assurance activities are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Ensuring process steps are undertaking according to project process definitions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensure work products meet content and organizational guidelines and standards&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensure process phase transition criteria are enforced&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Partake in reviews, assessments, and audits&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Provide guidelines for consistent application of software quality assurance criteria to process steps and work&#xD;
        products&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aUAX8zfzsMn7JUGqF7awRw" name="fmea,_4EPOE5kjEeC4zvtKrl-GoQ" guid="-aUAX8zfzsMn7JUGqF7awRw">
    <refinedDescription>&lt;p>&#xD;
    An FMEA is most often used in a bottom-up approach - that is detailed failures are examined to determine their ultimate&#xD;
    consequences. In contrast, Fault Tree Analysis is more commonly used in a top-down approach, beginning with hazards and&#xD;
    then determining what faults elicit them.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    FMEA and FTA are used in both reliability engineering and safety-critical system engineering.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-smGsKFwifrXJCQbz_V-QUg" name="fta,_4EPOFpkjEeC4zvtKrl-GoQ" guid="-smGsKFwifrXJCQbz_V-QUg">
    <refinedDescription>&lt;p>&#xD;
    An FTA uses logical operators (commonly AND, OR, and NOT, but may also include XOR, NOR, and NAND) to depict the&#xD;
    explicit relation between normal and exception (i.e. error) conditions and normal and exception (i.e. failure) events.&#xD;
    FTA can be used to depict the causal chain of events and conditions for an existing design and also drive the&#xD;
    development of design approaches (called control measures) that address the safety issues. These control measures are&#xD;
    then added to the FTA as &quot;ANDing redundancy&quot; so that for the hazard to be manifest, both the original condition or&#xD;
    fault must occur AND the control measure must fail as well.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An FTA is most often used in a top-down fashion, beginning with the hazards and the discovering that underlying faults&#xD;
    that can lead to them. In contrast, an Fault Means and Effect Analysis (FMEA) is most often used in a bottom up&#xD;
    fashion, beginning with the failures and then determining the consequences. Both are used in reliability and safety&#xD;
    engineering.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-j0a0MKpscOHx_F27-tr0dw" name="haz_an,_4EPOGZkjEeC4zvtKrl-GoQ" guid="-j0a0MKpscOHx_F27-tr0dw">
    <keyConsiderations>All the relevant hazards of the system and the faults that can lead to those hazards must be identified in the hazard&#xD;
analysis.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The hazard analysis is a key document for safety critical systems (see Term Definition: Safe) as it combines the&#xD;
    description of the hazards, the level of risk, system faults that can lead to the hazard, and the control measures all&#xD;
    together in a single view. The Fault is a non-compliance of the system that can lead to the identified hazard. The&#xD;
    severity is a measure of how bad the hazard is (an arbitrary scale of 1-10 is used often used). The Risk is a value&#xD;
    computed by the likelihood multiplied by the severity of the occurrence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    All safety critical systems are real-time systems as well, since each fault has a period of time that it can be&#xD;
    tolerated (called its Fault Tolerance Time). To be considered safe against a specific fault, the sum of the fault&#xD;
    detection time and the control time (the time required for the control measure to handle the fault) must be less than&#xD;
    or equal to the fault tolerance time.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The hazard analysis is usually coupled with one or more Fault Tree Analysis (FTA) to show how faults and other&#xD;
    conditions can combine to lead to hazards.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The hazard analysis is created during the requirements analysis phase but not all aspects (such as the control&#xD;
    measures) may be identified early on. The hazard analysis should be maintained throughout the development cycle - as&#xD;
    new hazards or faults are identified, they must be added to the table. As control measures are specified, the analysis&#xD;
    must be updated as well.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-H89gZY4zbJGsZ0-_o3cJjg" name="sw_ver_plan,_80OLN5kjEeC4zvtKrl-GoQ" guid="-H89gZY4zbJGsZ0-_o3cJjg">
    <keyConsiderations>This work product is project specific. If nothing else, it will be specialized with its own schedule, specific tools, and&#xD;
work environment even if the process and work product definitions, guidelines, and templates remain the same.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Mapping:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp-ibm/workproducts/test_plan_7503019A.html&quot;&#xD;
        guid=&quot;_yiMRwHFfEdy8Ac588DXPCQ&quot;>Test Plan&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    This work product provides a wealth of information about how a specific product will be verified. This work product&#xD;
    includes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Testing Schedule&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Testing process definitions and specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Work product identification, content, and organization&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Tools to be used, including options: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Test harness to be used or created&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Test Management software&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Static analysis tools&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Coverage analysis tools&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Types of tests to be employed (e.g. fault seeding, coverage, stress, volume, functional, hardware/software&#xD;
        integration, etc)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development languages to be used (e.g. C or Ada)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Approaches to development (e.g. model-based testing tools)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other aspects of the development environment (e.g. PC/Windows for development with a VxWorks/PowerPC target)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-GuURfnydHGJWo1M_J7v3EQ" name="sw_dev_plan,_80OLOpkjEeC4zvtKrl-GoQ" guid="-GuURfnydHGJWo1M_J7v3EQ">
    <keyConsiderations>This work product is project specific. If nothing else, it will be specialized with its own schedule, specific tools, and&#xD;
work environment even if the process and work product definitions, guidelines, and templates remain the same.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This work product provides a wealth of information about how a specific product will be developed. This work product&#xD;
    includes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Project Schedule&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Process definitions and specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Work product identification, content, and organization&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Tools to be used, including options&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development languages to be used (e.g. C or Ada)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Approaches to development (e.g. use of Fault Tree Diagrams, or UML models)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other aspects of the development environment (e.g. PC/Windows for development with a VxWorks/PowerPC target)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qrXNoKQU-DlYiMu9knYmzA" name="cert_plan,_80OLPZkjEeC4zvtKrl-GoQ" guid="-qrXNoKQU-DlYiMu9knYmzA">
    <keyConsiderations>&lt;p>&#xD;
    Take care to not be overly prescriptive in this plan, since the development organization will be held to whatever this&#xD;
    plan specifies or it will raise too many questions early in the product development lifecycle. In general, the PSAC&#xD;
    should be 40 pages or fewer in length. Nevertheless, the scope of the system responsibilities, expected technologies,&#xD;
    methods, and architectures should be clearly identified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The PSAC is normally reviewed early in the project by the regulatory agency or a Designated Engineering Representative&#xD;
    (DER).&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>This work product outlines the characteristics of the product being developed and of the development project relevant to&#xD;
certification. This plan will provide an overview of system and software architecture and the proposed safety criticality&#xD;
level(s) for the product (with justification). This plan may refer to other plans, such as the SQAP, SDP, or SVP, as and&#xD;
when appropriate.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RVHzLppAk_NRE23gaXCvyg" name="test_manager,_CI3UoZkkEeC4zvtKrl-GoQ" guid="-RVHzLppAk_NRE23gaXCvyg">
    <refinedDescription>Roles organize the responsibility for performing tasks and developing work products into logical groups. Each role can be&#xD;
assigned to one or more people, and each person can fill one or more roles. When staffing the Test Manager role, you need&#xD;
to consider both the skills required for the role and the different approaches you can take to assigning staff to the role.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gGA8epxEE7sDObpq_xf2kA" name="perform_review,_lQEnMJ2_EeC0Asc9EUyvKA" guid="-gGA8epxEE7sDObpq_xf2kA">
    <keyConsiderations>&lt;p>&#xD;
    Reviews are &lt;em>very&lt;/em> expensive to perform but, when performed well,&amp;nbsp;are highly valuable. It is crucial that&#xD;
    they be performed effectively. Identified issues should be solved outside of the meeting. Subsequent reviews need only&#xD;
    go over the action lists from the meeting to ensure each issue has been appropriately addressed. This means that action&#xD;
    lists are essential artifacts for effective reviews.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is crucial to understand that reviews are not a replacement for good modeling in the first place. One of the basic&#xD;
    requirements prior to a review is that the model &lt;em>executes properly&lt;/em>. In a PIM review, this means that it is&#xD;
    debugged and can replicate (via execution) the use case scenarios. In a PSM review, this means that the model has&#xD;
    passed formal unit testing. You should NEVER find a compilation problem in a review; it is far cheaper to have the&#xD;
    product owner find that on their own &lt;em>prior to planning the review&lt;/em> rather than find it in a room full of&#xD;
    people. The intent of the review should be to evaluate an set of already high-quality artifacts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is also very important to &lt;em>stay focused&lt;/em> during the review. The meeting leader needs to rule with a (silk&#xD;
    covered) iron fist. Reviews are very expensive so the object is to perform the intent of the review as efficiently as&#xD;
    possible.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note: subsequent reviews of an already-reviewed work product should focus exclusively on the action list from the&#xD;
    previous review.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    There are a number of work products created in a modern software-centric development project. Any of them may be&#xD;
    subject to a review, depending on the delivery process in which they are created. Some of these include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Requirements specification&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems engineering models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Architectural Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Project schedules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software or hardware design models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software source code&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test cases, procedures, and results&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Software Development Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Quality Assurance Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Software Verification Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Verification and Validation Test Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Configuration Management Plan&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The best way to inject quality into work products is through careful engineering and demonstration and test via&#xD;
    execution or simulation. For many of these work products, execution isnâ€™t feasible, so reviews are a way of assessing&#xD;
    the quality of the work product. In addition, many work products must conform to guidelines, standards or templates and&#xD;
    this is most easily demonstrated through a review process. Lastly, reviews also serve to disseminate information to&#xD;
    different stakeholders about the structure, content, and quality of a work product.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3F7QBcfyO8bA75reDV87HA" name="perform_review,_rDjowJ2_EeC0Asc9EUyvKA" guid="-3F7QBcfyO8bA75reDV87HA">
    <keyConsiderations>&lt;p>&#xD;
    Reviews are &lt;em>very&lt;/em> expensive to perform but, when performed well,&amp;nbsp;are highly valuable. It is crucial that&#xD;
    they be performed effectively. Identified issues should be solved outside of the meeting. Subsequent reviews need only&#xD;
    go over the action lists from the meeting to ensure each issue has been appropriately addressed. This means that action&#xD;
    lists are essential artifacts for effective reviews.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is crucial to understand that reviews are not a replacement for good modeling in the first place. One of the basic&#xD;
    requirements prior to a review is that the model &lt;em>executes properly&lt;/em>. In a PIM review, this means that it is&#xD;
    debugged and can replicate (via execution) the use case scenarios. In a PSM review, this means that the model has&#xD;
    passed formal unit testing. You should NEVER find a compilation problem in a review; it is far cheaper to have the&#xD;
    product owner find that on their own &lt;em>prior to planning the review&lt;/em> rather than find it in a room full of&#xD;
    people. The intent of the review should be to evaluate an set of already high-quality artifacts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is also very important to &lt;em>stay focused&lt;/em> during the review. The meeting leader needs to rule with a (silk&#xD;
    covered) iron fist. Reviews are very expensive so the object is to perform the intent of the review as efficiently as&#xD;
    possible.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note: subsequent reviews of an already-reviewed work product should focus exclusively on the action list from the&#xD;
    previous review.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    There are a number of work products created in a modern software-centric development project. Any of them may be&#xD;
    subject to a review, depending on the delivery process in which they are created. Some of these include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Requirements specification&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems engineering models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Architectural Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Project schedules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software or hardware design models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software source code&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test cases, procedures, and results&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Software Development Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Quality Assurance Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Software Verification Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Verification and Validation Test Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Configuration Management Plan&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The best way to inject quality into work products is through careful engineering and demonstration and test via&#xD;
    execution or simulation. For many of these work products, execution isnâ€™t feasible, so reviews are a way of assessing&#xD;
    the quality of the work product. In addition, many work products must conform to guidelines, standards or templates and&#xD;
    this is most easily demonstrated through a review process. Lastly, reviews also serve to disseminate information to&#xD;
    different stakeholders about the structure, content, and quality of a work product.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mrAr6UAYncYCdks7PAC51g" name="perform_review,_t61-8J2_EeC0Asc9EUyvKA" guid="-mrAr6UAYncYCdks7PAC51g">
    <keyConsiderations>&lt;p>&#xD;
    Reviews are &lt;em>very&lt;/em> expensive to perform but, when performed well,&amp;nbsp;are highly valuable. It is crucial that&#xD;
    they be performed effectively. Identified issues should be solved outside of the meeting. Subsequent reviews need only&#xD;
    go over the action lists from the meeting to ensure each issue has been appropriately addressed. This means that action&#xD;
    lists are essential artifacts for effective reviews.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is crucial to understand that reviews are not a replacement for good modeling in the first place. One of the basic&#xD;
    requirements prior to a review is that the model &lt;em>executes properly&lt;/em>. In a PIM review, this means that it is&#xD;
    debugged and can replicate (via execution) the use case scenarios. In a PSM review, this means that the model has&#xD;
    passed formal unit testing. You should NEVER find a compilation problem in a review; it is far cheaper to have the&#xD;
    product owner find that on their own &lt;em>prior to planning the review&lt;/em> rather than find it in a room full of&#xD;
    people. The intent of the review should be to evaluate an set of already high-quality artifacts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is also very important to &lt;em>stay focused&lt;/em> during the review. The meeting leader needs to rule with a (silk&#xD;
    covered) iron fist. Reviews are very expensive so the object is to perform the intent of the review as efficiently as&#xD;
    possible.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note: subsequent reviews of an already-reviewed work product should focus exclusively on the action list from the&#xD;
    previous review.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    There are a number of work products created in a modern software-centric development project. Any of them may be&#xD;
    subject to a review, depending on the delivery process in which they are created. Some of these include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Requirements specification&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems engineering models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Architectural Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Project schedules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software or hardware design models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software source code&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test cases, procedures, and results&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Software Development Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Quality Assurance Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Software Verification Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Verification and Validation Test Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Configuration Management Plan&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The best way to inject quality into work products is through careful engineering and demonstration and test via&#xD;
    execution or simulation. For many of these work products, execution isnâ€™t feasible, so reviews are a way of assessing&#xD;
    the quality of the work product. In addition, many work products must conform to guidelines, standards or templates and&#xD;
    this is most easily demonstrated through a review process. Lastly, reviews also serve to disseminate information to&#xD;
    different stakeholders about the structure, content, and quality of a work product.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xs9Qs0TMIs_g_tr7RXeN8w" name="perform_review,_wyuLAJ2_EeC0Asc9EUyvKA" guid="-xs9Qs0TMIs_g_tr7RXeN8w">
    <keyConsiderations>&lt;p>&#xD;
    Reviews are &lt;em>very&lt;/em> expensive to perform but, when performed well,&amp;nbsp;are highly valuable. It is crucial that&#xD;
    they be performed effectively. Identified issues should be solved outside of the meeting. Subsequent reviews need only&#xD;
    go over the action lists from the meeting to ensure each issue has been appropriately addressed. This means that action&#xD;
    lists are essential artifacts for effective reviews.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is crucial to understand that reviews are not a replacement for good modeling in the first place. One of the basic&#xD;
    requirements prior to a review is that the model &lt;em>executes properly&lt;/em>. In a PIM review, this means that it is&#xD;
    debugged and can replicate (via execution) the use case scenarios. In a PSM review, this means that the model has&#xD;
    passed formal unit testing. You should NEVER find a compilation problem in a review; it is far cheaper to have the&#xD;
    product owner find that on their own &lt;em>prior to planning the review&lt;/em> rather than find it in a room full of&#xD;
    people. The intent of the review should be to evaluate an set of already high-quality artifacts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is also very important to &lt;em>stay focused&lt;/em> during the review. The meeting leader needs to rule with a (silk&#xD;
    covered) iron fist. Reviews are very expensive so the object is to perform the intent of the review as efficiently as&#xD;
    possible.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note: subsequent reviews of an already-reviewed work product should focus exclusively on the action list from the&#xD;
    previous review.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    There are a number of work products created in a modern software-centric development project. Any of them may be&#xD;
    subject to a review, depending on the delivery process in which they are created. Some of these include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Requirements specification&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems engineering models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Architectural Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Project schedules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software or hardware design models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software source code&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test cases, procedures, and results&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Software Development Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Quality Assurance Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Software Verification Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Verification and Validation Test Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Configuration Management Plan&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The best way to inject quality into work products is through careful engineering and demonstration and test via&#xD;
    execution or simulation. For many of these work products, execution isnâ€™t feasible, so reviews are a way of assessing&#xD;
    the quality of the work product. In addition, many work products must conform to guidelines, standards or templates and&#xD;
    this is most easily demonstrated through a review process. Lastly, reviews also serve to disseminate information to&#xD;
    different stakeholders about the structure, content, and quality of a work product.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zIhl4jegAlADvzI9gcqjEA" name="perform_review,_3vrWEJ2_EeC0Asc9EUyvKA" guid="-zIhl4jegAlADvzI9gcqjEA">
    <keyConsiderations>&lt;p>&#xD;
    Reviews are &lt;em>very&lt;/em> expensive to perform but, when performed well,&amp;nbsp;are highly valuable. It is crucial that&#xD;
    they be performed effectively. Identified issues should be solved outside of the meeting. Subsequent reviews need only&#xD;
    go over the action lists from the meeting to ensure each issue has been appropriately addressed. This means that action&#xD;
    lists are essential artifacts for effective reviews.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is crucial to understand that reviews are not a replacement for good modeling in the first place. One of the basic&#xD;
    requirements prior to a review is that the model &lt;em>executes properly&lt;/em>. In a PIM review, this means that it is&#xD;
    debugged and can replicate (via execution) the use case scenarios. In a PSM review, this means that the model has&#xD;
    passed formal unit testing. You should NEVER find a compilation problem in a review; it is far cheaper to have the&#xD;
    product owner find that on their own &lt;em>prior to planning the review&lt;/em> rather than find it in a room full of&#xD;
    people. The intent of the review should be to evaluate an set of already high-quality artifacts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is also very important to &lt;em>stay focused&lt;/em> during the review. The meeting leader needs to rule with a (silk&#xD;
    covered) iron fist. Reviews are very expensive so the object is to perform the intent of the review as efficiently as&#xD;
    possible.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note: subsequent reviews of an already-reviewed work product should focus exclusively on the action list from the&#xD;
    previous review.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    There are a number of work products created in a modern software-centric development project. Any of them may be&#xD;
    subject to a review, depending on the delivery process in which they are created. Some of these include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Requirements specification&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems engineering models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Architectural Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Project schedules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software or hardware design models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software source code&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test cases, procedures, and results&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plans: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Software Development Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Quality Assurance Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Software Verification Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Verification and Validation Test Plan&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Configuration Management Plan&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The best way to inject quality into work products is through careful engineering and demonstration and test via&#xD;
    execution or simulation. For many of these work products, execution isnâ€™t feasible, so reviews are a way of assessing&#xD;
    the quality of the work product. In addition, many work products must conform to guidelines, standards or templates and&#xD;
    this is most easily demonstrated through a review process. Lastly, reviews also serve to disseminate information to&#xD;
    different stakeholders about the structure, content, and quality of a work product.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LqqGhQlpLJJwgVyR8VXgbQ" name="configuration_manager,_3AsXwbocEeCzv5ow6iUjcw" guid="-LqqGhQlpLJJwgVyR8VXgbQ">
    <refinedDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_configuration_manager_(role)__description_of&quot;&#xD;
name=&quot;XE_configuration_manager_(role)__description_of&quot;>&lt;/a>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The CM function supports the product development activity so that developers and integrators have appropriate&#xD;
    workspaces to build and test their work, and so that all work products are available for inclusion in the deployment&#xD;
    unit as required. The &lt;a class=&quot;PresentationName&quot; guid=&quot;_noy4AFI5Ed-gBcXwne8JxA&quot;>Configuration Manager&lt;/a> role also&#xD;
    has to ensure that the CM environment facilitates product review, and change and defect tracking tasks. The role is&#xD;
    also responsible for writing the CM Plan and reporting progress statistics based on change requests.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ukdYGm58mY5sHniSVP3LFA" name="configuration_management_plan,_3AsXxLocEeCzv5ow6iUjcw" guid="-ukdYGm58mY5sHniSVP3LFA">
    <refinedDescription>&lt;p>&#xD;
    This artifact describes how the configuration management is organized and identifies what practices and procedures will&#xD;
    be followed. Additionally, it documents the identification methods for configuration items, baselining polices, how&#xD;
    change request is processed, procedures for conducting the configuration audits.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2_-BFcn-yX03-PneGRDj4w" name="create_schedule,_zLy4oJExEeCnTdC8bcBfaw" guid="-2_-BFcn-yX03-PneGRDj4w">
    <refinedDescription>A schedule is a time-sequenced set of estimates of work activities loaded onto personnel resources. It is a crucial plan&#xD;
that allows effective management of the activities and resources to produce the desired product.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tSgTbGnLIuyyZDGxGFzWZQ" name="perf_safe_rel_analysis,_CUq8QJEyEeCnTdC8bcBfaw" guid="-tSgTbGnLIuyyZDGxGFzWZQ">
    <refinedDescription>The hazard analysis is a key document that captures hazards, risks, faults, and control measures together. The control&#xD;
measures mitigate the risks and so must be captured as requirements on the system to manage the risks to an acceptable&#xD;
level.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qxBsO57hdcSNqREMoSUu2w" name="rt_safe_czar,_CU0tQJEyEeCnTdC8bcBfaw" guid="-qxBsO57hdcSNqREMoSUu2w">
    <refinedDescription>&lt;p>&#xD;
    This&amp;nbsp;role only exists within projects developing safety critical systems or applications.&amp;nbsp;This &amp;nbsp;role is&#xD;
    active throughout the project development and participates and oversees the following activities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Specifying safety requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing work products for safety, including&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Requirements&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Use Cases&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Requirements scenarios&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Architecture&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Algorithms&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Classes, functions, and variables&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Test suites and test cases&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Configuration Management approach&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performing fault tree analysis (FTA) to determine relations of faults, hazards, risks, and control measures&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviewing work products for adherence to safety requirements and/or regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performing traceability between safety requirements and work products&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    With the explicit allocation of responsibility for safety, safety critical projects can be run more efficiently and&#xD;
    productively, while reducing the risk of failing to meet the safety needs of the developed product.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LaOW4aTIjipTPUrWR9G0Yg" name="rt_rel_czar,_CU0tQpEyEeCnTdC8bcBfaw" guid="-LaOW4aTIjipTPUrWR9G0Yg">
    <refinedDescription>This&amp;nbsp;role only exists within projects developing high-reliability systems or applications. The Reliability Czar role&#xD;
is active throughout the project development and participates and oversees the following activities &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Specifying reliability requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing work products for reliability, including &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Requirements&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Use Cases&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Requirements scenarios&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Architecture&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Algorithms&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Classes, functions, and variables&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Test suites and test cases&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Configuration Management approach&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performing Fault Means Effect Analysis (FMEA)&amp;nbsp;to determine relations of faults, hazards, risks, and control&#xD;
        measures&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reviewing work products for adherence to reliability requirements and/or regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performing traceability between reliability&amp;nbsp;requirements and work products&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    With the explicit allocation of responsibility for reliability, high-reliability projects can be run more efficiently&#xD;
    and productively, while reducing the risk of failing to meet the safety needs of the developed product.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qE0ToQqDW3S18YLVPkwxfg" name="sys_srs,_CU0tRJEyEeCnTdC8bcBfaw" guid="-qE0ToQqDW3S18YLVPkwxfg">
    <refinedDescription>&lt;p>&#xD;
    A&amp;nbsp;System Requirements Specification is strictly the set of all relevant System Requirements for a project. This&#xD;
    set provides a complete and consistent abstract description of the solution to the problem represented by a stakeholder&#xD;
    specification or a similar artifact, and its context, at an appropriate level of abstraction.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In practice, there&amp;nbsp;may be several levels of&amp;nbsp;System Requirements Specification - for example, in some cases&#xD;
    the a single level might be enough, in others, the system must be broken-down into subsystems at various levels.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If more than one level of System Requirement Specification is used, then remember the following points:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Each specification must be a complete and consistent description of the solution, at an appropriate level of&#xD;
        abstraction&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Traceability must be maintained throughout the levels&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        All specifications must be maintained in parallel&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Frequently, it&amp;nbsp;is sufficient to evolve a single specification.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The system requirements specification captures all of the system functional and non-functional requirements in one&#xD;
    place so that they may be analyzed for consistency, completeness and correctness.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Requirements must be clear, unambiguous, testable and complete. They must include all required properties of the&#xD;
    system. Care must be taken not to over-specify (a common problem) by including design measures in the requirements.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-28FR3N2I6nSQyzOgTQj2Vg" name="fmea,_CU0tRpEyEeCnTdC8bcBfaw" guid="-28FR3N2I6nSQyzOgTQj2Vg">
    <refinedDescription>&lt;p>&#xD;
    An FMEA is most often used in a bottom-up approach - that is detailed failures are examined to determine their ultimate&#xD;
    consequences. In contrast, Fault Tree Analysis is more commonly used in a top-down approach, beginning with hazards and&#xD;
    then determining what faults elicit them.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    FMEA and FTA are used in both reliability engineering and safety-critical system engineering.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-N1o2FP1fcJnTt0e0De5l_Q" name="fta,_CU0tSJEyEeCnTdC8bcBfaw" guid="-N1o2FP1fcJnTt0e0De5l_Q">
    <refinedDescription>&lt;p>&#xD;
    An FTA uses logical operators (commonly AND, OR, and NOT, but may also include XOR, NOR, and NAND) to depict the&#xD;
    explicit relation between normal and exception (i.e. error) conditions and normal and exception (i.e. failure) events.&#xD;
    FTA can be used to depict the causal chain of events and conditions for an existing design and also drive the&#xD;
    development of design approaches (called control measures) that address the safety issues. These control measures are&#xD;
    then added to the FTA as &quot;ANDing redundancy&quot; so that for the hazard to be manifest, both the original condition or&#xD;
    fault must occur AND the control measure must fail as well.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An FTA is most often used in a top-down fashion, beginning with the hazards and the discovering that underlying faults&#xD;
    that can lead to them. In contrast, an Fault Means and Effect Analysis (FMEA) is most often used in a bottom up&#xD;
    fashion, beginning with the failures and then determining the consequences. Both are used in reliability and safety&#xD;
    engineering.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7F29xFWWKEBD4eKfY5ZHSg" name="haz_an,_CU0tSpEyEeCnTdC8bcBfaw" guid="-7F29xFWWKEBD4eKfY5ZHSg">
    <keyConsiderations>All the relevant hazards of the system and the faults that can lead to those hazards must be identified in the hazard&#xD;
analysis.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The hazard analysis is a key document for safety critical systems (see Term Definition: Safe) as it combines the&#xD;
    description of the hazards, the level of risk, system faults that can lead to the hazard, and the control measures all&#xD;
    together in a single view. The Fault is a non-compliance of the system that can lead to the identified hazard. The&#xD;
    severity is a measure of how bad the hazard is (an arbitrary scale of 1-10 is used often used). The Risk is a value&#xD;
    computed by the likelihood multiplied by the severity of the occurrence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    All safety critical systems are real-time systems as well, since each fault has a period of time that it can be&#xD;
    tolerated (called its Fault Tolerance Time). To be considered safe against a specific fault, the sum of the fault&#xD;
    detection time and the control time (the time required for the control measure to handle the fault) must be less than&#xD;
    or equal to the fault tolerance time.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The hazard analysis is usually coupled with one or more Fault Tree Analysis (FTA) to show how faults and other&#xD;
    conditions can combine to lead to hazards.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The hazard analysis is created during the requirements analysis phase but not all aspects (such as the control&#xD;
    measures) may be identified early on. The hazard analysis should be maintained throughout the development cycle - as&#xD;
    new hazards or faults are identified, they must be added to the table. As control measures are specified, the analysis&#xD;
    must be updated as well.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VYuP0mJ_fHMZQCuiDFGZBQ" name="spec_logical_arch,_X7O_kJEzEeCnTdC8bcBfaw" guid="-VYuP0mJ_fHMZQCuiDFGZBQ">
    <keyConsiderations>&lt;ul>&#xD;
    &lt;li>&#xD;
        How large is the project?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How many development teams are involved?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How large is each team?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are the teams colocated?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How will the teams collaborate and share model artifacts?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What is the degree of interaction among the models or portions of the models?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are there architectural design patterns, guidelines, or principles to be shared across models?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Will the team be receiving a handoff model from system engineering?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are there legacy components, libraries, or source files to be shared among the teams?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is the hardware platform available to all team members for integration?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How will integration occur, who will do it, and when and where will this take place?&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The logical architecture is the set of organizing principles and structures for the development project. The largest&#xD;
    single aspect of this is the organization of the system model(s). The goals of a good logical architecture are to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        allow team members to complete their work as efficiently as possible&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        minimize interactions between teams&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        maximize access to the parts of the model they need but don't have control of&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        maximize ease of sharing parts when needed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        minimize rework and independent recreation of the same elements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        maximize the ease of system construction (compilation and deployment on target platforms)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vc3uGy29mrb0L-DqXBTidQ" name="project_manager,_o9uwAqM2EeCHu5XnACwLPw" guid="-vc3uGy29mrb0L-DqXBTidQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver&amp;nbsp;the&#xD;
        desired&amp;nbsp;result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fRm91R0MJ37QaWlsjRUIXw" name="project_plan,_o9uwBaM2EeCHu5XnACwLPw" guid="-fRm91R0MJ37QaWlsjRUIXw">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in&#xD;
order to make sure that everybody agrees with it.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it&#xD;
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and&#xD;
    their milestones.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect&#xD;
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of&#xD;
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the&#xD;
    project.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OF2OzC3VcKvV45nC-Q4p1A" name="risk_list,_o9uwCKM2EeCHu5XnACwLPw" guid="-OF2OzC3VcKvV45nC-Q4p1A">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SGsKd8TDUSa5AyYMKPki4g" name="project_defined_process,_o94hAaM2EeCHu5XnACwLPw" guid="-SGsKd8TDUSa5AyYMKPki4g">
    <refinedDescription>&lt;p>&#xD;
    A project process typically describes or references the following items:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        what organizational processes and policies the project must adhere to&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what standard process, if any, is being adopted by the project&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        any tailoring of the standard process, or deviations from policy mandates&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        rationale for tailoring and deviations (and approvals if they are required)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        which work products are reviewed at which milestones, and their level of completion&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        guidelines and information that the project wants to use in addition to the information contained in the main&#xD;
        process&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what reviews will be performed, and their level of formality&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        what approvals are required, by whom, and when&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5K2AaMaF65Pt8aIPoLF_1w" name="architect,_o_qpsaM2EeCHu5XnACwLPw" guid="-5K2AaMaF65Pt8aIPoLF_1w">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with&amp;nbsp;project managers&amp;nbsp;in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with&amp;nbsp;analysts and developers&amp;nbsp;to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system.&amp;nbsp;&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-51Edt1sO75bDUAlslYcUqw" name="rt_architectural_model,_o_qptKM2EeCHu5XnACwLPw" guid="-51Edt1sO75bDUAlslYcUqw">
    <keyConsiderations>&lt;p>&#xD;
    The design is intended to optimize aspects of the analysis model; in terms of architectural design, this means that the&#xD;
    selected design patterns must support the analysis model functionality but orchestrate and organize it so that it can&#xD;
    execute in an optimal way - optimal, that is, in terms of the ranked set of design criteria.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should explicitly name and rank the design criteria to make sure you are making good architecture decisions. Take&#xD;
    care not to optimize the system too early as this can lead to sub-optimal architectures that are difficult to change&#xD;
    downstream.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>Architecture is a part of design, and as such, it is concerned almost exclusively with &lt;em>optimization&lt;/em>. The scope of&#xD;
architecture is system-wide and so the scope of this optimization has the same breadth.&amp;nbsp; The architecture represents&#xD;
the &lt;em>strategic design decisions&lt;/em> of the system.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-GVyg3hFLK-qKgoDPKiK7Uw" name="prespiral_planning,_EnxygWw_EeCcMLi_sG6TzQ" guid="-GVyg3hFLK-qKgoDPKiK7Uw" version="7.5.1"/>
</xmi:XMI>
