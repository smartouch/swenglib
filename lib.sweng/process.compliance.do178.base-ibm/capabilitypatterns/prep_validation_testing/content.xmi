<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1">
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YvqA2HzUmRm_9ILl24wpqA" name="test_plan,_1xx6lnBPEeCqL7C8LwcIDg" guid="-YvqA2HzUmRm_9ILl24wpqA">
    <refinedDescription>&lt;p>&#xD;
    The Test Plan forms the framework within which the team performing the testing will work for the given schedule. It&#xD;
    directs, guides, and constrains the test effort, focusing the work on the useful and necessary deliverables. It also&#xD;
    communicates the intent of the effort to stakeholders. As such, the Test Plan should avoid detail that would not be&#xD;
    understood, or would be considered irrelevant by the stakeholders in the test effort.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In cultures or domains in which this work product is not recognized as a formal work product, it is still important to&#xD;
    address the different aspects represented by the Test Plan as part of the planning effort, and make appropriate&#xD;
    decisions about what testing will be undertaken, and how the test effort will be conducted.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fGIUt-yh-wAlNtLkYADgUg" name="test_strategy,_1xx6mHBPEeCqL7C8LwcIDg" guid="-fGIUt-yh-wAlNtLkYADgUg">
    <refinedDescription>&lt;p>&#xD;
    The Test Strategy is used to identify testing principles and practices that will be applied in order to mitigate the&#xD;
    project risks, manage the testing risks, and identify any exposures. This artifact provides a common approach and&#xD;
    terminology for the testing effort. It also gives a general direction of where the testing is headed. It emphasizes the&#xD;
    importance of a team approach to testing.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-T8tnsDNfNpBRYZcYMpZx1g" name="test_env_configuration,_1xx6mnBPEeCqL7C8LwcIDg" guid="-T8tnsDNfNpBRYZcYMpZx1g">
    <refinedDescription>&lt;p>&#xD;
    Each Test Environment Configuration specifies an appropriate, controlled setting in which to conduct the required test&#xD;
    and evaluation activities. Providing a controlled environment, built from a known configuration in which to conduct&#xD;
    these activities, helps to ensure that the results of these efforts are accurate, valid, and have a higher likelihood&#xD;
    of being systematically reproduced. A well-controlled Test Environment is an important aspect of efficient failure&#xD;
    analysis and fault resolution.&#xD;
&lt;/p>&lt;!--EndFragment--></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_OEigi_ytfaS1Y6JH4dIUA" name="test_automation_arch,_1xx6nHBPEeCqL7C8LwcIDg" guid="-_OEigi_ytfaS1Y6JH4dIUA">
    <refinedDescription>&lt;p>&#xD;
    The Test Automation Architecture provides a comprehensive architectural overview of the test-automation system, using a&#xD;
    number of different architectural views to depict different aspects of the system. It serves as a means of reasoning&#xD;
    about, managing, and communicating the fundamental characteristics and features of the test-automation software system.&#xD;
    It provides a governing focus for the test-automation software that enables the required system to be realized in&#xD;
    respect to key aspects such as: maintainability, extensibility, reliability, concurrency, distribution, security, and&#xD;
    recovery.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ojC1w3Wx6_9QA7dP-bUlOA" name="test_data,_4cP8w3BPEeCqL7C8LwcIDg" guid="-ojC1w3Wx6_9QA7dP-bUlOA">
    <keyConsiderations>When managed separately from the procedural aspects of the test, Test Data enables the unique characteristics of the test&#xD;
to be modified independently.</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZtChicsoel9GUVhmJrVX3Q" name="test_interface_spec,_4cP8xXBPEeCqL7C8LwcIDg" guid="-ZtChicsoel9GUVhmJrVX3Q">
    <refinedDescription>&lt;p>&#xD;
    Test Interface Specifications are used in situations where aspects of the system that do not normally have visibility&#xD;
    must be observed, or where control of the software is required in a way not normally available through the standard&#xD;
    interface. &lt;!--StartFragment-->Each test Interface should provide a unique and well-defined group of services. &#xD;
    &lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iKRPVYVcVmCBKcF0WkNrzQ" name="test_design,_4cP8yXBPEeCqL7C8LwcIDg" guid="-iKRPVYVcVmCBKcF0WkNrzQ">
    <refinedDescription>&lt;p>&#xD;
    The Test Design incorporates all of the decisions regarding the test structural elements (and their collaborations)&#xD;
    required to enable testing of the already identified targets. This work product drives the test implementation&#xD;
    activities, and increases the testing focus during the design and implementation.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2rEUk35NIsTZVJEWK6bDkQ" name="test_case,_4cP8y3BPEeCqL7C8LwcIDg" guid="-2rEUk35NIsTZVJEWK6bDkQ">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jpvmrX6AUUFz1LnYBJYxNA" name="test_ideas_list,_7UulwXBPEeCqL7C8LwcIDg" guid="-jpvmrX6AUUFz1LnYBJYxNA">
    <refinedDescription>The Test Ideas List provides a layer of abstraction between the conceptual Test Plan and the more detailed Test Case (or&#xD;
the concrete Test Script). It is used to capture initial ideas for potential tests (often ill-formed or partial ideas) so&#xD;
that the tests can be reasoned about. This work product is particularly useful earlier in the development cycle, or when&#xD;
supporting project work products are unavailable or incomplete.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dasOQ45mqoOJEct8G8Ys6A" name="test_case,_MzDd03BQEeCqL7C8LwcIDg" guid="-dasOQ45mqoOJEct8G8Ys6A">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ZZeMG4Lr8wgJ2jOxyaEMoA" name="test_data,_MzDd13BQEeCqL7C8LwcIDg" guid="-ZZeMG4Lr8wgJ2jOxyaEMoA">
    <keyConsiderations>When managed separately from the procedural aspects of the test, Test Data enables the unique characteristics of the test&#xD;
to be modified independently.</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VrmxeT-Ihhg06MJGR8cc-w" name="test_ideas_list,_MzDd2XBQEeCqL7C8LwcIDg" guid="-VrmxeT-Ihhg06MJGR8cc-w">
    <refinedDescription>The Test Ideas List provides a layer of abstraction between the conceptual Test Plan and the more detailed Test Case (or&#xD;
the concrete Test Script). It is used to capture initial ideas for potential tests (often ill-formed or partial ideas) so&#xD;
that the tests can be reasoned about. This work product is particularly useful earlier in the development cycle, or when&#xD;
supporting project work products are unavailable or incomplete.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DZI-FrZREYJQijF2YVC9KA" name="test_strategy,_MzDd23BQEeCqL7C8LwcIDg" guid="-DZI-FrZREYJQijF2YVC9KA">
    <refinedDescription>&lt;p>&#xD;
    The Test Strategy is used to identify testing principles and practices that will be applied in order to mitigate the&#xD;
    project risks, manage the testing risks, and identify any exposures. This artifact provides a common approach and&#xD;
    terminology for the testing effort. It also gives a general direction of where the testing is headed. It emphasizes the&#xD;
    importance of a team approach to testing.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-scGt84MKvcnFXnx_eg56NQ" name="test_design,_PIENYnBQEeCqL7C8LwcIDg" guid="-scGt84MKvcnFXnx_eg56NQ">
    <refinedDescription>&lt;p>&#xD;
    The Test Design incorporates all of the decisions regarding the test structural elements (and their collaborations)&#xD;
    required to enable testing of the already identified targets. This work product drives the test implementation&#xD;
    activities, and increases the testing focus during the design and implementation.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dh0RL99UGtRvELsKtB1RvQ" name="test_env_configuration,_PIENZXBQEeCqL7C8LwcIDg" guid="-dh0RL99UGtRvELsKtB1RvQ">
    <refinedDescription>&lt;p>&#xD;
    Each Test Environment Configuration specifies an appropriate, controlled setting in which to conduct the required test&#xD;
    and evaluation activities. Providing a controlled environment, built from a known configuration in which to conduct&#xD;
    these activities, helps to ensure that the results of these efforts are accurate, valid, and have a higher likelihood&#xD;
    of being systematically reproduced. A well-controlled Test Environment is an important aspect of efficient failure&#xD;
    analysis and fault resolution.&#xD;
&lt;/p>&lt;!--EndFragment--></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7OnSvxiWL52JGwjpLMgsxg" name="test_automation_arch,_PIENaHBQEeCqL7C8LwcIDg" guid="-7OnSvxiWL52JGwjpLMgsxg">
    <refinedDescription>&lt;p>&#xD;
    The Test Automation Architecture provides a comprehensive architectural overview of the test-automation system, using a&#xD;
    number of different architectural views to depict different aspects of the system. It serves as a means of reasoning&#xD;
    about, managing, and communicating the fundamental characteristics and features of the test-automation software system.&#xD;
    It provides a governing focus for the test-automation software that enables the required system to be realized in&#xD;
    respect to key aspects such as: maintainability, extensibility, reliability, concurrency, distribution, security, and&#xD;
    recovery.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0PvBd9vUP7qDJIXYCPZUcg" name="test_interface_spec,_h9k60HBQEeCqL7C8LwcIDg" guid="-0PvBd9vUP7qDJIXYCPZUcg">
    <refinedDescription>&lt;p>&#xD;
    Test Interface Specifications are used in situations where aspects of the system that do not normally have visibility&#xD;
    must be observed, or where control of the software is required in a way not normally available through the standard&#xD;
    interface. &lt;!--StartFragment-->Each test Interface should provide a unique and well-defined group of services. &#xD;
    &lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-X_3ZMOzU4_udMDYCPLDsDQ" name="test_plan,_h9k60nBQEeCqL7C8LwcIDg" guid="-X_3ZMOzU4_udMDYCPLDsDQ">
    <refinedDescription>&lt;p>&#xD;
    The Test Plan forms the framework within which the team performing the testing will work for the given schedule. It&#xD;
    directs, guides, and constrains the test effort, focusing the work on the useful and necessary deliverables. It also&#xD;
    communicates the intent of the effort to stakeholders. As such, the Test Plan should avoid detail that would not be&#xD;
    understood, or would be considered irrelevant by the stakeholders in the test effort.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In cultures or domains in which this work product is not recognized as a formal work product, it is still important to&#xD;
    address the different aspects represented by the Test Plan as part of the planning effort, and make appropriate&#xD;
    decisions about what testing will be undertaken, and how the test effort will be conducted.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xwImOvFN6k-SbGQSnIDqAQ" name="test_suite,_h9k61HBQEeCqL7C8LwcIDg" guid="-xwImOvFN6k-SbGQSnIDqAQ">
    <refinedDescription>&lt;p>&#xD;
    The Test Suite provides a means of managing the complexity of the test implementation. Many system test efforts fail&#xD;
    because the team gets lost in the minutia of all of the detailed tests, and subsequently loses control of the test&#xD;
    effort. Similar to UML packages, Test Suites provide a hierarchy of encapsulating containers to help manage the test&#xD;
    implementation. They provide a means of managing the strategic aspects of the test effort by collecting tests together&#xD;
    in related groups that can be planned, managed, and assessed in a meaningful way.&#xD;
&lt;/p>&lt;!--EndFragment--></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fztRP9Qmph0yY3deu-EyuA" name="test_strategy,_gGXhkXBQEeCqL7C8LwcIDg" guid="-fztRP9Qmph0yY3deu-EyuA">
    <refinedDescription>&lt;p>&#xD;
    The Test Strategy is used to identify testing principles and practices that will be applied in order to mitigate the&#xD;
    project risks, manage the testing risks, and identify any exposures. This artifact provides a common approach and&#xD;
    terminology for the testing effort. It also gives a general direction of where the testing is headed. It emphasizes the&#xD;
    importance of a team approach to testing.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sqlbY8NdGW_HOMbLcurTfw" name="test_automation_arch,_gGXhlXBQEeCqL7C8LwcIDg" guid="-sqlbY8NdGW_HOMbLcurTfw">
    <refinedDescription>&lt;p>&#xD;
    The Test Automation Architecture provides a comprehensive architectural overview of the test-automation system, using a&#xD;
    number of different architectural views to depict different aspects of the system. It serves as a means of reasoning&#xD;
    about, managing, and communicating the fundamental characteristics and features of the test-automation software system.&#xD;
    It provides a governing focus for the test-automation software that enables the required system to be realized in&#xD;
    respect to key aspects such as: maintainability, extensibility, reliability, concurrency, distribution, security, and&#xD;
    recovery.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cA8DcAnJP6bzdHQPwwzzhw" name="test_data,_gGXhl3BQEeCqL7C8LwcIDg" guid="-cA8DcAnJP6bzdHQPwwzzhw">
    <keyConsiderations>When managed separately from the procedural aspects of the test, Test Data enables the unique characteristics of the test&#xD;
to be modified independently.</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jQXt2k_BPWu2y2aHoV_PlQ" name="test_env_configuration,_gGXhmXBQEeCqL7C8LwcIDg" guid="-jQXt2k_BPWu2y2aHoV_PlQ">
    <refinedDescription>&lt;p>&#xD;
    Each Test Environment Configuration specifies an appropriate, controlled setting in which to conduct the required test&#xD;
    and evaluation activities. Providing a controlled environment, built from a known configuration in which to conduct&#xD;
    these activities, helps to ensure that the results of these efforts are accurate, valid, and have a higher likelihood&#xD;
    of being systematically reproduced. A well-controlled Test Environment is an important aspect of efficient failure&#xD;
    analysis and fault resolution.&#xD;
&lt;/p>&lt;!--EndFragment--></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5DXJTKu8foj_Rp8okjkQVA" name="test_plan,_gGXhm3BQEeCqL7C8LwcIDg" guid="-5DXJTKu8foj_Rp8okjkQVA">
    <refinedDescription>&lt;p>&#xD;
    The Test Plan forms the framework within which the team performing the testing will work for the given schedule. It&#xD;
    directs, guides, and constrains the test effort, focusing the work on the useful and necessary deliverables. It also&#xD;
    communicates the intent of the effort to stakeholders. As such, the Test Plan should avoid detail that would not be&#xD;
    understood, or would be considered irrelevant by the stakeholders in the test effort.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In cultures or domains in which this work product is not recognized as a formal work product, it is still important to&#xD;
    address the different aspects represented by the Test Plan as part of the planning effort, and make appropriate&#xD;
    decisions about what testing will be undertaken, and how the test effort will be conducted.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MVPon_H3Bpzby5AJSGvoCg" name="perform_review,_Xt1-oJiYEeCHuaDqfjetaA" guid="-MVPon_H3Bpzby5AJSGvoCg">
    <keyConsiderations>&lt;p>&#xD;
    Reviews are &lt;em>very&lt;/em> expensive to perform but, when performed well,&amp;nbsp;are highly valuable. It is crucial that&#xD;
    they be performed effectively. Identified issues should be solved outside of the meeting. Subsequent reviews need only&#xD;
    go over the action lists from the meeting to ensure each issue has been appropriately addressed. This means that action&#xD;
    lists are essential artifacts for effective reviews.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is crucial to understand that reviews are not a replacement for good modeling in the first place. One of the basic&#xD;
    requirements prior to a review is that the model &lt;em>executes properly&lt;/em>. In a PIM review, this means that it is&#xD;
    debugged and can replicate (via execution) the use case scenarios. In a PSM review, this means that the model has&#xD;
    passed formal unit testing. You should NEVER find a compilation problem in a review; it is far cheaper to have the&#xD;
    product owner find that on their own &lt;em>prior to planning the review&lt;/em> rather than find it in a room full of&#xD;
    people. The intent of the review should be to evaluate an set of already high-quality artifacts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is also very important to &lt;em>stay focused&lt;/em> during the review. The meeting leader needs to rule with a (silk&#xD;
    covered) iron fist. Reviews are very expensive so the object is to perform the intent of the review as efficiently as&#xD;
    possible.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note: subsequent reviews of an already-reviewed work product should focus exclusively on the action list from the&#xD;
    previous review.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Reviews may be applied to any work product. Typically reviews are applied to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Requirements specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Dependability analyses&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Project plans&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Project metric measurements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use case models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Architecture&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Design&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Source Code&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test Procedures&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test Cases&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test Results&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    It is important to understand that while reviews do add value, they are expensive and should not be the primary means&#xD;
    by which quality is assessed or improved. Formal methods and system execution and test are better suited to that&#xD;
    purpose.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PiyL9DZS9kfBvQ2uPQ5MNQ" name="reviewer,_XullgJiYEeCHuaDqfjetaA" guid="-PiyL9DZS9kfBvQ2uPQ5MNQ">
    <refinedDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_Reviewer__role_definition&quot; name=&quot;XE_Reviewer__role_definition&quot;>&lt;/a>&lt;a id=&quot;Description&quot;&#xD;
name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    Any member of the project team can take on the &lt;a class=&quot;PresentationName&quot;&#xD;
    guid=&quot;{638E0897-F63B-444C-8178-D05224689DE7}&quot;>Reviewer&lt;/a> role, as long as they have the appropriate pre-requisite&#xD;
    skills. For reviews that involve multiple team members, one person playing this role will also need to take&#xD;
    responsibility for coordinating the review process itself , playing the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.default.role_def.extend-ibm/roles/review_coordinator_D598A3E4.html&quot;&#xD;
    guid=&quot;{D6CA9DC7-4DF2-4BA4-A0AD-7FBAEB6539E1}&quot;>Review Coordinator&lt;/a> role. Reviews can be generalized into two main&#xD;
    categories: management reviews of project progress and technical reviews of project work products.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ve26wrkPaKIFfFIh7Gz6TA" name="review_coordinator,_XvCRcpiYEeCHuaDqfjetaA" guid="-ve26wrkPaKIFfFIh7Gz6TA">
    <refinedDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;XE_Review_Coordinator__role_definition&quot;&#xD;
name=&quot;XE_Review_Coordinator__role_definition&quot;>&lt;/a>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;PresentationName&quot; guid=&quot;{D6CA9DC7-4DF2-4BA4-A0AD-7FBAEB6539E1}&quot;>Review Coordinator&lt;/a> role is&#xD;
    responsible for managing the review process. Reviews can be generalized into two main categories: management reviews of&#xD;
    project progress and technical reviews of project work products. This role is responsible for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Ensuring that required reviews are conducted&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that the appropriate review attendees are included and notified with appropriate review details&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Conducting the review in an appropriate and efficient manner&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that follow-up tasks that result from the review are managed to closure&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    When staffing this role, you need to consider both the skills required for the role and the different approaches you&#xD;
    can take to assigning staff to the role.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-92xHuoZ5Z3QIHO7h9S1biw" name="review_record,_XvVMYJiYEeCHuaDqfjetaA" guid="-92xHuoZ5Z3QIHO7h9S1biw">
    <refinedDescription>&lt;p>&#xD;
    &lt;!--StartFragment-->A review record is an assessment work product specialized for capturing the results of review&#xD;
    activities.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9U17lz3R136iqVTfasuj6g" name="work_items_list,_XvVMZJiYEeCHuaDqfjetaA" guid="-9U17lz3R136iqVTfasuj6g">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9rS6UaCRJo5NAEXamds04g" name="change_request,_XvVMZpiYEeCHuaDqfjetaA" guid="-9rS6UaCRJo5NAEXamds04g">
    <refinedDescription>&lt;p>&#xD;
    A change request (CR) is typically a proposed variance from the system's current (or currently planned) behavior. It&#xD;
    can also be used for a generic piece of work that is required to support the project. Change requests may include&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A report of an error (defect)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An enhancement request&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Change requests provide a record of decisions and, with an appropriate assessment process, ensures that their change&#xD;
    impacts are considered.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some important types of change requests include:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Enhancement Requests&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Used by various stakeholders to request future features that they desire to have included in the product. These are a&#xD;
    type of stakeholder request that capture and articulate an understanding of the stakeholders needs.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;b>Defects&lt;/b>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Reports of anomalies or failures in a delivered work product. Defects include such things as omissions and&#xD;
    imperfections found during early lifecycle phases, or symptoms of faults (failures) that need to be isolated and&#xD;
    corrected within the software. Defects may also include deviations from what can reasonably be expected of the software&#xD;
    behavior (such as usability issues).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The purpose of a defect is to communicate the details of the issue, enabling corrective action, resolution, and&#xD;
    tracking to occur.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-D7LJXHQTFYA1r_LXBnGkDw" name="perform_review,_cOVHQJiYEeCHuaDqfjetaA" guid="-D7LJXHQTFYA1r_LXBnGkDw">
    <keyConsiderations>&lt;p>&#xD;
    Reviews are &lt;em>very&lt;/em> expensive to perform but, when performed well,&amp;nbsp;are highly valuable. It is crucial that&#xD;
    they be performed effectively. Identified issues should be solved outside of the meeting. Subsequent reviews need only&#xD;
    go over the action lists from the meeting to ensure each issue has been appropriately addressed. This means that action&#xD;
    lists are essential artifacts for effective reviews.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is crucial to understand that reviews are not a replacement for good modeling in the first place. One of the basic&#xD;
    requirements prior to a review is that the model &lt;em>executes properly&lt;/em>. In a PIM review, this means that it is&#xD;
    debugged and can replicate (via execution) the use case scenarios. In a PSM review, this means that the model has&#xD;
    passed formal unit testing. You should NEVER find a compilation problem in a review; it is far cheaper to have the&#xD;
    product owner find that on their own &lt;em>prior to planning the review&lt;/em> rather than find it in a room full of&#xD;
    people. The intent of the review should be to evaluate an set of already high-quality artifacts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is also very important to &lt;em>stay focused&lt;/em> during the review. The meeting leader needs to rule with a (silk&#xD;
    covered) iron fist. Reviews are very expensive so the object is to perform the intent of the review as efficiently as&#xD;
    possible.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note: subsequent reviews of an already-reviewed work product should focus exclusively on the action list from the&#xD;
    previous review.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Reviews may be applied to any work product. Typically reviews are applied to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Requirements specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Dependability analyses&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Project plans&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Project metric measurements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use case models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Architecture&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Design&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Source Code&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test Procedures&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test Cases&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test Results&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    It is important to understand that while reviews do add value, they are expensive and should not be the primary means&#xD;
    by which quality is assessed or improved. Formal methods and system execution and test are better suited to that&#xD;
    purpose.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-g26laW-LbLnfgI6wCo74DA" name="prep_validation_testing,_jeBt8Ww_EeCcMLi_sG6TzQ" guid="-g26laW-LbLnfgI6wCo74DA" version="7.5.1"/>
</xmi:XMI>
