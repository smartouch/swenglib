<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-pIllJj9NrQ-fUrclkRxseQ" name="new_guideline,_7949cMp0Ed6bFqpedVj-LA" guid="-pIllJj9NrQ-fUrclkRxseQ" changeDate="2009-11-06T12:43:06.151-0800" version="7.5.0">
  <mainDescription>&lt;h4>&#xD;
    1. Refine the Supplementary Specifications&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The Supplementary Specifications are refined and augmented based on evaluation feedback and continued work on the&#xD;
    Use-Case Model (in allocating non-functional requirements, such as performance requirements, to use cases and use-case&#xD;
    black-box steps). If requirements are traced or otherwise formally managed, make sure that each requirement is clearly&#xD;
    identified and labeled and updated.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    2. Generate Supporting Reports&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Requirements are often stored and managed using one or more tools. For example, tools for the following purposes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        graphical use-case modeling.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        traceability and requirements management.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        other textual and graphical documentation.&#xD;
    &lt;/li>&#xD;
&lt;/ul>This step generates documentation from these tools so that the information can be easily reviewed. If specialized&#xD;
tools are not used for capturing the requirements, then this step is not applicable (all software requirements would be&#xD;
written directly in the documentation).&lt;br />&#xD;
&lt;h4>&#xD;
    3. Package the Requirements for Review&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    For less formal projects, this step consists of bundling the relevant reports and hand-generated documentation, with&#xD;
    sufficient supporting material so requirements can be effectively reviewed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    On more formal projects, a Systems Requirements Specification collects and organizes all requirements for the project.&#xD;
    The System Requirements Specification is simply a composition of the Use-Case Model (representing the functional&#xD;
    capabilities) and the Supplementary Specifications (capturing all other requirements). If the project is required to&#xD;
    deliver a System Requirements Specification as a single artifact in true document form, then this can be done by&#xD;
    extracting reports from the Use-Case Model and individual use cases and combining these with the Supplementary&#xD;
    Specifications.&lt;br />&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
