<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-UFLGQekwXL0onBGipGLAGw" name=",_vnauwMseEd6cx7PyM3aSbw" guid="-UFLGQekwXL0onBGipGLAGw" changeDate="2009-11-06T13:57:05.385-0800" version="7.5.0">
  <mainDescription>&lt;h4>&#xD;
    1. Capture non-use-case-specific functional requirements&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Functional requirements describe the behaviors (functions or services) of the system that support user goals, tasks or&#xD;
    activities [Ruth Malan and Dana Bredemeyer 2001. &lt;i>Defining Non-Functional Requirements&lt;/i>. White paper, &lt;a&#xD;
    href=&quot;http://www.bredemeyer.com/&quot;>http://www.bredemeyer.com/&lt;/a>].&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While many of the functional requirements will be documented in Use Cases, there are some functional requirements that&#xD;
    cannot be applied to specific use cases. For example, reporting, auditing, printing, security, licensing&#xD;
    support/enforcement, authentication requirements, etc. Such functional requirements should be documented in the&#xD;
    Supplementary Specification.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If there are a significant number of system-wide functional requirements, it is important to give some thought into the&#xD;
    organization of this section. A typical organization is by feature/feature set, but alternative organization methods&#xD;
    are also possible. For example, organization by user or organization by subsystem, may also be appropriate.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Functional requirements represent the 'F' in &quot;FURPS+.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    2. Capture system qualities&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Non-functional requirements include both qualities&amp;nbsp;and constraints [Ruth Malan and Dana Bredemeyer 2001.&#xD;
    &lt;i>Defining Non-Functional Requirements&lt;/i>. White paper, &lt;a&#xD;
    href=&quot;http://www.bredemeyer.com/&quot;>http://www.bredemeyer.com/&lt;/a>].&amp;nbsp; In this step we discuss qualities.&amp;nbsp;&#xD;
    Constraints are addressed in a separate step.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    [System] qualities are properties or characteristics of the system that its stakeholders care about and hence will&#xD;
    affect their degree of satisfaction with the system [Ruth Malan and Dana Bredemeyer 2001. &lt;i>Defining Non-Functional&#xD;
    Requirements&lt;/i>. White paper, &lt;a href=&quot;http://www.bredemeyer.com/&quot;>http://www.bredemeyer.com/&lt;/a>].&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Qualities represent the &quot;URPS&quot; in &quot;FURPS+&quot;.&amp;nbsp; The concerns of each of these categories of requirements is as&#xD;
    follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>U&lt;/strong>sability:&amp;nbsp;&amp;nbsp;Aesthetics and consistency in the user interface.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>R&lt;/strong>eliability:&amp;nbsp;&amp;nbsp;Availability (the amount of system &quot;up time&quot;), accuracy of system&#xD;
        calculations, and the system's ability to recover from failure.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>P&lt;/strong>erformance: Throughput, response time, recovery time, start-up time, and shutdown time.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>S&lt;/strong>upportability: Testability, adaptability, maintainability, compatibility, configurability,&#xD;
        installability, scalability, and localizability.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Depending on the number of qualities to be documented for the system, you may want to provide sub-sections for each of&#xD;
    these quality types.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following sections provide some examples of the kids of information you might want to capture for each of these&#xD;
    qualities:&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Usability&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    When describing usability requirements, you may want to specify:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Required training time for a normal users and power users to become productive at particular operations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Measurable task times for typical tasks&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Requirements to conform to common usability standards, for example, IBM's CUA standards or Microsoft's GUI&#xD;
        standards&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h5>&#xD;
    Reliability&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    When describing reliability requirements, you may want to specify:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Availability - specify percentage of time available ( xx.xx%), hours of use, maintenance access, degraded mode&#xD;
        operations, and the like.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mean Time Between Failures (MTBF) - this is usually specified in hours but it could also be specified in terms of&#xD;
        days, months or years.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mean Time To Repair (MTTR) - how long is the system allowed to be out of operation after it has failed?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Accuracy - specify precision (resolution) and accuracy (by some known standard) that is required in the systems&#xD;
        output.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maximum bugs or defect rate - usually expressed in terms of bugs/KLOC (thousands of lines of code), or&#xD;
        bugs/function-point.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Bugs or defect rate - categorized in terms of minor, significant, and critical bugs: the requirement(s) must define&#xD;
        what is meant by a &quot;critical&quot; bug; for example, complete loss of data or complete inability to use certain parts of&#xD;
        the functionality of the system.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h5>&#xD;
    Performance&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    When describing performance requirements, you may want to specify:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Response time for a transaction(average, maximum)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Throughput (for example, transactions per second)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Capacity (for example, the number of customers or transactions the system can accommodate)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Degradation modes (what is the acceptable mode of operation when the system has been degraded in some manner)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Resource use: memory, disk, communications, and so forth&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    When documenting performance requirements, be sure to include specific response times. Where applicable, reference&#xD;
    related use cases&amp;nbsp;by name.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Supportability&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    When describing supportability requirements, you may want to specify:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coding standards&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Naming conventions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Class libraries&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintenance access&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maintenance utilities&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    3. Capture constraints&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In this step you document any design constraints on the system being built. In general terms,&amp;nbsp;a constraint is a&#xD;
    restriction on the degree of freedom we have in providing a solution [Dean Leffingwell and Don Widrig 2000. &lt;i>Managing&#xD;
    Software Requirements - a Unified Approach&lt;/i>. Addison Wesley Longman]. Design constraints represent design decisions&#xD;
    that have been mandated and must be adhered to.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The&amp;nbsp;Constraints represent the '+' in &quot;FURPS+&quot; and&amp;nbsp;can be further categorized, as follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Design constraint&lt;/strong>: Specifies or constrains the options for architecting and/or&amp;nbsp;designing a&#xD;
        system. For example, requiring that a&amp;nbsp;relational database be used for persistence.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Implementation constraint&lt;/strong>: Specifies or constrains the coding or construction of a system. For&#xD;
        example, required standards, processes, tools, implementation languages, hardware platforms, operating systems,&#xD;
        third-party components, class libraries, and resource limits (use of memory or disk space).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Interface constraint&lt;/strong>: Specifies an external item with which a system must interact, or constraints&#xD;
        on formats or other factors used within such an interaction.&amp;nbsp; For example, interfacing with an external system&#xD;
        via message queues.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Physical constraint&lt;/strong>: Specifies a physical constraint imposed on the hardware used to house the&#xD;
        system - shape, size, or weight, for example.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Depending on the number of constraints to be documented for the system, you may want to provide sub-sections for each&#xD;
    of the constraint types. Additionally:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        If the requirements include the purchase of third-party components, be sure to document any applicable licensing or&#xD;
        usage restrictions, and any associated compatibility/interoperability or interface standards. A separate section&#xD;
        per purchased component is recommended.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        If the requirements include specific interface requirements, it is recommended that you provide separate sections&#xD;
        for the different types of interfaces (e.g., user, hardware, software). For each interface, be sure to include&#xD;
        adequate specificity, protocols, ports and logical addresses, and so forth, so that the software can be developed&#xD;
        and verified against the interface requirements. Specifically: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                For user interfaces, describe the user interfaces that are to be implemented by the software.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                For hardware interfaces, include logical structure, physical addresses, expected behavior, and so on.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                For software interfaces include a description of the interfaces to other components of the software system.&#xD;
                These may be purchased components, components reused from another application or components being developed&#xD;
                for subsystems outside of the scope of this system, but with which this software application must interact.&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    4. Capture compliance requirements&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    By compliance, we include standards compliance (including regulatory standards, coding standards or user interface&#xD;
    style guides), as well as legal disclaimers, warranties, copyright notices, patent notice, wordmark, trademark, and/or&#xD;
    logo compliance.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Compliance requirements may be realized in terms of other requirements (functional, non-functional, and&#xD;
    constraints).&amp;nbsp; In such cases, the details of those requirements should be documented in the applicable sections of&#xD;
    the Supplementary Specification as described in the earlier steps.&amp;nbsp; However, it is important to summarize the&#xD;
    standards and policies that a system must comply with.&amp;nbsp; The resulting compliance requirements may refer to the&#xD;
    applicable detailed requirements, as necessary.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Depending on the number of compliance requirements to be documented for the system, you may want to provide&#xD;
    sub-sections for the different kinds of compliance affecting the system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following sections provide some examples of the kids of information you might want to capture for different kinds&#xD;
    of compliance:&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Licensing Requirements&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Define any licensing enforcement requirements or other usage restriction requirements that are to be exhibited by the&#xD;
    software.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Legal, Copyright, and Other Notices&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Describe any necessary legal disclaimers, warranties, copyright notices, patent notice, wordmark, trademark, or logo&#xD;
    compliance issues for the software.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Applicable Standards&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Describe (by reference) any applicable standards and the specific sections of any such standards that apply to the&#xD;
    system being described. For example, this could include legal, quality and regulatory standards, industry standards for&#xD;
    usability, interoperability, internationalization, operating system compliance, and so forth.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    5. Capture documentation requirements&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In this step, you describe the requirements, if any, for documentation. Documentation requirements may include&#xD;
    requirements for online help, as well as and end-user documentation (e.g., installation guides, user's guides, training&#xD;
    material, etc.).&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Like compliance requirements, documentation requirements drive other types of requirements.&amp;nbsp; Specifically&#xD;
    functional requirements (the system must provide support functional access to the online help), as well as usability&#xD;
    requirements (on demand access to system usage information supports the overall usability of the system).&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Thus, like compliance requirements, detailed requirements supporting documentation requirements should be documented in&#xD;
    the applicable sections of the Supplementary Specification as described in the earlier steps, but it is also important&#xD;
    to document and summarize the overall documentation requirements for the system. The resulting requirements may refer&#xD;
    to the applicable detailed requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Depending on the number of documentation requirements to be documented for the system, you may want to provide&#xD;
    sub-sections for the different kinds of documentation to be provided for the system.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
