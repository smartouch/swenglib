<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-U7K2KJX3C4gcW7u31QY8Lg" name="developer_test.ddi,__A80YApxEd281qfHUnTumw" guid="-U7K2KJX3C4gcW7u31QY8Lg" changeDate="2008-09-10T12:11:29.896-0700" version="7.1.0">
  <keyConsiderations>&lt;p>&#xD;
    Most of the Developer Tests are created in the same timeframe as the software components that need to be tested.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The entire suite of developer tests should be run often to reduce the number of regression errors introduced during&#xD;
    implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Developer tests are often shared with integration and system testing organizations so regression tests can be run on&#xD;
    the integrated system.&#xD;
&lt;/p></keyConsiderations>
  <impactOfNotHaving>&lt;p>&#xD;
    Neglecting developer testing will seriously degrade the quality of the system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Finding errors during integration testing (or after release) instead of during development makes those errors more&#xD;
    costly and time consuming to fix.&#xD;
&lt;/p></impactOfNotHaving>
  <briefOutline>&lt;a id=&quot;BriefOutline&quot; name=&quot;BriefOutline&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    Each Developer Test should consider the following where appropriate:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Basic computer hardware requirements: processors, memory, hard-disk size, input/output interface devices,&#xD;
        etc.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The underlying software environment: operating system and basic productivity tools such as e-mail or a calendar&#xD;
        systems.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Additional specialized input/output peripheral hardware: bar-code scanners, receipt printers, cash draws, sensor&#xD;
        devices, etc.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The required software for the specialized input/output peripheral hardware: drivers, interface and gateway&#xD;
        software, etc.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The minimal set of software tools necessary to facilitate test, evaluation and diagnostic activities:&amp;nbsp; memory&#xD;
        diagnostics, automated test execution, etc.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The required configuration settings of both hardware and software options: video-display resolution, resource&#xD;
        allocation, environment variables,&amp;nbsp;etc.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The required &quot;pre-existing&quot; consumables: populated data sets, receipt printer dockets, etc.&#xD;
    &lt;/li>&#xD;
&lt;/ul></briefOutline>
  <representationOptions>&lt;a id=&quot;Tailoring&quot; name=&quot;Tailoring&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    &lt;strong>Developer Tests&lt;/strong> may have the &lt;strong>properties&lt;/strong> listed in the table below. The level of&#xD;
    formality for Developer Tests varies, so some of the following information might be missing or embedded in the&#xD;
    implementation. In general, the larger and more critical the component under test is, the more effort needs to be put&#xD;
    into maintaining the developer tests.&#xD;
&lt;/p>&#xD;
&lt;table style=&quot;BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid&quot;  cellspacing=&quot;0&quot; bordercolordark=&quot;#808080&quot; cellpadding=&quot;4&quot; width=&quot;85%&quot; bordercolorlight=&quot;#808080&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody valign=&quot;top&quot;>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;20%&quot;>&#xD;
                &lt;p class=&quot;tableheading&quot;>&#xD;
                    &lt;b>Property Name&lt;/b>&amp;nbsp;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;80%&quot;>&#xD;
                &lt;p class=&quot;tableheading&quot;>&#xD;
                    &lt;b>Brief Description&lt;/b>&amp;nbsp;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;20%&quot;>&#xD;
                Name&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;80%&quot;>&#xD;
                An unique name used to identify this Developer Test.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;20%&quot;>&#xD;
                Description&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;80%&quot;>&#xD;
                A short description of the contents of the Developer Test, typically giving some high-level indication of&#xD;
                complexity and scope.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;20%&quot;>&#xD;
                Purpose&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;80%&quot;>&#xD;
                An explanation of what this Developer Test represents and why it is important.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;20%&quot;>&#xD;
                Dependent Test and Evaluation Items&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;80%&quot;>&#xD;
                Some form of traceability or dependency mapping to specific elements such as individual Requirements that&#xD;
                need to be referenced.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;20%&quot;>&#xD;
                Preconditions&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;80%&quot;>&#xD;
                The starting state that must be achieved prior to the Developer Test being executed.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;20%&quot;>&#xD;
                Instructions&amp;nbsp;&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;80%&quot;>&#xD;
                Either the step-by-step instructions for executing the manual test, or the machine readable instructions&#xD;
                that, when executed, stimulate the software in a similar manner to the actions that would be undertaken by&#xD;
                the appropriate Actor, human or otherwise.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;20%&quot;>&#xD;
                Observation Points&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;80%&quot;>&#xD;
                One or more locations in the Developer Test instructions where some aspect of the system state will be&#xD;
                observed, and usually compared with an expected result.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;20%&quot;>&#xD;
                Control Points&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;80%&quot;>&#xD;
                One or more locations in the Developer Test instructions where some condition or event in the system may&#xD;
                occur and needs to be considered in regard to determining the next instruction to be followed.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;20%&quot;>&#xD;
                Log Points&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;80%&quot;>&#xD;
                One or more locations in the Developer Test instructions where some aspect of the executing test script&#xD;
                state is recorded for the purpose of future reference.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;20%&quot;>&#xD;
                Postconditions&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;80%&quot;>&#xD;
                The resulting state that the system must be left in after the Developer Test has been executed.&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;br />&#xD;
&lt;p>&#xD;
    The overall goal is to implement a simple and efficient developer testing framework. For the &quot;one time only&quot; tests,&#xD;
    most of the documentation overhead should be avoided. Special attention should be given to the tests that will be used&#xD;
    as regression tests for subsystems or the more &quot;volatile&quot; components, in terms of documentation, maintainability,&#xD;
    efficiency, effectiveness and robustness.&#xD;
&lt;/p></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
