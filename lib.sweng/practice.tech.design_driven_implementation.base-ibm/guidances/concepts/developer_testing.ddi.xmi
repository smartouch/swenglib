<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-DGDQKUPcnaLnV8rh8In1sQ" name=",_-jhzoHBuEd2VAN1Zr5E20w" guid="-DGDQKUPcnaLnV8rh8In1sQ" changeDate="2008-09-11T17:55:51.718-0700" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    Developer testing is the act of testing of the source code by developers to ensure quality. It requires testing the&#xD;
    code as it's written, and testing units or components to make sure they work well as a unit after the code has been&#xD;
    completed. This occurs before&amp;nbsp;complex system testing and integration to reveal errors earlier when they're easier&#xD;
    to fix.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Why Developer Testing?&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Developer testing is the means&amp;nbsp;to&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Test a small unit of a project without waiting for the other parts to be completed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test and fix problems simultaneously by multiple engineers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Detect and remove defects as soon as they're introduced, so the cost is much less compared to doing this during other later stages of testing.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Take advantage of formal testing techniques.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test internal conditions that are not easily reached by external inputs in the larger integrated systems (for&#xD;
        example, exception conditions not easily reached in normal operation).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Achieve a high level of structural coverage of the code,.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Avoid lengthy compile-build-debug cycles when debugging difficult problems&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    Testing Principles&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Find defects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test early and often. The cost of change rises exponentially the longer it takes to find and then remove a defect.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build confidence. Many people fear making a change to their code because they are afraid that they will break it,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Objectively measure quality. One test is worth a thousand opinions. You can say that your application works, but&#xD;
        until you show the test results others might not believe.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Test to the risk. The riskier something is, the more it needs to be reviewed and tested.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
