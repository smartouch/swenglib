<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-8azXpecNgO-q8FZXViDFHg" name="new_roadmap,_bvr-cOCpEdy_TKG9JydNsA" guid="-8azXpecNgO-q8FZXViDFHg" changeDate="2008-02-21T10:20:53.937-0800" version="7.2.0">
  <mainDescription>&lt;p> Performance testing is a well-understood discipline that has been practiced &#xD;
  for more than 30 years. First there were time sharing capabilities on mainframe &#xD;
  computers, then minicomputers with multiple asynchronous terminals, and later &#xD;
  networks of personal computers connected to server systems. Testing all of these &#xD;
  systems revolved around the need to understand the capacity of the shared portions &#xD;
  of the system. &lt;/p>&#xD;
&lt;p>&#xD;
    The process of performance testing has not changed significantly since these earlier system types were being tested.&#xD;
    However, the complexities of the system design with more distributed intelligent hardware components and many more&#xD;
    interconnected software subsystems yield more challenges in the analysis and tuning parts of the process. On current&#xD;
    systems, performance testing should be done iteratively and often during the system design and implementation. Tests&#xD;
    should be performed during implementation of critical subsystems, during their integration together into a complete&#xD;
    system, and finally under full capacity work loads before being deployed into production.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The basic steps in the performance testing process are listed here. Each step will be explained in the sections that&#xD;
    follow in terms of the actions taken and results of the step.&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
  &lt;li>Determine the system performance questions that you need to answer. &lt;/li>&#xD;
  &lt;li> Characterize the workload that you want to apply to the system. &lt;/li>&#xD;
  &lt;li> Identify the important measurements to make within the applied workload. &#xD;
  &lt;/li>&#xD;
  &lt;li> Establish success criteria for the measurements to be taken. &lt;/li>&#xD;
  &lt;li> Design the modeled workload, including elements of variation. &lt;/li>&#xD;
  &lt;li> Build the modeled workload elements, and validate each at the various stages &#xD;
    of development (single, looped, parallel, and loaded execution modes). &lt;/li>&#xD;
  &lt;li> Construct workload definitions for each of the experiment load levels to &#xD;
    collect your workload measurements. &lt;/li>&#xD;
  &lt;li> Run the test and monitor the system activities to make sure that the test &#xD;
    is running properly. &lt;/li>&#xD;
  &lt;li> Analyze measurement results and perform system-tuning activities as necessary &#xD;
    to improve the results, and then repeat test runs as necessary. &lt;/li>&#xD;
  &lt;li> Publish the analysis of the measurements to answer the established system &#xD;
    performance questions.&lt;/li>&#xD;
&lt;/ol></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
