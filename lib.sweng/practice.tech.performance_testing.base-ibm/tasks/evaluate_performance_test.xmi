<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-0uPb5sRkC_QhE5mybUbq3A" name="evaluate_performance_test,_dTdxMHODEdyur-UVVhx-aQ" guid="-0uPb5sRkC_QhE5mybUbq3A" changeDate="2008-02-20T16:58:54.125-0800" version="7.2.0">
  <sections xmi:id="_AuRYoHeEEdyqd9oUl_5ulw" name="Analyze Measurement Results" guid="_AuRYoHeEEdyqd9oUl_5ulw">
    <sectionDescription>&lt;p>&#xD;
    The test result includes documentation of the tests and test schedules that represented the workload used in measuring&#xD;
    the system performance results.&amp;nbsp; Also the result includes the system performance measurements especially the&#xD;
    transaction rates and page response times as well as the functional validation of getting proper system operation&#xD;
    during the workload.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You must also capture the system under test configuration and environmental settings as well as any documentation or&#xD;
    programs used to reset the system state at the beginning of the test run.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Finally, you should analyze the system resource measurements for both the load producing systems (the drivers) as well&#xD;
    as the system under test.&amp;nbsp; This should include CPU utilization, memory size information, paging and swapping&#xD;
    rates, disk and network I/O utilizations as well as any application server monitoring data.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This data should be used to confirm that the test interval maintained a steady state for long enough to achieve the&#xD;
    needed response time and transaction rate test measurements.&amp;nbsp; Based on these measurements and the nature of the&#xD;
    performance testing goals set out at the beginning of the test, you should be able to draw conclusions about whether&#xD;
    the system under test can achieve the expected performance and make recommendations about the next steps to be done in&#xD;
    the development or deployment of the system.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_DZMGwHeEEdyqd9oUl_5ulw" name="Publish Test Results" guid="_DZMGwHeEEdyqd9oUl_5ulw">
    <sectionDescription>Create reports to reflect your performance test run.&amp;nbsp; Ensure that the results are reviewed by the development&#xD;
team.&amp;nbsp;</sectionDescription>
  </sections>
  <sections xmi:id="_Pa_EsHeEEdyqd9oUl_5ulw" name="Evaluate and Verify Results" guid="_Pa_EsHeEEdyqd9oUl_5ulw">
    <sectionDescription>&lt;p>&#xD;
    Now that you have completed the work, it is beneficial to verify that the work was of sufficient value, and that you&#xD;
    did not simply consume vast quantities of paper. You should evaluate whether your work is of appropriate quality, and&#xD;
    that it is complete enough to be useful to those team members who will make subsequent use of it as input to their&#xD;
    work. Where possible, use the checklists provided in RUP to verify that quality and completeness are &quot;good enough&quot;.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Have the people performing the downstream tasks that rely on your work as input take part in reviewing your interim&#xD;
    work. Do this while you still have time available to take action to address their concerns. You should also evaluate&#xD;
    your work against the key input work products to make sure you have represented them accurately and sufficiently. It&#xD;
    may be useful to have the author of the input work product review your work on this basis.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Since RUP is an iterative delivery process, in many cases work products evolve over time. As such, it is not usually&#xD;
    necessary-and is often counterproductive-to fully-form a work product that will only be partially used or will not be&#xD;
    used at all in immediately subsequent work. This is because there is a high probability that the situation surrounding&#xD;
    the work product will change-and the assumptions made when the work product was created proven incorrect-before the&#xD;
    work product is used, resulting in wasted effort and costly rework. Also avoid the trap of spending too many cycles on&#xD;
    presentation to the detriment of content value. In project environments where presentation has importance and economic&#xD;
    value as a project deliverable, you might want to consider using an administrative resource to perform presentation&#xD;
    tasks.&#xD;
&lt;/p></sectionDescription>
  </sections>
</org.eclipse.epf.uma:TaskDescription>
