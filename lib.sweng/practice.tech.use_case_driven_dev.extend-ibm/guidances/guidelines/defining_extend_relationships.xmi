<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-n0DD0cwkOqEGk3xqa9D-mg" name="new_guideline,_hjbKkEk-Edyi3_jfs__bIQ" guid="-n0DD0cwkOqEGk3xqa9D-mg" changeDate="2009-03-17T22:08:39.031-0700" version="1.0.0">
  <mainDescription>&lt;h3>&#xD;
    &lt;a id=&quot;Explanation&quot; name=&quot;Explanation&quot;>Explanation&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The extend-relationship connects an extension use case to a base use case. You define where in the base to insert the&#xD;
    extension by referring to extension points in the base use case (see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.tech.common.extend_supp/guidances/concepts/use_case_BB199D1B.html&quot; guid=&quot;_KudM0NcJEdqz_d2XWoVt6Q&quot;>Concept: Use Case&lt;/a>, the discussion on extension points). The extension use case is&#xD;
    often abstract, but does not have to be.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You can use the extensions for several purposes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        To show that a part of a use case is optional, or potentially optional, system behavior. In this way, you separate&#xD;
        optional behavior from mandatory behavior in your model.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To show that a subflow is executed only under certain (sometimes exceptional) conditions, such as triggering an&#xD;
        alarm.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        To show that there might be a set of behavior segments of which one or several&amp;nbsp;can be inserted at an extension&#xD;
        point in a base use case. The behavior segments that are inserted (and the order in which they are inserted) will&#xD;
        depend on the interaction with the actors during the execution of the base use case.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The extension is conditional, which means its execution is dependent on what has happened while executing the base use&#xD;
    case. The base use case does not control the conditions for the execution of the extension - the conditions are&#xD;
    described within the extend-relationship. The extension use case&amp;nbsp;can access and modify attributes of the base use&#xD;
    case. The base use case, however, cannot see the extensions and&amp;nbsp;cannot access their attributes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The base use case is implicitly modified by the extensions. You can also say that the base use case defines a modular&#xD;
    framework into which extensions can be added, but the base does not have any visibility of the specific extensions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The base use case&amp;nbsp;must be complete in and of itself, meaning that it&amp;nbsp;must be understandable and meaningful&#xD;
    without any references to the extensions. However, the base use case is not independent of the extensions,&amp;nbsp;because&#xD;
    it cannot be executed without the possibility of following the extensions.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Example:&#xD;
&lt;/h5>&#xD;
&lt;p class=&quot;example&quot; align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;186&quot; alt=&quot;Diagram described in accompanying text.&quot; src=&quot;./resources/extend1.gif&quot; width=&quot;300&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    The use cases Place Conference Call and Show Caller Identity are both extensions to the base use case Place Call.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    In a phone system, the primary service provided to the users is represented by the use case Place Call. Examples of&#xD;
    optional services are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;p class=&quot;example&quot;>&#xD;
            To be able to add a third party to a call (Place Conference Call).&#xD;
        &lt;/p>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;p class=&quot;example&quot;>&#xD;
            To&amp;nbsp;enable the receiving party to see the identity of the caller (Show Caller Identity).&#xD;
        &lt;/p>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    We can represent the behaviors needed for these optional services as extension use cases to the base use case Place&#xD;
    Call. This is a correct use of the extend-relationship:&amp;nbsp;because Place Call is meaningful in itself, you do not&#xD;
    need to read the descriptions of the extension use cases to understand the primary purpose of the base use case, and&#xD;
    the extensions use cases have optional character.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The extension use case can consist of one or more insertion segments, each of which&amp;nbsp;can have alternative paths&#xD;
    built into it. These insertion segments incrementally modify the behavior of the base use case. Each insertion segment&#xD;
    in an extension use case can be inserted at a separate location in the base use case. This means that the&#xD;
    extend-relationship has a list of references to extension points, equal in number to the number of insertion segments&#xD;
    in the extension use case. Each extension point must be defined in the base use case.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One base use case consist of several extend-relationships, which means a use case instance can follow more than one&#xD;
    extension during its lifetime. One extension use case&amp;nbsp;can extend into several base use cases, but this does not&#xD;
    imply any dependency between the base use cases. There&amp;nbsp;can even be multiple extend-relationships between the same&#xD;
    extension use case and base use case, provided the extension is inserted at different locations in the base. This means&#xD;
    the different extend-relationships need to refer to different extension points in the base use case. An extension use&#xD;
    case&amp;nbsp;might itself be the base in an extend-, include-, or generalization-relationship. For example, this means&#xD;
    extension use cases can extend other extension use cases in a nested manner.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Executing the Extension&quot; name=&quot;Executing the Extension&quot;>Executing the Extension&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    When a use-case instance performing the base use case reaches a location in the base use case where an extension point&#xD;
    has been defined, the condition on the corresponding extend-relationship is evaluated. If the condition is true or if&#xD;
    it is absent, the use-case instance will follow the extension (or the insertion segment within it that corresponds to&#xD;
    the extension point). If the condition of the extend-relationship is false, the extension is not executed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The extension use case may, just like any use case, have a basic flow of events and alternative flows of events (see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.tech.common.extend_supp/guidances/concepts/use_case_BB199D1B.html&quot; guid=&quot;_KudM0NcJEdqz_d2XWoVt6Q&quot;>Concept: Use Case&lt;/a>, the discussion on structure of flow of events). Which exact path&#xD;
    the use-case instance will take through the extension depends on what has happened before in the execution (the state&#xD;
    of the use-case instance) and also what happens in interaction with actors as the extension is executed. Once the&#xD;
    use-case instance has performed the extension, the use-case instance resumes executing the base use case at the point&#xD;
    where it left off.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;224&quot; alt=&quot;Diagram described in accompanying text.&quot; src=&quot;./resources/extend2.gif&quot; width=&quot;312&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    A use-case instance following a base use case and its extension.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An extension use case can have more than one insertion segment, each related to its own extension point in the base use&#xD;
    case. If this is the case, the use-case instance will resume the base use case and continue to the next extension point&#xD;
    specified in the extend-relationship. At that point it will&amp;nbsp;start the next insertion segment of the extension use&#xD;
    case. This is repeated until the last insertion segment has been executed. The condition for the extend-relationship is&#xD;
    checked at the first extension point only - if the condition is true, the use-case instance must perform all insertion&#xD;
    segments.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;224&quot; alt=&quot;Diagram described in accompanying text.&quot; src=&quot;./resources/extend3.gif&quot; width=&quot;317&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot;>&#xD;
    A use-case instance following a base use case and an extension use case, the latter with two insertion segments.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The multiplicity of the extend-relationship will constrain the number of repetitions of the entire extension&#xD;
    that&amp;nbsp;can occur. It is the entire extension that is repeated (and limited by the multiplicity), not just one&#xD;
    insertion segment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The base use case does not have dependencies to the extended use case(s), but the extended use case requires at least&#xD;
    one base use case. Without it, the extended use case is not a complete end-to-end scenario and would be out of context.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Documenting the Extend-Relationship&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Describe the condition of the extension in terms of attributes of the base use case. You can also choose to omit the&#xD;
    condition, in which case the extension will always be executed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Each extend-relationship has a list of references to extension points (one or more) in the base use case. The extension&#xD;
    points are referenced by name. If the extension use case has multiple insertion segments, you need to specify which&#xD;
    segment corresponds to which extension point. You also need to specify which steps or subflows of the extension use&#xD;
    case constitute each insertion segment.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Example:&#xD;
&lt;/h5>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    In a phone system, the use case Place Call can be extended by the abstract use case Show Caller Identity. This is an&#xD;
    optional service, often referred to as &quot;Caller ID&quot;, that&amp;nbsp;can or cannot have been requested by the receiving party.&#xD;
    A description of the extend-relationship from Show Caller Identity to Place Call could look as follows:&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    &lt;b>Condition:&lt;/b> Receiving party must have ordered the service &quot;Caller ID&quot;.&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    &lt;b>Extension Point(s):&lt;/b> Show Identity - insert the whole Show Caller Identity use case.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You&amp;nbsp;can give the extend-relationship a multiplicity, if it is omitted the multiplicity is assumed to be one.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Example of Use&quot; name=&quot;Example of Use&quot;>Example of Use&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Consider the following simple phone system:&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img height=&quot;182&quot; alt=&quot;Diagram described in accompanying text.&quot; src=&quot;./resources/extend4.gif&quot; width=&quot;271&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot; align=&quot;center&quot;>&#xD;
    The abstract use case Place Conference Call is an extension to the use case Place Call.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In this model, a simple representation of our familiar phone system, basic call service is described in the use case&#xD;
    Place Call. A step-by-step outline to the basic flow of events would look like this:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        The Caller lifts receiver.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The system presents dial-tone.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Caller dials a digit.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The System turns off the dial-tone.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Caller enters the remainder of the number.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The system analyzes digits, determines network address of the Receiving Party.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The system analyzes the digits, determining the location in the network where the Receiving Party exists.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The system then determines whether a virtual circuit can be established to the Receiving Party.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        If a virtual circuit can be established, the System rings the Receiving Party's phone and presents the ringing tone&#xD;
        on the Caller's phone.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        When the Receiving Party answers the phone, the system disables the ringing tone on the Caller's phone, stops&#xD;
        ringing the Receiving Party's phone and completes the virtual circuit.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The system starts a billing record, recording the start time for the call, the end points of the call, and the&#xD;
        Caller's customer information.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The call continues for some length of time. When either the Caller or the Receiving Party disconnects from the&#xD;
        call, the system records the end time for the call, and frees all resources required to support the virtual&#xD;
        circuit. The use case then ends.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    To add functionality to this system that would&amp;nbsp;enable the caller or receiving party to connect a third party to&#xD;
    the call (often called &quot;conference call&quot;), we need to add behavior to the flow of events. One alternative, and the&#xD;
    first one we&amp;nbsp;must consider, is to put the differences directly into Place Call. We could model these differences&#xD;
    using alternative flows of events, as described in &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../core.tech.common.extend_supp/guidances/concepts/use_case_BB199D1B.html&quot; guid=&quot;_KudM0NcJEdqz_d2XWoVt6Q&quot;>Concept: Use Case&lt;/a>. This solution works for most simple additions, where the added&#xD;
    functionality will not confuse or obscure the original meaning of the use case. The other alternative is to separate&#xD;
    the differences into an abstract extension use case called Place Conference Call which extends the base use case.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Place Call use case would have the following addition:&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;p>&#xD;
        &lt;b>&lt;u>Extension points:&lt;br />&#xD;
        &lt;/u>Conference Call&lt;/b> occurs after step 11.&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    The extension use case, Place Conference Call, could then be described as:&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;p>&#xD;
        &lt;b>&lt;u>Place Conference Call Use Case&lt;br />&#xD;
        &lt;/u>&lt;/b>This use case extends Place Call.&amp;nbsp; It is inserted at extension point Conference Call.&lt;br />&#xD;
        &lt;u>Basic Flow:&lt;br />&#xD;
        &lt;/u>1. Caller depresses the hang-up, link, or flash button.&lt;br />&#xD;
        2. The system generates 3 short beeps to acknowledge.&lt;br />&#xD;
        3..12.&amp;lt;these steps are identical to steps 3..12 from the base use case&amp;gt;&lt;br />&#xD;
        13. Caller is reconnected to the receiving party from the Place Call use case.&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    The commonality of steps 3..12 with the base use case is undesirable.&amp;nbsp; One way to solve this is to factor out the&#xD;
    common part as an inclusion use case (see&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../practice.tech.use_case_driven_dev.extend-ibm/guidances/guidelines/defining_include_relationships_AC1665F7.html&quot; guid=&quot;_9HuNEEk-Edyi3_jfs__bIQ&quot;>Guideline: Defining Include Relationships&lt;/a>).&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
