<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-FjP3lTj_p6B5QhM3xMYzkw" name="new_concept,_hRWEcPDzEdq7ls4zEErftg" guid="-FjP3lTj_p6B5QhM3xMYzkw" changeDate="2007-05-25T15:45:32.828-0700" version="1.0.0">
  <mainDescription>&lt;p>&#xD;
    There are two major styles of searching, &lt;em>opportunistic&lt;/em> (un-structured) and &lt;em>systematic&lt;/em> (structured).&#xD;
    Assets may be displayed in folders in the repositories. This is where someone can browse the repositories or conduct&#xD;
    searches based on keywords and phrases. This is reuse using opportunistic-style techniques.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    However, for the reuse to scale to larger groups of people, across boundaries and teams and time zones and skill sets,&#xD;
    opportunistic searching can erode the value proposition of the assets and their repositories. It just takes too long.&#xD;
    In the end, it is just not worth it, and we often ignore what's out there and go do our own thing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another style of searching is systematic; this is a more prescriptive form of searching. It dictates associations&#xD;
    amongst assets and identifies the assets to be used. Using the metaphor of &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../extend.rup_abd/guidances/concepts/composingsolutions_recipes_8BD29681.html&quot;&#xD;
    guid=&quot;_ciVFUPCrEdquxKT1X5kJ4g&quot;>Composing Solutions: Recipes&lt;/a>, there are lists of ingredients (assets) and the&#xD;
    guidance to &quot;mix them. In addition, recipes have the benefit of being customizable.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Therefore,&amp;nbsp;rather than searching for all the ingredients (assets), search for the solution (the recipe) that&#xD;
    points you to all the ingredients (assets) that&amp;nbsp;you need. A real value proposition is to then create a set of&#xD;
    recipes that mix multiple assets together to form a larger-grained, yet customizable solution. Prescriptive reuse of&#xD;
    development assets such as models, test cases, and other assets, holds some promise for asset-based development&#xD;
    efforts, and most notably, for the business.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another technique for structured searching is to use a taxonomy, or classification schema. These provide structures&#xD;
    that are used to classify assets. The values from these structures are stored in the asset's &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../extend.rup_abd/guidances/concepts/reusable_asset_specification_AD4A8238.html&quot;&#xD;
    guid=&quot;1.1032898096431317E-305&quot;>Reusable Asset Specification&lt;/a>. Expecting someone to select or identify a keyword that&#xD;
    is exactly what the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../extend.rup_abd/roles/asset_producer_3ABD4EF0.html&quot;&#xD;
    guid=&quot;_HFo9QOHkEdq3CP4DTSI-pw&quot;>Asset Producer&lt;/a> used when packaging the asset makes the asset reuse even more&#xD;
    difficult. When the reuse scope and community is broad and crosses organizational boundaries, time zones, skill sets,&#xD;
    and other elements, and as the number of assets in a repository grows, it is very helpful to have a searching mechanism&#xD;
    that lets the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../extend.rup_abd/roles/asset_consumer_115B7493.html&quot;&#xD;
    guid=&quot;_Ev4m0OHkEdq3CP4DTSI-pw&quot;>Asset Consumer&lt;/a> navigate the classification schema or the taxonomy from which to&#xD;
    select values.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another key technique is to use ontologies to model the grammar of a domain and create relationships amongst terms.&#xD;
    Then the asset consumer searches using terms from the domain, but is not required to know which terms were used to&#xD;
    package the asset because the model of the grammar provides the association of terms. A formal language for describing&#xD;
    ontologies is Web Ontology Language (OWL).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A downside of these structured techniques is that they often require the user to understand something about the&#xD;
    taxonomy for them to be effective in their searching. Another approach is to use tagging. Here the Asset Consumer tags&#xD;
    assets with terms, their own terms. This builds up a list of terms for them to use that are meaningful to the Asset&#xD;
    Consumer, creating their own structure.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
