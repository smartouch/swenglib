<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-JX-qdAT_FOM_1VcVaVbLnA" name=",_dI8ooKaCEduHC6cE2S3HNg" guid="-JX-qdAT_FOM_1VcVaVbLnA" changeDate="2007-05-28T13:50:01.078-0700" version="1.0.0">
  <mainDescription>&lt;p>&#xD;
    There is several major administration roles involved with configuring an asset repository. The steps for configuring&#xD;
    the repository cross these roles. These roles may be played&amp;nbsp;by a single person, but that is not very likely. For&#xD;
    more information see: &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../practice.mgmt.asset_based_dev.base-ibm/guidances/supportingmaterials/role_overview_FC18EBE4.html&quot;&#xD;
    guid=&quot;_lYmhwPHEEdqvbZNHa620Yw&quot;>Role Roadmap&lt;/a>. The major roles are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Community Administrator: this role is responsible for specifying the asset types, review processes, roles and&#xD;
        access control, and review processes for a specific Community. A Community is an arbitrary collection of users and&#xD;
        the assets that are relevant to them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Repository Administrator: this role is responsible for specifying server paths, application server paths, database&#xD;
        configurations, web service locations, background process settings, and overall performance.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Integration Administrator: this role is responsible for integrating the Repository with development lifecycle tools&#xD;
        such as SCM tools, change management tools, and service registries.&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
  <sections xmi:id="_D-8MYKaEEduHC6cE2S3HNg" name="Create Category Schema" guid="_D-8MYKaEEduHC6cE2S3HNg">
    <sectionDescription>&lt;p>&#xD;
    There may be many category schemas typically in a Repository. A category schema is developed to represent a certain&#xD;
    perspective. For example, we can take an asset such as a stock quote service. We can determine the asset type is&#xD;
    Service, and we may classify the stock quote service as a &quot;non-commercial&quot; service, and as a &quot;domestic&quot; service,&#xD;
    providing quotes for only domestic traded stocks. The values for classifying the service in this example may come from&#xD;
    the same category schema, or it may come from multiple category schemas.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Creating a category schema often requires visualization and socialization. You need to see the schema and achieve some&#xD;
    buy in from stakeholders. The stakeholders involved typically include managers, administrators, as well as Asset&#xD;
    Consumers and Asset Producers. The Asset Consumers are the key stakeholder as they will use the values from the schemas&#xD;
    to search assets.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    However, the Asset Producers should also be involved if possible with buy in as they need to understand the meaning of&#xD;
    the category schema, and its various branches, as they will use these values to classify the asset.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To visualize the category schema you may use a model, such as a UML model (shown below), or you may use a nested tree&#xD;
    view, as shown further below.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Sample Insurance Category Schema Model&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>&lt;img height=&quot;263&quot; alt=&quot;A UML model of a category schema.&quot; src=&quot;./resources/image6.gif&quot; width=&quot;545&quot; />&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Sample Insurance Category Schema (Text Format)&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Financial Reporting&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Stockholders equity&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Financial position&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Income statement&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Health Insurance&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Public&#xD;
            &lt;/li>&#xD;
            &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Claims processing&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Tax&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Social Security&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Private&#xD;
            &lt;/li>&#xD;
            &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Mandatory&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Employment group&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Community-rated&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Risk-rated&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Once the category schemas have been agreed upon, it is loaded by the repository or Community Administrator into the&#xD;
    Repository. It is beneficial if the administrator can control when the category schema is made visible to the&#xD;
    Repository users.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Category schema versions present another level of issues to address. If a category schema is loaded and visible and the&#xD;
    next version of the category schema is loaded, you need to consider how to apply changes to the schema into the assets&#xD;
    in the Repository. Key considerations include: removing a value from the schema, or changing the name of the schema.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_yQ19gKaEEduHC6cE2S3HNg" name="Specify Asset Types" guid="_yQ19gKaEEduHC6cE2S3HNg">
    <sectionDescription>&lt;p>&#xD;
    An enterprise typically has assets which are first-class citizens in the software development process, such as designs,&#xD;
    code, and tests. There is generally a description of the artifacts and assets an enterprise uses to develop software.&#xD;
    An asset is of a particular type. For example, an asset called &quot;Credit Report Service&quot; could be of an asset type called&#xD;
    &quot;Service&quot;. There can be many service assets in the repository, each structured according to the asset type &quot;Service&quot;.&#xD;
    The Administrator can use a picture describing the type of assets and the nature of their relationships, such as the&#xD;
    one below. The model states that the asset type Business Process has an association with the asset type Service&#xD;
    Interface, and so forth.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;176&quot; alt=&quot;Type of assets and the nature of their relationships in an organization.&quot;&#xD;
    src=&quot;./resources/image7.gif&quot; width=&quot;418&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Repository is configured to support and enforce asset types and their relationships as well as their content and&#xD;
    possible category schemas. For each asset type specify the following:&lt;br />&#xD;
    &lt;br />&#xD;
&lt;/p>&#xD;
&lt;table cellspacing=&quot;2&quot; cellpadding=&quot;2&quot; width=&quot;300&quot; summary=&quot;Repository information&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Name&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Asset type name&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Description&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Description of the asset type&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Artifacts&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                For each artifact specify the following: Artifact Name, Artifact Type, Cardinality&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Relationships&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Relationships to other asset types; specify the nature of the relationship and the cardinality of the&#xD;
                relationship&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Category Schema&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Specify which, if nay, category schemas should be used with assets of this type&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Custom Meta Data&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Identify additional meta data elements that are needed for assets of this type&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;p>&#xD;
    For example, to specify the Service Interface asset type it may look like the following:&#xD;
&lt;/p>&#xD;
&lt;table cellspacing=&quot;2&quot; cellpadding=&quot;2&quot; width=&quot;300&quot; summary=&quot;Example of a Service Interface&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Name&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Service Interface&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Description&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                The interface to a service&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Artifacts&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    Artifact Name: Interface&amp;nbsp;&amp;nbsp; Artifact Type: WSDL&amp;nbsp;&amp;nbsp; Cardinality: 1&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Artifact Name: Message Definition&amp;nbsp;&amp;nbsp; Artifact Type: XSD&amp;nbsp;&amp;nbsp; Cardinality: 0...*&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Artifact Name: Interface Model&amp;nbsp;&amp;nbsp; Artifact Type: UML Model&amp;nbsp;&amp;nbsp; Cardinality: 1&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    Artifact Name: Service Description&amp;nbsp;&amp;nbsp; Artifact Type: DOC&amp;nbsp;&amp;nbsp; Cardinality: 1&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Relationships&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Optional: Business Process&amp;nbsp;&amp;nbsp; Required: Service Implementation Required: Service Test Suite&#xD;
                Optional: Service Design&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Category Schema&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Schema: Insurance&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Custom Meta Data&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Required: Support Contact&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;br /></sectionDescription>
  </sections>
  <sections xmi:id="_KVSv0KaXEduHC6cE2S3HNg" name="Specify Communities and Access Control" guid="_KVSv0KaXEduHC6cE2S3HNg">
    <sectionDescription>&lt;p>&#xD;
    Organizing the Repository into partitions of assets that are for specific users and interests enhances the scalability&#xD;
    and approachability of the repository. Making all assets visible to everyone quickly decreases the value proposition of&#xD;
    the repository as it becomes too large for people to navigate.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A Community provides an arbitrary collection of users and assets. An asset is managed by one Community.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A critical part of governance for asset management is to control access to the proper set of assets. There are several&#xD;
    significant roles for asset-based development. These roles have primary interaction with the Repository through key&#xD;
    scenarios. The roles which primarily interact with the Repository are shown in the image below.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;361&quot; alt=&quot;The roles which primarily interact with the Repository.&quot; src=&quot;./resources/image8.gif&quot;&#xD;
    width=&quot;550&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    These Repository roles&amp;nbsp;have core permissions associated with them. In general an Asset Owner can create, update,&#xD;
    and delete assets they own. Whereas an Asset Review can search, browse, and submit assets, but generally won't be able&#xD;
    to delete an asset.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Repository roles should be mapped to the roles of the software development process. The kinds of assets and the&#xD;
    type of work performed with the assets varies as you combine these Repository roles with roles from the software&#xD;
    development lifecycle.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;370&quot;&#xD;
    alt=&quot;The Architect performs the roles of Asset Producer, Asset Owner, Asset Consumer, Asset Review, and Review Board member.&quot;&#xD;
     src=&quot;./resources/image9.gif&quot; width=&quot;503&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the image above, the Architect will perform the activities of the Repository roles of Asset Producer, Asset Owner,&#xD;
    Asset Consumer, Asset Review, and Review Board member and will have the permissions specified by the Repository Roles.&#xD;
    The mixing of these roles also identifies the kinds of tools and user interfaces the Architect will use to complete the&#xD;
    work.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In this example when the Architect is authenticated with the Repository (s)he will be able to conduct operations on the&#xD;
    Repository that are a union of the Repository role permissions, within the Communities to which the Architect has been&#xD;
    granted.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;342&quot;&#xD;
    alt=&quot;Union of the Repository role permissions, within the Community Space(s) to which the Architect has been granted. &quot;&#xD;
    src=&quot;./resources/image10.gif&quot; width=&quot;451&quot; />&#xD;
&lt;/p>&lt;br /></sectionDescription>
  </sections>
  <sections xmi:id="_w9Y28KaXEduHC6cE2S3HNg" name="Specify Review Processes" guid="_w9Y28KaXEduHC6cE2S3HNg">
    <sectionDescription>&lt;p>&#xD;
    A critical part of a governed asset management system is to organize and execute reviews of assets before they are&#xD;
    generally available. In principle the content to be admitted into the visibility of Asset Consumers should be material&#xD;
    which has been evaluated and approved. There are degrees of formality in this of course and good judgment should always&#xD;
    prevail.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The administrator specifies the review processes for a given Community. This means that for each&amp;nbsp;Community there&#xD;
    may be one or more review processes. A review process specifies several key items including:&#xD;
&lt;/p>&#xD;
&lt;table cellspacing=&quot;2&quot; cellpadding=&quot;2&quot; width=&quot;300&quot; summary=&quot;Review process specification&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Name&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Review process name&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Description&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Description of the review process&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Conditions&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                The asset type(s) to be included in the process. The categorizations the assets should have.&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Review Board&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Indicate if a review board should be used, and if so, who the members of the review board are&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Reviewers&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Who should review the asset, either by name or by role&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;p>&#xD;
    The Administrator may use this &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.mgmt.asset_based_dev.base-ibm/guidances/examples/community_space_map_142BFC15.html&quot;&#xD;
    guid=&quot;_aXbroO1BEdu4L_vmpSve3w&quot;>Community Map&lt;/a>&amp;nbsp;as a starting point.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There may be several levels of governing bodies to oversee the process of approving assets for reuse. At the simplest&#xD;
    form the assets may be automatically approved as soon as they are submitted to the repository. For certain asset types&#xD;
    this may be reasonable. The next level of review may include reviewers that are identified. Based upon their submitted&#xD;
    reviews and the votes they cast the asset may be approved or it may rejected.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There is another level of control, which is to use a Review Board. In this case the reviewers submit their reviews and&#xD;
    cast their votes. Then the Review Board evaluates the submitted reviews and casts the official vote to accept or reject&#xD;
    the asset.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A general review process without using a Review Board may look something like the image below.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;126&quot; alt=&quot;A general review process without using a Review Board may look something like this image. &quot;&#xD;
    src=&quot;./resources/image13.gif&quot; width=&quot;383&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    So if you specify a review process in the Repository, such as the one shown below, then when an asset is submitted it&#xD;
    may look like the image further below.&lt;br />&#xD;
    &lt;br />&#xD;
&lt;/p>&#xD;
&lt;table cellspacing=&quot;2&quot; cellpadding=&quot;2&quot; width=&quot;300&quot; summary=&quot;Example of a community space&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Community&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Claims Processing Community&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Name&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Service asset review&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Description&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Review process for service assets&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Conditions&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Asset type = Service&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Review Board&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                Not enabled&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>&#xD;
                Reviewers&#xD;
            &lt;/th>&#xD;
            &lt;td>&#xD;
                John Doe, Jane Doe&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;br />&#xD;
&lt;p>&#xD;
    The sample flow may be as shown below.&#xD;
&lt;/p>&lt;img height=&quot;187&quot; alt=&quot;A sample review flow which includes the users and their responsibilities at each step. &quot;&#xD;
src=&quot;./resources/image12.gif&quot; width=&quot;379&quot; />&lt;br /></sectionDescription>
  </sections>
  <sections xmi:id="_FDXGsKaYEduHC6cE2S3HNg" name="Configure Repository Users" guid="_FDXGsKaYEduHC6cE2S3HNg">
    <sectionDescription>The users are mapped to the roles in the Community. The users may come from existing directory services such as LDAP.</sectionDescription>
  </sections>
  <sections xmi:id="_I7UPsKaYEduHC6cE2S3HNg" name="Configure Repository Integrations" guid="_I7UPsKaYEduHC6cE2S3HNg">
    <sectionDescription>A Repository may integrate with various tools such as SCM tools, change management tools, service registries, and so forth.&#xD;
The Integration Administrator integrates these tools with the Repository to provide a seamless interaction for the software&#xD;
development workflows.</sectionDescription>
  </sections>
  <sections xmi:id="_MoivYKaYEduHC6cE2S3HNg" name="Configure System Timers and Notifications" guid="_MoivYKaYEduHC6cE2S3HNg">
    <sectionDescription>The Repository generally has system notifications and timers where it performs its work in the background. The Repository&#xD;
may create search indexes on a regular basis or it may provide notifications to subscribers of events have occurred on the&#xD;
assets. The Repository needs to be configured to provide a balance of optimal performance and timely updates.</sectionDescription>
  </sections>
  <purpose>Provide a governed asset management environment to preserve and improve the organization's software related investments.</purpose>
</org.eclipse.epf.uma:TaskDescription>
