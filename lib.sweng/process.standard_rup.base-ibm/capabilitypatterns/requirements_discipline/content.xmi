<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1">
  <org.eclipse.epf.uma:ActivityDescription xmi:id="-39K4GdrKNLgo-HOueCcKSA" name="analyze_the_problem,{554ECC71-6D6C-4ABD-B7CE-357973C63B9F}" guid="-39K4GdrKNLgo-HOueCcKSA">
    <mainDescription>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The first step in any problem analysis is to make sure that all parties involved agree on what the problem is that&#xD;
    needs to be solved-or opportunity that will be realized-by the system.&amp;nbsp; In order to help avoid misunderstandings,&#xD;
    it is important to agree on common terminology which will be used throughout the project. Starting early in the&#xD;
    lifecycle, you should define your project terms in a &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.gen.common.base/workproducts/glossary_5D300778.html&quot;&#xD;
    guid=&quot;_Wn7HcNcEEdqz_d2XWoVt6Q&quot;>Glossary&lt;/a>&amp;nbsp;which will be maintained throughout the life of the project (see &lt;a&#xD;
    class=&quot;elementLink&quot; href=&quot;./../../practice.tech.shared_vision.base/tasks/develop_technical_vision_9D36CF2F.html&quot;&#xD;
    guid=&quot;_0fOAoMlgEdmt3adZL5Dmdw&quot;>Develop Technical Vision&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In order to fully understand the problem(s) that need to be addressed, it is very important to know who the&#xD;
    stakeholders are in the conceptual vision for the project. These key stakeholders should be involved in gathering the&#xD;
    set of features to be considered, which might be gathered in a requirements workshop. The features can then be assigned&#xD;
    attributes such as rationale, relative value or priority, source of request and so on, so that dependencies and work&#xD;
    plans can begin to be managed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The primary artifact in which you capture the information gained from your problem analysis is the &lt;a&#xD;
    class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/workproducts/vision_2E71B03C.html&quot;&#xD;
    guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>, which identifies the high-level user or customer view of the system to be&#xD;
    built (see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.shared_vision.base/tasks/develop_technical_vision_9D36CF2F.html&quot;&#xD;
    guid=&quot;_0fOAoMlgEdmt3adZL5Dmdw&quot;>Develop Technical Vision&lt;/a>). In the vision, initial high-level requirements identify&#xD;
    the key features&amp;nbsp;it is desired that the appropriate solution will provide. These are typically expressed as a set&#xD;
    of high-level features the system might possess in order to solve the most critical problems.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To determine the initial scope for your project, the boundaries of the system must be agreed upon.&amp;nbsp; The &lt;a&#xD;
    class=&quot;elementLink&quot; href=&quot;./../../core.default.role_def.base/roles/analyst_39D7C49B.html&quot;&#xD;
    guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Analyst&lt;/a>&amp;nbsp;identifies users and systems which will interact with the system being&#xD;
    developed.&amp;nbsp; The users of the system can be represented by &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp-ibm/workproducts/actor_161EEC1A.html&quot;&#xD;
    guid=&quot;_rMr-YNDuEdunspUKKm1F4Q&quot;>Actor&lt;/a>s in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/workproducts/use_case_model_85965D1B.html&quot;&#xD;
    guid=&quot;_W2SgEDR5EdutE_HNDTJk5Q&quot;>Use-Case Model&lt;/a>&amp;nbsp;(see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.use_case_driven_dev.base/guidances/guidelines/identify_and_outline_actors_and_ucs_BB5516A9.html&quot;&#xD;
     guid=&quot;_eyL0wCu-EdqSxKAVa9kmvA&quot;>Identify and Outline Actors and Use Cases&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.rqmts_mgmt.base-ibm/workproducts/requirements_management_process_description_AEF73456.html&quot;&#xD;
    guid=&quot;_D-xz4HRrEd2-O6kr4zpk8g&quot;>Requirements Management Process Description&lt;/a>&amp;nbsp;is used to provide guidance on the&#xD;
    requirements artifacts that you should develop, the&amp;nbsp;types of requirements&amp;nbsp;that should be managed for the&#xD;
    project, the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.rqmts_mgmt.base-ibm/workproducts/requirements_attributes_4340F783.html&quot;&#xD;
    guid=&quot;_rgaGUPxiEdyNoss1L6vBPA&quot;>Requirements Attributes&lt;/a>&amp;nbsp;that should be collected and the approach to&#xD;
    requirements &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/traceability_2C55758C.html&quot;&#xD;
    guid=&quot;_eYtQQO0KEdqHTdbLTmC5IQ&quot;>Traceability&lt;/a>&amp;nbsp;that will be used in managing the product requirements.&amp;nbsp; It&#xD;
    is important to develop this plan up front (see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.rqmts_mgmt.base-ibm/tasks/plan_requirements_management_strategy_37347B2F.html&quot;&#xD;
    guid=&quot;_4fMyMHRqEd2-O6kr4zpk8g&quot;>Plan Requirements Management Strategy&lt;/a>).&#xD;
&lt;/p></mainDescription>
    <usageGuidance>&lt;p>&#xD;
    This activity is performed primarily in early iterations of the project where the problem being addressed needs to be&#xD;
    understood.&amp;nbsp;It should be revisited several times during Inception and early Elaboration.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Then, throughout the lifecycle of the project, it should be revisited as necessary while &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../process.standard_rup.base-ibm/capabilitypatterns/manage_changing_requirements_A45D15A6.html&quot;&#xD;
    guid=&quot;_KjsVGSZIEd-Hb5ChSoDHIA&quot;>managing the inevitable changes&lt;/a> that will occur in your project, in order to ensure&#xD;
    that you continue to address the correct problem(s).&#xD;
&lt;/p></usageGuidance>
    <purpose>The purpose of this activity is to gain agreement on the problem being solved. Analysis of the problem involves identifying&#xD;
the stakeholders, defining the boundary of, and identifying the constraints imposed on the system.</purpose>
    <howtoStaff>&lt;a id=&quot;HowToStaff&quot; name=&quot;HowToStaff&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The project members involved in analyzing the problem should be efficient facilitators and have experience in&#xD;
    techniques for finding the problem behind the problem. Of course, familiarity with the targeted technology is&#xD;
    desirable, but it is not essential. Active involvement from various &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.default.role_def.base/roles/stakeholder_9FFD4106.html&quot;&#xD;
    guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholder&lt;/a> in the project is required.&#xD;
&lt;/p></howtoStaff>
  </org.eclipse.epf.uma:ActivityDescription>
  <org.eclipse.epf.uma:ActivityDescription xmi:id="-5I6DvztA4oyy9dpei3e59g" name="understand_stakeholder_needs,{F9E2B414-29F4-48F9-B263-35570D64314B}" guid="-5I6DvztA4oyy9dpei3e59g">
    <mainDescription>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    This activity addresses collecting and eliciting information from the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.default.role_def.base/roles/stakeholder_9FFD4106.html&quot;&#xD;
    guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholder&lt;/a> in the project in order to understand what their needs really are. The&#xD;
    collected &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp-ibm/workproducts/stakeholder_request_D3F7C1BF.html&quot;&#xD;
    guid=&quot;_Fe4SgAsIEdyZjrhh8Tsjpg&quot;>Stakeholder Request&lt;/a>s&amp;nbsp;can be regarded as a &quot;wish list&quot; that will be used as&#xD;
    primary input to defining the high-level features of your system, as described in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/workproducts/vision_2E71B03C.html&quot;&#xD;
    guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>&amp;nbsp;(see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.shared_vision.base/tasks/develop_technical_vision_9D36CF2F.html&quot;&#xD;
    guid=&quot;_0fOAoMlgEdmt3adZL5Dmdw&quot;>Develop Technical Vision&lt;/a>), which drive the specification of the &lt;a&#xD;
    class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/requirements_8006414F.html&quot;&#xD;
    guid=&quot;_0Wh-sMlgEdmt3adZL5Dmdw&quot;>Requirements&lt;/a>, as described in the software requirements specification&amp;nbsp;(which&#xD;
    may reference the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/workproducts/use_case_model_85965D1B.html&quot;&#xD;
    guid=&quot;_W2SgEDR5EdutE_HNDTJk5Q&quot;>Use-Case Model&lt;/a>,&amp;nbsp;&lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/workproducts/use_case_22BE66E2.html&quot; guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use&#xD;
    Case&lt;/a>s and &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/workproducts/system_wide_requirements_7D9DD47C.html&quot;&#xD;
    guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>System-Wide Requirements&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The main objective is to elicit stakeholder requests using such input as interviews, &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.mgmt.formal_change_mgmt.base-ibm/guidances/termdefinitions/enhancement_request_def_A3B41673.html&quot;&#xD;
     guid=&quot;_bKncAGrhEd23U-t8W6Ujmw&quot;>Enhancement Request&lt;/a>, and requirements workshops. The primary outputs are&#xD;
    collection(s) of prioritized features and their critical attributes, which will be used in defining the system and&#xD;
    managing the scope of the system (see&amp;nbsp;&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../process.standard_rup.base-ibm/capabilitypatterns/define_the_system_D918B0E5.html&quot;&#xD;
    guid=&quot;_KjsU-yZIEd-Hb5ChSoDHIA&quot;>defining the system&lt;/a>, &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../process.standard_rup.base-ibm/capabilitypatterns/manage_the_scope_of_the_system_3915DFBE.html&quot;&#xD;
    guid=&quot;_KjsU4yZIEd-Hb5ChSoDHIA&quot;>managing system scope&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This information results in a refinement of the vision, as well as a better understanding of the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.rqmts_mgmt.base-ibm/workproducts/requirements_attributes_4340F783.html&quot;&#xD;
    guid=&quot;_rgaGUPxiEdyNoss1L6vBPA&quot;>Requirements Attributes&lt;/a>. Also, during the enactment of this activity you may start&#xD;
    discussing the functional requirements of the system in terms of its &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/workproducts/use_case_22BE66E2.html&quot; guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use&#xD;
    Case&lt;/a>s and &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp-ibm/workproducts/actor_161EEC1A.html&quot;&#xD;
    guid=&quot;_rMr-YNDuEdunspUKKm1F4Q&quot;>Actor&lt;/a>s&amp;nbsp;(see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.use_case_driven_dev.base/guidances/guidelines/identify_and_outline_actors_and_ucs_BB5516A9.html&quot;&#xD;
     guid=&quot;_eyL0wCu-EdqSxKAVa9kmvA&quot;>Identify and Outline Actors and Use Cases&lt;/a>).&amp;nbsp; Those requirements which do not&#xD;
    fit appropriately within the use cases should be documented in &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/workproducts/system_wide_requirements_7D9DD47C.html&quot;&#xD;
    guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>System-Wide Requirements&lt;/a>&amp;nbsp;(see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.use_case_driven_dev.base/tasks/detail_system_wide_requirements_B5BBACC3.html&quot;&#xD;
    guid=&quot;_4z8Z0EbEEdyx8quJU3Grxg&quot;>Detail System-Wide Requirements&lt;/a>).&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As you define new requirements, it is important to document any dependencies (e.g., &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/traceability_2C55758C.html&quot;&#xD;
    guid=&quot;_eYtQQO0KEdqHTdbLTmC5IQ&quot;>Traceability&lt;/a>) between these requirements (see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.rqmts_mgmt.base-ibm/workproducts/requirements_traceability_578E4FFF.html&quot;&#xD;
    guid=&quot;_padWMA_ZEd2OrMVn8vM9Sg&quot;>Requirements Traceability&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another important output is an updated &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.gen.common.base/workproducts/glossary_5D300778.html&quot; guid=&quot;_Wn7HcNcEEdqz_d2XWoVt6Q&quot;>Glossary&lt;/a> of&#xD;
    terms to facilitate communication through the use of a common vocabulary among team members.&#xD;
&lt;/p></mainDescription>
    <keyConsiderations>&lt;a id=&quot;Timing&quot; name=&quot;Timing&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    It should be noted that activities being performed in this capability pattern are not performed in sequence.&amp;nbsp; In&#xD;
    fact, it is more-often the case that these activities are performed concurrently. For example, while identifying actors&#xD;
    and use cases (&lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.use_case_driven_dev.base/guidances/guidelines/identify_and_outline_actors_and_ucs_BB5516A9.html&quot;&#xD;
     guid=&quot;_eyL0wCu-EdqSxKAVa9kmvA&quot;>Identify and Outline Actors and Use Cases&lt;/a>), we may encounter requirements that do&#xD;
    not naturally align with a particular use case, in which case the requirement may be defined in the Supplementary&#xD;
    Specifications (&lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.use_case_driven_dev.base/tasks/detail_system_wide_requirements_B5BBACC3.html&quot;&#xD;
    guid=&quot;_4z8Z0EbEEdyx8quJU3Grxg&quot;>Detail System-Wide Requirements&lt;/a>). Conversely, while identifying&#xD;
    non-use-case-specific requirements (e.g., system-wide requirements), we may encounter requirements that only apply to a&#xD;
    particular use case, in which case the requirement is associated with the use case.&#xD;
&lt;/p></keyConsiderations>
    <usageGuidance>&lt;p>&#xD;
    This activity is primarily performed in iterations during the Inception and Elaboration phases, however it may be&#xD;
    revisited as needed when &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../process.standard_rup.base-ibm/capabilitypatterns/manage_the_scope_of_the_system_3915DFBE.html&quot;&#xD;
    guid=&quot;_KjsU4yZIEd-Hb5ChSoDHIA&quot;>managing scope&lt;/a> and responding to &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../process.standard_rup.base-ibm/capabilitypatterns/manage_changing_requirements_A45D15A6.html&quot;&#xD;
    guid=&quot;_KjsVGSZIEd-Hb5ChSoDHIA&quot;>changing requirements&lt;/a>, as well as other changes in the project conditions.&#xD;
&lt;/p></usageGuidance>
    <purpose>The purpose of this activity is to understand the needs of the primary project stakeholders by gathering information about&#xD;
the desired or envisaged product.</purpose>
    <howtoStaff>&lt;a id=&quot;HowToStaff&quot; name=&quot;HowToStaff&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The project members involved in understanding stakeholder needs should be efficient facilitators and have experience in&#xD;
    eliciting information. Of course, familiarity with the targeted technology is desirable, but it is not essential.&#xD;
&lt;/p></howtoStaff>
  </org.eclipse.epf.uma:ActivityDescription>
  <org.eclipse.epf.uma:ActivityDescription xmi:id="-FWwQICYXIleFA68ZlyetPw" name="define_the_system,{20E30ECF-7359-45EC-AA5F-8A7BFA21C472}" guid="-FWwQICYXIleFA68ZlyetPw">
    <mainDescription>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    This activity addresses:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Aligning the project team in their understanding of the system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performing a high-level analysis on the results of collected &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../core.tech.common.extend_supp-ibm/workproducts/stakeholder_request_D3F7C1BF.html&quot;&#xD;
        guid=&quot;_Fe4SgAsIEdyZjrhh8Tsjpg&quot;>Stakeholder Request&lt;/a>s.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Refining the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/workproducts/vision_2E71B03C.html&quot;&#xD;
        guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>&amp;nbsp;to capture the key features that characterize the system (see &lt;a&#xD;
        class=&quot;elementLink&quot; href=&quot;./../../practice.tech.shared_vision.base/tasks/develop_technical_vision_9D36CF2F.html&quot;&#xD;
        guid=&quot;_0fOAoMlgEdmt3adZL5Dmdw&quot;>Develop Technical Vision&lt;/a>).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Refining the &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../core.tech.common.extend_supp/workproducts/use_case_model_85965D1B.html&quot;&#xD;
        guid=&quot;_W2SgEDR5EdutE_HNDTJk5Q&quot;>Use-Case Model&lt;/a> to include outlined &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../core.tech.common.extend_supp/workproducts/use_case_22BE66E2.html&quot; guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use&#xD;
        Case&lt;/a>&amp;nbsp;(see &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../practice.tech.use_case_driven_dev.base/tasks/identify_and_outline_requirements_90D272B9.html&quot;&#xD;
        guid=&quot;_P9cMUPV_EdmdHa9MmVPgqQ&quot;>Identify and Outline Requirements&lt;/a>).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Outlining the non-use-case-specific requirements in the &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../core.tech.common.extend_supp/workproducts/system_wide_requirements_7D9DD47C.html&quot;&#xD;
        guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>System-Wide Requirements&lt;/a>&amp;nbsp;(see &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../practice.tech.use_case_driven_dev.base/tasks/detail_system_wide_requirements_B5BBACC3.html&quot;&#xD;
        guid=&quot;_4z8Z0EbEEdyx8quJU3Grxg&quot;>Detail System-Wide Requirements&lt;/a>).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Beginning to capture the results of the requirements elicitation activities in a more structured manner.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The activities that focus on problem analysis and understanding stakeholder needs create early iterations of key system&#xD;
    definitions including the features defined in the vision and a first outline of the detailed requirements. This&#xD;
    activity, defining the system, focuses on identifying actors and use cases more completely by outlining their&#xD;
    content&amp;nbsp;(see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.use_case_driven_dev.base/tasks/identify_and_outline_requirements_90D272B9.html&quot;&#xD;
    guid=&quot;_P9cMUPV_EdmdHa9MmVPgqQ&quot;>Identify and Outline Requirements&lt;/a>), as well as outlining the non-use-case-specific&#xD;
    requirements in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/workproducts/system_wide_requirements_7D9DD47C.html&quot;&#xD;
    guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>System-Wide Requirements&lt;/a>&amp;nbsp;(see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.use_case_driven_dev.base/tasks/detail_system_wide_requirements_B5BBACC3.html&quot;&#xD;
    guid=&quot;_4z8Z0EbEEdyx8quJU3Grxg&quot;>Detail System-Wide Requirements&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.gen.common.base/workproducts/glossary_5D300778.html&quot;&#xD;
    guid=&quot;_Wn7HcNcEEdqz_d2XWoVt6Q&quot;>Glossary&lt;/a>&amp;nbsp;is also refined as additional common terms are identified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As you define new requirements, it is important to document any dependencies (e.g., &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/traceability_2C55758C.html&quot;&#xD;
    guid=&quot;_eYtQQO0KEdqHTdbLTmC5IQ&quot;>Traceability&lt;/a>) between these requirements (see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.rqmts_mgmt.base-ibm/workproducts/requirements_traceability_578E4FFF.html&quot;&#xD;
    guid=&quot;_padWMA_ZEd2OrMVn8vM9Sg&quot;>Requirements Traceability&lt;/a>).&#xD;
&lt;/p></mainDescription>
    <keyConsiderations>&lt;a id=&quot;Timing&quot; name=&quot;Timing&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    It should be noted that activities being performed in this capability pattern are not performed in sequence.&amp;nbsp; In&#xD;
    fact, it is more-often the case that these activities are performed concurrently. For example, while identifying actors&#xD;
    and use cases (&lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.use_case_driven_dev.base/tasks/identify_and_outline_requirements_90D272B9.html&quot;&#xD;
    guid=&quot;_P9cMUPV_EdmdHa9MmVPgqQ&quot;>Identify and Outline Requirements&lt;/a>), we may encounter requirements that do not&#xD;
    naturally align with a particular use case, in which case the requirement may be defined in the Supplementary&#xD;
    Specifications (&lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.use_case_driven_dev.base/tasks/detail_system_wide_requirements_B5BBACC3.html&quot;&#xD;
    guid=&quot;_4z8Z0EbEEdyx8quJU3Grxg&quot;>Detail System-Wide Requirements&lt;/a>). Conversely, while identifying&#xD;
    non-use-case-specific requirements (e.g., system-wide requirements), we may encounter requirements that only apply to a&#xD;
    particular use case, in which case the requirement is associated with the use case.&#xD;
&lt;/p></keyConsiderations>
    <usageGuidance>&lt;p>&#xD;
    This activity is primarily performed in iterations during the Inception and Elaboration phases, however it may be&#xD;
    revisited as needed when &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../process.standard_rup.base-ibm/capabilitypatterns/manage_the_scope_of_the_system_3915DFBE.html&quot;&#xD;
    guid=&quot;_KjsU4yZIEd-Hb5ChSoDHIA&quot;>managing scope&lt;/a> and responding to &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../process.standard_rup.base-ibm/capabilitypatterns/manage_changing_requirements_A45D15A6.html&quot;&#xD;
    guid=&quot;_KjsVGSZIEd-Hb5ChSoDHIA&quot;>changing requirements&lt;/a>, as well as other changes in the project conditions.&#xD;
&lt;/p></usageGuidance>
    <purpose>The purpose of this activity is to begin converging on the scope of the high-level requirements by outlining the breadth of&#xD;
the detailed requirements for the system.</purpose>
    <howtoStaff>&lt;a id=&quot;HowToStaff&quot; name=&quot;HowToStaff&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    While it encourages team ownership and commitment to have all members of the project team participate in defining the&#xD;
    system, this work is primarily coordinated and conducted by staff playing the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.default.role_def.base/roles/analyst_39D7C49B.html&quot;&#xD;
    guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Analyst&lt;/a>&amp;nbsp;role. Because this work often requires making tradeoff's between&#xD;
    multiple requirements to make best use of the finite development resources, diplomacy, negotiation and mediation are&#xD;
    important skills for the system analyst conducting this work.&#xD;
&lt;/p></howtoStaff>
  </org.eclipse.epf.uma:ActivityDescription>
  <org.eclipse.epf.uma:ActivityDescription xmi:id="-idqn0S40gzYzWqzWdHbY6Q" name="manage_the_scope_of_the_system,{CA9197A9-051E-4845-A7FC-2A8750BD8C02}" guid="-idqn0S40gzYzWqzWdHbY6Q">
    <mainDescription>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    This&amp;nbsp;activity addresses:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Prioritizing and refining the input to the selection of features and requirements that are to be included in the&#xD;
        current iteration.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining the set of behavioral scenarios, for one or more &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../core.tech.common.extend_supp/workproducts/use_case_22BE66E2.html&quot; guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use&#xD;
        Case&lt;/a>s, that represent some significant central functionality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining how traceability will be maintained, including which requirement attributes and traceability relationships&#xD;
        to maintain.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Refining the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/workproducts/vision_2E71B03C.html&quot;&#xD;
        guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a> to document the scope of the solution (see &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../practice.tech.shared_vision.base/tasks/develop_technical_vision_9D36CF2F.html&quot;&#xD;
        guid=&quot;_0fOAoMlgEdmt3adZL5Dmdw&quot;>Develop Technical Vision&lt;/a>)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The scope of a project is defined by the set of requirements allocated to it. Managing project scope to fit the&#xD;
    available resources (time, people, and money) is key to managing successful projects.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.default.role_def.base/roles/analyst_39D7C49B.html&quot;&#xD;
    guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Analyst&lt;/a> role is responsible for determining requirements attribute values of&#xD;
    priority, effort, cost, risk values etc., from the appropriate stakeholders, which are collected in the repository of&#xD;
    requirements attributes. These will be used by the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.default.role_def.base/roles/project_manager_E657F936.html&quot; guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Project&#xD;
    Manager&lt;/a> role when planning each iteration and will enable the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.default.role_def.base/roles/architect_E7A12309.html&quot; guid=&quot;_0X9iEMlgEdmt3adZL5Dmdw&quot;>Architect&lt;/a>&#xD;
    role to identify the architecturally significant scenario's or complete use cases, which will help define the Use-Case&#xD;
    View&amp;nbsp;of the architecture.&#xD;
&lt;/p></mainDescription>
    <keyConsiderations>&lt;a id=&quot;Timing&quot; name=&quot;Timing&quot;>&lt;/a>&lt;a id=&quot;Optionality&quot; name=&quot;Optionality&quot;>&lt;/a>&lt;a id=&quot;WorkGuidelines&quot;&#xD;
name=&quot;WorkGuidelines&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    Using &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.rqmts_mgmt.base-ibm/workproducts/requirements_attributes_4340F783.html&quot;&#xD;
    guid=&quot;_rgaGUPxiEdyNoss1L6vBPA&quot;>Requirements Attributes&lt;/a>, such as priority, effort, and risk, as the basis for&#xD;
    negotiating the inclusion of a requirement is a particularly useful technique for managing scope. Focusing on the&#xD;
    attributes rather than the requirements themselves helps desensitize negotiations that are otherwise contentious.&#xD;
&lt;/p></keyConsiderations>
    <usageGuidance>&lt;p>&#xD;
    This activity should be performed continuously throughout the project.&#xD;
&lt;/p></usageGuidance>
    <purpose>The purpose of this activity is to make the scope of the system being developed as explicit as possible, and focus on a&#xD;
manageable body of requirements work for a development cycle.</purpose>
    <howtoStaff>&lt;a id=&quot;HowToStaff&quot; name=&quot;HowToStaff&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The people involved in this activity should all be members of the architecture team.&amp;nbsp; The architecture team will&#xD;
    facilitate a session for various team members to discuss how to best prioritize the requirements.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is also helpful for team leaders to be trained in negotiation skills and for the project to have a champion in the&#xD;
    organization, as well as on the customer side. Product/project champions should have the organizational power to refuse&#xD;
    scope changes beyond the available resources or to expand resources to accommodate additional scope.&#xD;
&lt;/p></howtoStaff>
  </org.eclipse.epf.uma:ActivityDescription>
  <org.eclipse.epf.uma:ActivityDescription xmi:id="-UM7LoTEIhwdpNZj1vqc-Ng" name="refine_the_system_definition,{0FEE5795-6090-4D82-9BDB-925E5F0D9985}" guid="-UM7LoTEIhwdpNZj1vqc-Ng">
    <mainDescription>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    This activity addresses detailing the requirements.&amp;nbsp; It&amp;nbsp;furthers the understanding of project scope reflected&#xD;
    in the set of prioritized product features (often described in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/workproducts/vision_2E71B03C.html&quot;&#xD;
    guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>) that it is believed can be achieved by fairly firm budgets and dates. The&#xD;
    output is a more in-depth understanding of system functionality expressed in refined, detailed requirements in&#xD;
    specification artifacts and outlined behavioral prototypes. The specification artifacts can take the form of detailed&#xD;
    use cases (see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.use_case_driven_dev.base/tasks/detail_use_case_scenarios_3DBC6A10.html&quot;&#xD;
    guid=&quot;_SL7N0LPdEduocbW-TPTq7A&quot;>Detail Use-Case Scenarios&lt;/a>) and system-wide requirements (see &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.use_case_driven_dev.base/tasks/detail_system_wide_requirements_B5BBACC3.html&quot;&#xD;
    guid=&quot;_4z8Z0EbEEdyx8quJU3Grxg&quot;>Detail System-Wide Requirements&lt;/a>),&amp;nbsp;and in some cases a formal software&#xD;
    requirements specification&amp;nbsp;may be developed. This work typically starts by reviewing the existing actor&#xD;
    definitions and if necessary least briefly describing the actors, then continues with detailing the use cases that have&#xD;
    been previously outlined for each actor.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Whenever requirements are changed, regular reviews and updates to the associated requirements attributes should be done&#xD;
    as described in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.rqmts_mgmt.base-ibm/tasks/manage_changing_requirements_15B39BB8.html&quot;&#xD;
    guid=&quot;_6ZfTICKxEd2t5qhMB92rjQ&quot;>Manage Changing Requirements&lt;/a> activity.&#xD;
&lt;/p></mainDescription>
    <keyConsiderations>&lt;a id=&quot;Timing&quot; name=&quot;Timing&quot;>&lt;/a>&lt;a id=&quot;Optionality&quot; name=&quot;Optionality&quot;>&lt;/a>&lt;a id=&quot;WorkGuidelines&quot;&#xD;
name=&quot;WorkGuidelines&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    It should be noted that activities being performed in this capability pattern are not performed in sequence.&amp;nbsp; In&#xD;
    fact, it is more-often the case that these activities are performed concurrently. For example, while identifying actors&#xD;
    and use cases, we may encounter requirements that do not naturally align with a particular use case, in which case the&#xD;
    requirement may be defined in the system-wide requirements. Conversely, while identifying non-use-case-specific&#xD;
    requirements (e.g., system-wide requirements), we may encounter requirements that only apply to a particular use case,&#xD;
    in which case the requirement is associated with the use case.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Although much of the work is done individually, frequent reviews (i.e. walk-throughs) should be performed to calibrate&#xD;
    work products across team members and ensure the team is in sync.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p></keyConsiderations>
    <usageGuidance>&lt;p>&#xD;
    This activity is primarily performed during Elaboration, though may be performed in some capacity from late Inception&#xD;
    through Construction.&#xD;
&lt;/p></usageGuidance>
    <purpose>The purpose of this activity is to further refine the requirements in order to capture the consensus understanding of the&#xD;
system definition.</purpose>
    <howtoStaff>&lt;a id=&quot;HowToStaff&quot; name=&quot;HowToStaff&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.default.role_def.base/roles/analyst_39D7C49B.html&quot;&#xD;
    guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Analyst&lt;/a> role is primarily involved in performing this work. The most important&#xD;
    skills required to conduct this work include information elicitation &amp;amp; communication. Staff responsible for&#xD;
    specifying requirements should be skilled in expressing themselves in writing, and need to develop a good understanding&#xD;
    of the problem domain.&#xD;
&lt;/p></howtoStaff>
  </org.eclipse.epf.uma:ActivityDescription>
  <org.eclipse.epf.uma:ActivityDescription xmi:id="-FXtTkNBqzqWhBG5ITbOxRg" name="manage_changing_requirements,{28B39D62-9D73-4254-9CB8-26CFA737D45E}" guid="-FXtTkNBqzqWhBG5ITbOxRg">
    <mainDescription>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    This activity addresses:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Evaluating requested changes and determining their impact on the existing software requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Structuring the use-case model&amp;nbsp;to improve the overall management of the requirements documented in the use&#xD;
        case.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Managing changes to the&amp;nbsp;requirements attributes and traceability relationships.&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Once the changes have been implemented, verifying that the results of the requirements work conform to the&#xD;
        customer's view of the system.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Changes to requirements naturally impact downstream artifacts (e.g., analysis and design work products, test work&#xD;
    products, deployment artifacts, etc.) The traceability relationships identified and documented during &lt;a&#xD;
    class=&quot;elementLink&quot; href=&quot;./../../practice.tech.rqmts_mgmt.base-ibm/tasks/organize_requirements_F430CCED.html&quot;&#xD;
    guid=&quot;_d0LLYOF9Edy14KJRPqCmog&quot;>Organize Requirements&lt;/a>&amp;nbsp;explicitly define the relationships between the&#xD;
    requirements and the other work products. These relationships are the key to understanding the impact of requirements&#xD;
    change.&#xD;
&lt;/p></mainDescription>
    <keyConsiderations>&lt;p>&#xD;
    The core development team should conduct a few rounds of internal reviews: walk-throughs to clean up unnecessary&#xD;
    inconsistencies before their work is more formally inspected and reviewed by the extended team.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should divide the material up so that the team does not review everything at once. A review meeting shouldn't take&#xD;
    more than a day. For example, you might conduct separate reviews of the user interface and the behavioral scenarios, or&#xD;
    you might review all of the requirements artifacts related to a given subsystem.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another important consideration is the tracking of requirement history. By capturing the nature and rationale of&#xD;
    requirements changes, reviewers receive the information needed to respond to the change properly.&#xD;
&lt;/p></keyConsiderations>
    <usageGuidance>&lt;p>&#xD;
    This activity should be performed in whenever requirements are refined.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Regular reviews, along with updates to the requirement attributes and dependencies, should be done whenever the&#xD;
    requirements are updated.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is recommended that you arrange one review of the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/workproducts/use_case_model_85965D1B.html&quot;&#xD;
    guid=&quot;_W2SgEDR5EdutE_HNDTJk5Q&quot;>Use-Case Model&lt;/a>&amp;nbsp;per iteration in the Inception and Elaboration phases, where you&#xD;
    review the work in progress; this is initially done and signed off by the users prior to developing any of the &lt;a&#xD;
    class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/workproducts/use_case_22BE66E2.html&quot;&#xD;
    guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use Case&lt;/a> in detail, and is a very important milestone so that resources are not&#xD;
    spent on developing incorrect use cases. Then, at the end of the Elaboration phase, you should arrange a detailed&#xD;
    review of the use-case model. Remember that at the end of the Elaboration phase, you should have a use-case model, and&#xD;
    possibly a domain model representing the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.gen.common.base/workproducts/glossary_5D300778.html&quot; guid=&quot;_Wn7HcNcEEdqz_d2XWoVt6Q&quot;>Glossary&lt;/a>,&#xD;
    that is 80% complete. You should also arrange one review of the use-case model per iteration in the Construction and&#xD;
    Transition phases when the use-case model is refined. The review should concentrate on the part of the use case model&#xD;
    being developed for the iteration.&#xD;
&lt;/p></usageGuidance>
    <purpose>The purpose of this activity is to assess the impact of requested changes to the requirements, and manage the downstream&#xD;
impact of the changes approved to be actioned.</purpose>
    <howtoStaff>&lt;a id=&quot;HowToStaff&quot; name=&quot;HowToStaff&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    Involve the extended team (stakeholders: customer representatives, domain experts, and others). Include as a technical&#xD;
    reviewer&amp;nbsp;anyone on the software project team whose work is affected by the change).&amp;nbsp; Be careful to manage&#xD;
    your reviewing resources effectively.&amp;nbsp; Do not include the entire extended team unless you can ensure it adds value&#xD;
    to the project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The extended team should incorporate good knowledge of the problem domain, the technical difficulties of the project,&#xD;
    as well as skills in requirements management and use-case modeling.&#xD;
&lt;/p></howtoStaff>
  </org.eclipse.epf.uma:ActivityDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-4g0ZAMBjqX0SHK3pjVPzJw" name="requirements,{38A9C609-9A59-4D03-B835-AA84A716E626}" guid="-4g0ZAMBjqX0SHK3pjVPzJw">
    <mainDescription>&lt;a id=&quot;Purpose&quot; name=&quot;Purpose&quot;>&lt;/a>&lt;a id=&quot;RelationToOtherDisciplines&quot; name=&quot;RelationToOtherDisciplines&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    To help explain the work involved in the Requirements discipline, the activities and work products are organized into a&#xD;
    capability pattern for the discipline.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Each&amp;nbsp;activity represents a high-level goal that needs to be achieved to perform effective requirements management.&#xD;
    Analyzing the problem and understanding the stakeholders needs are the primary requirements goals during the Inception&#xD;
    phase of a project. During the Elaboration and Construction phases, the emphasis shifts more towards initially defining&#xD;
    and subsequently refining the system definition in terms of the detailed requirements. Managing the system scope and&#xD;
    ongoing requirements change are addressed continuously throughout the project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The workflow diagram, shown on the Work Breakdown Structure, shows the activities in a logical, sequential order. These&#xD;
    activities are applied continuously in varied order, as needed, throughout the project. The Requirements discipline&#xD;
    capability pattern&amp;nbsp;sequences the activities in the&amp;nbsp;order&amp;nbsp;that you would most likely apply them in the&#xD;
    first iteration of a new project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    &amp;nbsp;&#xD;
&lt;/p></mainDescription>
    <usageNotes>&lt;h4>&#xD;
    Decide How to Perform the Workflow&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The following decisions should be made regarding the Requirements discipline's workflow:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Decide how to perform the workflow by looking at the&amp;nbsp;activities in this workflow. Study the diagram with&#xD;
        its&amp;nbsp;guard conditions. Decide which activities to perform and in which order.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Decide what parts of the Requirements activities to perform. The table below shows some parts that can be&#xD;
        introduced relatively independently from each other.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Decide when, during the project lifecycle, to introduce each part of the workflow. As a general rule, the&#xD;
        Requirements discipline should be introduced early in the project.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;div>&#xD;
    &lt;table&#xD;
    style=&quot;BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid&quot;&#xD;
     cellspacing=&quot;0&quot; bordercolordark=&quot;#808080&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bordercolorlight=&quot;#808080&quot; border=&quot;1&quot;>&#xD;
        &lt;tbody>&#xD;
            &lt;tr>&#xD;
                &lt;th scope=&quot;col&quot; align=&quot;left&quot; width=&quot;25%&quot;>&#xD;
                    Part of workflow&#xD;
                &lt;/th>&#xD;
                &lt;th scope=&quot;col&quot; align=&quot;left&quot; width=&quot;75%&quot;>&#xD;
                    Comments&#xD;
                &lt;/th>&#xD;
            &lt;/tr>&#xD;
            &lt;tr>&#xD;
                &lt;td width=&quot;25%&quot;>&#xD;
                    Use-Cases&#xD;
                &lt;/td>&#xD;
                &lt;td width=&quot;75%&quot;>&#xD;
                    Some projects do not employ use-cases, which means that the project will not develop artifacts such as&#xD;
                    a Use-Case Model, Use-Case Package and Use Case. Instead use the Software Requirements&#xD;
                    Specification.&amp;nbsp;&#xD;
                &lt;/td>&#xD;
            &lt;/tr>&#xD;
            &lt;tr>&#xD;
                &lt;td width=&quot;25%&quot;>&#xD;
                    &lt;a class=&quot;elementLinkWithType&quot;&#xD;
                    href=&quot;./../../process.standard_rup.base-ibm/capabilitypatterns/manage_changing_requirements_A45D15A6.html&quot;&#xD;
                     guid=&quot;_KjsVGSZIEd-Hb5ChSoDHIA&quot;>Activity: Manage Changing Requirements&lt;/a>&#xD;
                &lt;/td>&#xD;
                &lt;td width=&quot;75%&quot;>&#xD;
                    This can be introduced after a few iterations in the project when there is a stable&#xD;
                    baseline.&amp;nbsp;&amp;nbsp;&#xD;
                &lt;/td>&#xD;
            &lt;/tr>&#xD;
        &lt;/tbody>&#xD;
    &lt;/table>&lt;br />&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Document the decisions in the process description.&#xD;
&lt;/p></usageNotes>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FhJYXvFDe55B39UHKSOdzQ" name="glossary,_E7BQaSZSEd-Hb5ChSoDHIA" guid="-FhJYXvFDe55B39UHKSOdzQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zAcUXGuxtS5uhqx_oxzqrQ" name="plan_requirements_management_strategy,_KpM7MCZSEd-Hb5ChSoDHIA" guid="-zAcUXGuxtS5uhqx_oxzqrQ">
    <refinedDescription>&lt;p>&#xD;
    Usually an organization will capture one or two strategies, which will be used for multiple projects of a similar&#xD;
    nature. If a new project is very different in the nature of its requirements than previous projects implemented at the&#xD;
    organization, it would be a good idea to consider whether previously-used strategies for managing requirements still&#xD;
    apply. If not, a Requirements Management Strategy will need to be identified and captured.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The requirements management strategy includes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The structure of the requirement set&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools used for automation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The attributes used for tracking information&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The process flows for approval and review of the requirement set, and for changes to the requirement set&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    If this is a large and complex requirement set, the strategy&amp;nbsp;must be documented thoroughly as a &lt;a&#xD;
    class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.rqmts_mgmt.base-ibm/guidances/templates/requirements_management_process_description_408F0392.html&quot;&#xD;
     guid=&quot;_LPtY8HRtEd2-O6kr4zpk8g&quot;>Requirements Management Process Description&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5dMYuEESQyp-8ZifdxGsYA" name="requirements_management_process_description,_KpM7MSZSEd-Hb5ChSoDHIA" guid="-5dMYuEESQyp-8ZifdxGsYA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-a3K0NEI4oAobk4gGXfA_kA" name="develop_technical_vision,_L5MjcCZSEd-Hb5ChSoDHIA" guid="-a3K0NEI4oAobk4gGXfA_kA">
    <keyConsiderations>&lt;p>&#xD;
    Use-case modeling&amp;nbsp;is one technique that can prove useful in defining the system boundaries and system behavior.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fHMJj0Dxr0Gk3o2TWSDTFQ" name="vision,_L5MjciZSEd-Hb5ChSoDHIA" guid="-fHMJj0Dxr0Gk3o2TWSDTFQ">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VeTFE0FoxUZu9JJRV4baeA" name="work_items_list,_dHp5sazVEeCk3v6A9pA8EQ" guid="-VeTFE0FoxUZu9JJRV4baeA">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OZx4ggay6pzEB81TLSpoqg" name="glossary,_HcqGuSZSEd-Hb5ChSoDHIA" guid="-OZx4ggay6pzEB81TLSpoqg">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qnhRmctX9x9YxIqsarht_g" name="develop_technical_vision,_MVW7ACZSEd-Hb5ChSoDHIA" guid="-qnhRmctX9x9YxIqsarht_g">
    <keyConsiderations>&lt;p>&#xD;
    Use-case modeling&amp;nbsp;is one technique that can prove useful in defining the system boundaries and system behavior.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1eMipQYdkesop84jEOPS6A" name="vision,_MVW7AiZSEd-Hb5ChSoDHIA" guid="-1eMipQYdkesop84jEOPS6A">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-maNYh0FGl5NFaxedO7Gg_g" name="organize_requirements,_NB8-8CxrEd-rIPCOaPACIg" guid="-maNYh0FGl5NFaxedO7Gg_g">
    <refinedDescription>This task describes the decisions involved in organizing the project requirements. A large requirement set will quickly&#xD;
become unmanageable if it is not organized so that the analysts and other project team members can easily find them. The&#xD;
organizational&amp;nbsp;structure must be captured in the requirements management plan.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-m8swkOE14_wXNn8bc-htPw" name="requirements_management_process_description,_NCGI4CxrEd-rIPCOaPACIg" guid="-m8swkOE14_wXNn8bc-htPw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6UCOvTuec8Eh6SFRAXu2bA" name="requirements_attributes,_NCGI4SxrEd-rIPCOaPACIg" guid="-6UCOvTuec8Eh6SFRAXu2bA">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Nkunv5tmRFvBRUMArDQ_mQ" name="requirements_traceability,_NCGI4ixrEd-rIPCOaPACIg" guid="-Nkunv5tmRFvBRUMArDQ_mQ">
    <keyConsiderations>&lt;p>&#xD;
    In order to maintain the consistency&amp;nbsp;of the traceability,&amp;nbsp;this artifact must be re-assessed every time there&#xD;
    is a change to the requirement or at the end of each milestone.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In a small simple project, the traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is&#xD;
    helpful in a complicated large-scale project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Traceability is defined by identifying which relationships between requirement types - or other artifacts -- are&#xD;
    important enough to track and maintain.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Yq8BMdfxd8QzTBnhf6XVzg" name="work_items_list,_dIGloazVEeCk3v6A9pA8EQ" guid="-Yq8BMdfxd8QzTBnhf6XVzg">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SCqapEaJHcstGZmgyy8JnQ" name="develop_technical_vision,_Ga4rMCZTEd-Hb5ChSoDHIA" guid="-SCqapEaJHcstGZmgyy8JnQ">
    <keyConsiderations>&lt;p>&#xD;
    Use-case modeling&amp;nbsp;is one technique that can prove useful in defining the system boundaries and system behavior.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eoCjootkOe5Iq9SBleFeqQ" name="vision,_Ga4rNSZTEd-Hb5ChSoDHIA" guid="-eoCjootkOe5Iq9SBleFeqQ">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-q2sSdbSabbHf5NSm98ryzg" name="glossary,_Ga4rNiZTEd-Hb5ChSoDHIA" guid="-q2sSdbSabbHf5NSm98ryzg">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vIjtqaLkqz2_KpxdX_XOGA" name="detail_system_wide_requirements,_JBSswCZTEd-Hb5ChSoDHIA" guid="-vIjtqaLkqz2_KpxdX_XOGA">
    <keyConsiderations>To avoid unnecessary rework, only those requirements that are scheduled for implementation in the near term (in the next&#xD;
iteration or two)&amp;nbsp;must be detailed.</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0nIo3Py6e2FPUhrLjCmrzA" name="organize_requirements,_z1ikYCxrEd-rIPCOaPACIg" guid="-0nIo3Py6e2FPUhrLjCmrzA">
    <refinedDescription>This task describes the decisions involved in organizing the project requirements. A large requirement set will quickly&#xD;
become unmanageable if it is not organized so that the analysts and other project team members can easily find them. The&#xD;
organizational&amp;nbsp;structure must be captured in the requirements management plan.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nXSsvEzhHvaoA7P5OWCKyw" name="requirements_management_process_description,_z1ikYSxrEd-rIPCOaPACIg" guid="-nXSsvEzhHvaoA7P5OWCKyw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2VrV5y_0o3RFI_8F5zvW2Q" name="requirements_attributes,_z1ikYixrEd-rIPCOaPACIg" guid="-2VrV5y_0o3RFI_8F5zvW2Q">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Kkr4rDziEolc_mfte1ic8w" name="requirements_traceability,_z1ikYyxrEd-rIPCOaPACIg" guid="-Kkr4rDziEolc_mfte1ic8w">
    <keyConsiderations>&lt;p>&#xD;
    In order to maintain the consistency&amp;nbsp;of the traceability,&amp;nbsp;this artifact must be re-assessed every time there&#xD;
    is a change to the requirement or at the end of each milestone.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In a small simple project, the traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is&#xD;
    helpful in a complicated large-scale project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Traceability is defined by identifying which relationships between requirement types - or other artifacts -- are&#xD;
    important enough to track and maintain.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mM1fhesaLjFlZ7sRpdh6sA" name="work_items_list,_dIaHoazVEeCk3v6A9pA8EQ" guid="-mM1fhesaLjFlZ7sRpdh6sA">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rFieE7IDp48ptxD__tSLdw" name="develop_technical_vision,_6rH8ICxrEd-rIPCOaPACIg" guid="-rFieE7IDp48ptxD__tSLdw">
    <keyConsiderations>&lt;p>&#xD;
    Use-case modeling&amp;nbsp;is one technique that can prove useful in defining the system boundaries and system behavior.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-W3Jd_-2AuJUb8aECtJPXpA" name="vision,_6rRtICxrEd-rIPCOaPACIg" guid="-W3Jd_-2AuJUb8aECtJPXpA">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XtT1xMYHa5To8bmbAbiWNQ" name="glossary,_6rRtISxrEd-rIPCOaPACIg" guid="-XtT1xMYHa5To8bmbAbiWNQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OYjtvLr9emyZh18fRkjQEQ" name="requirements_management_process_description,_AzY64SxsEd-rIPCOaPACIg" guid="-OYjtvLr9emyZh18fRkjQEQ">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rEjFVswqEm7K7uxrwG0I9w" name="requirements_attributes,_AzY64ixsEd-rIPCOaPACIg" guid="-rEjFVswqEm7K7uxrwG0I9w">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Nk7NR7QXAKLZTUAioSs_UA" name="requirements_traceability,_AzY64yxsEd-rIPCOaPACIg" guid="-Nk7NR7QXAKLZTUAioSs_UA">
    <keyConsiderations>&lt;p>&#xD;
    In order to maintain the consistency&amp;nbsp;of the traceability,&amp;nbsp;this artifact must be re-assessed every time there&#xD;
    is a change to the requirement or at the end of each milestone.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In a small simple project, the traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is&#xD;
    helpful in a complicated large-scale project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Traceability is defined by identifying which relationships between requirement types - or other artifacts -- are&#xD;
    important enough to track and maintain.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--_-kVb-aDk6jIcB2BOgE8g" name="assess_requirement_consistency,_R2100CxsEd-rIPCOaPACIg" guid="--_-kVb-aDk6jIcB2BOgE8g">
    <keyConsiderations>The requirements tend to degrade over time as they evolve. Periodic assessment can be&amp;nbsp;performed once per iteration or&#xD;
milestone.</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-I-S0F6QV-fl-B7zCgHnkCg" name="organize_requirements,_TKKKYD0hEd-G6-ChVV8khw" guid="-I-S0F6QV-fl-B7zCgHnkCg">
    <refinedDescription>This task describes the decisions involved in organizing the project requirements. A large requirement set will quickly&#xD;
become unmanageable if it is not organized so that the analysts and other project team members can easily find them. The&#xD;
organizational&amp;nbsp;structure must be captured in the requirements management plan.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1DMc5uUZlwkK7e5M5OJuYg" name="detail_use_case_scenarios,_KYSjICxtEd-rIPCOaPACIg" guid="-1DMc5uUZlwkK7e5M5OJuYg">
    <keyConsiderations>&lt;p>&#xD;
    To avoid unnecessary rework, only those use-case scenarios that are scheduled for implementation in the near term (in&#xD;
    the next iteration or two)&amp;nbsp;must be detailed.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Not all use-case scenarios require detailing.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kWsfuMQI-CB5HyUTEoteVQ" name="glossary,_KYbtESxtEd-rIPCOaPACIg" guid="-kWsfuMQI-CB5HyUTEoteVQ">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Twlrj6vg747BXdHOriviHA" name="detail_system_wide_requirements,_M9kjUCxtEd-rIPCOaPACIg" guid="-Twlrj6vg747BXdHOriviHA">
    <keyConsiderations>To avoid unnecessary rework, only those requirements that are scheduled for implementation in the near term (in the next&#xD;
iteration or two)&amp;nbsp;must be detailed.</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ybcXqFy3DC1Q5cBTFD_n8w" name="assess_requirement_consistency,_aiEqICxtEd-rIPCOaPACIg" guid="-ybcXqFy3DC1Q5cBTFD_n8w">
    <keyConsiderations>The requirements tend to degrade over time as they evolve. Periodic assessment can be&amp;nbsp;performed once per iteration or&#xD;
milestone.</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nfwWfoJbEY5kJLDOC2k23w" name="requirements_attributes,_aiEqISxtEd-rIPCOaPACIg" guid="-nfwWfoJbEY5kJLDOC2k23w">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LArjzzIY6Z8KjQWcP6_ejA" name="requirements_traceability,_aiEqIixtEd-rIPCOaPACIg" guid="-LArjzzIY6Z8KjQWcP6_ejA">
    <keyConsiderations>&lt;p>&#xD;
    In order to maintain the consistency&amp;nbsp;of the traceability,&amp;nbsp;this artifact must be re-assessed every time there&#xD;
    is a change to the requirement or at the end of each milestone.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In a small simple project, the traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is&#xD;
    helpful in a complicated large-scale project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Traceability is defined by identifying which relationships between requirement types - or other artifacts -- are&#xD;
    important enough to track and maintain.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-un45joNSjiiI2FagQkzhTQ" name="manage_changing_requirements,_f95ZoCxtEd-rIPCOaPACIg" guid="-un45joNSjiiI2FagQkzhTQ">
    <refinedDescription>&lt;p>&#xD;
    This task describes how requirements changes are managed over time.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Changes might cause you to add, edit, or remove requirements. In order to keep a complete change history, you&amp;nbsp;must&#xD;
    remove requirements by marking them as obsolete in the project, rather than physically deleting the requirements.&#xD;
    Transaction information is captured in the requirement repository for further reference. After the change, it is&#xD;
    necessary to re-assess the traceability, and ensure the validity and consistency across the project.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5B7Odp9MlQAc2vXpVCN0Pw" name="stakeholder_request,_f95ZoSxtEd-rIPCOaPACIg" guid="-5B7Odp9MlQAc2vXpVCN0Pw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pd5sN87l3nGYruuuem7CCw" name="architect,_AXxLEeJmEeGhW_zi4ZlG6w" guid="-pd5sN87l3nGYruuuem7CCw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ERTmFfWiqnX7TrQeVzBJOg" name="project_manager,_AXzAQeJmEeGhW_zi4ZlG6w" guid="-ERTmFfWiqnX7TrQeVzBJOg">
    <keyConsiderations>In the context of portfolio management, this role participates in the decision of how to allocate resources supply&#xD;
to&amp;nbsp;work on portfolio components demand.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8XTjCpn6oRp3l02InTcMog" name="storyboard,_AX6VAeJmEeGhW_zi4ZlG6w" guid="-8XTjCpn6oRp3l02InTcMog">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sqj54ILMCSki8Mwvra2otw" name="iteration_plan,_AYCQ0eJmEeGhW_zi4ZlG6w" guid="-sqj54ILMCSki8Mwvra2otw">
    <keyConsiderations>&lt;p>&#xD;
    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work&#xD;
    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the&#xD;
    remaining high priority work items, plus a few mid-priority ones from the Work Items List). Once work items have been&#xD;
    assigned to the iteration, the team ensures that they can complete all work, regardless of original work item&#xD;
    priorities. Deciding what to develop first on an iteration will vary across projects and iterations.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jg4o0oaQVCJvZv4I60SdCA" name="risk_list,_AYFUIeJmEeGhW_zi4ZlG6w" guid="-jg4o0oaQVCJvZv4I60SdCA">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oQhzBILn7-cF38MtUfYbCw" name="project_plan,_AYI-geJmEeGhW_zi4ZlG6w" guid="-oQhzBILn7-cF38MtUfYbCw">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in&#xD;
order to make sure that everybody agrees with it.&lt;p/>&lt;p>&#xD;
    Create and update the project plan in planning sessions that involve the whole team and appropriate project&#xD;
    stakeholders in order to make sure that everybody agrees with it.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Document key stakeholder agreements involving budgets, schedules, resources, and requirements.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it&#xD;
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and&#xD;
    their milestones.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect&#xD;
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of&#xD;
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the&#xD;
    project.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4r718QJiHAk8p6kDAGgXnw" name="business_case,_AYLaweJmEeGhW_zi4ZlG6w" guid="-4r718QJiHAk8p6kDAGgXnw">
    <refinedDescription>For a commercial software product, the Business Case should include a set of assumptions about the project and the order of&#xD;
magnitude return on investment (ROI) if those assumptions are true. For example, the ROI will be a magnitude of five if&#xD;
completed in one year, two if completed in two years, and a negative number after that. These assumptions are checked again&#xD;
at the end of the Elaboration phase, when the scope and plan are defined with more accuracy.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_j0-IdSpRukXiNqXS5VY1g" name="issues_list,_AYOeEeJmEeGhW_zi4ZlG6w" guid="-_j0-IdSpRukXiNqXS5VY1g">
    <refinedDescription>In general, issues are items that are not being tracked through Change Management or as tasks in the Project or Iteration&#xD;
Plans, although they may derive from these.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-p00BFEomAsAlkNTnbNtHtg" name="project_measurements,_AYRhYeJmEeGhW_zi4ZlG6w" guid="-p00BFEomAsAlkNTnbNtHtg">
    <refinedDescription>&lt;p>&#xD;
    The format and contents of the Project Measurements&amp;nbsp;depends on the metrics selected and the technology used for&#xD;
    collection and storage. It is essentially a database of metric-value associations and allied information for their&#xD;
    collection and calculation. Its form could be as simple as a set of files manually maintained by the Project&#xD;
    Manager.&amp;nbsp; However, we recommend that the collection and storage be automated and, as far as possible, be made&#xD;
    non-intrusive.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oCsOuY4uY_4jrNJ9rbDnUQ" name="status_assessment,_AYUkseJmEeGhW_zi4ZlG6w" guid="-oCsOuY4uY_4jrNJ9rbDnUQ">
    <refinedDescription>&lt;p>&#xD;
    One of the objectives of the process is to ensure that the expectations of all parties are synchronized and consistent.&#xD;
    The periodic Status Assessment provides a mechanism for managing everyone's expectations throughout the project&#xD;
    lifecycle.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Continuous open communication with objective data derived directly from ongoing activities and the evolving product&#xD;
    configurations are mandatory in any project. These project snapshots provide the basis for management's attention.&#xD;
    While the period may vary, the forcing function needs to capture the project history.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note that Status Assessments are different from milestone reviews.&#xD;
&lt;/p>&lt;!--EndFragment--></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fUIjE1MBHVHH42a_5lghUg" name="user_support_specs,_AY_TEeJmEeGhW_zi4ZlG6w" guid="-fUIjE1MBHVHH42a_5lghUg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-quOuRzlXR_E-EwakIZ4YCg" name="requirements_attributes,_AZCWYeJmEeGhW_zi4ZlG6w" guid="-quOuRzlXR_E-EwakIZ4YCg">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RggCQ5DBLPH5DThNGQB3FQ" name="requirements_traceability,_AZFZseJmEeGhW_zi4ZlG6w" guid="-RggCQ5DBLPH5DThNGQB3FQ">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iIAuRO38Jk4ZAS5JFzx4KQ" name="system_wide_requirements,_AZNVgeJmEeGhW_zi4ZlG6w" guid="-iIAuRO38Jk4ZAS5JFzx4KQ">
    <keyConsiderations>&lt;ul>&#xD;
    &lt;li>&#xD;
        When you document system-wide requirements, ensure that the needs of all of the stakeholders are represented. In&#xD;
        particular, include the needs of those who are responsible for maintaining or supporting the system after it is&#xD;
        delivered.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Typically, there are some overlaps and gray areas between system-wide requirements and other requirements work&#xD;
        products. For example, the authorization behavior of a system can be specified as use cases or as statements within&#xD;
        system-wide requirements. The overall driving need is that no important requirements are missed or duplicated, and&#xD;
        that there is an agreed upon approach for capturing and processing every type of requirement.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements originate from many places. Documenting the source of the requirement is particularly&#xD;
        important when you separate externally mandated requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Requirements are often thought of as &quot;Qualitative&quot; (specifying a quality or desirable characteristic) versus&#xD;
        &quot;Quantitative&quot; (specifying a quantity). Qualitative requirements can sometimes be elaborated into quantitative&#xD;
        requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A good quality requirement is one that you can verify, either through testing or some other objective evaluation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        You must evaluate system-wide requirements for cost, schedule impact, and level of contribution to business goals.&#xD;
        Based on your evaluation, the system-wide requirements should be iteratively challenged, defended, and amended.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JbMxAQG1mfOp1znztuyevg" name="actor,_AZUqQeJmEeGhW_zi4ZlG6w" guid="-JbMxAQG1mfOp1znztuyevg">
    <keyConsiderations>&lt;p>&#xD;
    This&amp;nbsp;artifact concentrates on the classes of person and other systems that interact with the system under&#xD;
    consideration. Not every role in an organization becomes an actor.&amp;nbsp;However, work products that describe&#xD;
    organizational roles may be useful sources for coming up with actors.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Actors represent different types of users. An actor is anyone or anything that exchanges data with the system. An actor&#xD;
    can be a user, external hardware, or another system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The difference between an actor and an individual system user is that an actor represents a particular class of users,&#xD;
    rather than an actual user.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Several different individual users can play the same role, which means that they can be represented by the same, single&#xD;
    actor. In that case, each individual user constitutes an instance of the actor.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>However,&#xD;
    in some situations, only one person plays the role modeled by an actor. For example, there may be only one individual&#xD;
    in the role of system administrator for a rather small system.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0pt&quot;>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>The&#xD;
    same user can also act as several actors (that is, the same person can take on different roles).&lt;/span>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-h8LIf6K-Q5xxGYDWQho2kw" name="stakeholder_request,_AZ7HMeJmEeGhW_zi4ZlG6w" guid="-h8LIf6K-Q5xxGYDWQho2kw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gdECurrc8AwyWLweTfpzDQ" name="it_services_strategy,_AaH7geJmEeGhW_zi4ZlG6w" guid="-gdECurrc8AwyWLweTfpzDQ">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xvGCmIrUCcdN-0d_YFwEYg" name="software_dist_plan,_AaMM8eJmEeGhW_zi4ZlG6w" guid="-xvGCmIrUCcdN-0d_YFwEYg">
    <keyConsiderations xsi:nil="true"/>
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Kasnkxb_a9Uc4m9-XUcFQQ" name="component_model,_AaP3UeJmEeGhW_zi4ZlG6w" guid="-Kasnkxb_a9Uc4m9-XUcFQQ">
    <keyConsiderations>&lt;p>&#xD;
    Points to consider when deciding whether to use a Component Model:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A Component Model is useful when you must design the system for multiple target environments, with separate design&#xD;
        architectures. The Component Model is an abstraction, or a generalization, of the system design. It omits most of&#xD;
        the details of the design in order to provide an overview of the system's functionality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Component Model provides value when the design is complex, such that new team members need a simplified,&#xD;
        abstracted model to understand it. A well-defined architecture can serve the same purpose.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Balance the extra work required to ensure that the component and design models remain consistent against the&#xD;
        benefit of having a view of the system that represents only the most important details of how the system works. It&#xD;
        can be very costly to maintain a high degree of fidelity between the Component Model and the system design. A less&#xD;
        ambitious approach might be to maintain the Component Model with only the most important components and the key&#xD;
        abstractions in the design. As the complexity of the Component Model increases, so does the cost to maintain it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Once you no longer maintain the Component Model, its value decays rapidly. At some point, it no longer accurately&#xD;
        reflects the current functional design of the system. Deciding to no longer maintain the Component Model may be&#xD;
        appropriate, as it may have served its purpose, but the decision should be a conscious one.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component models tend to be useful in companies where systems live for decades, or where there are many variants of the&#xD;
    system.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To ensure the successful development of a component model on a project, your team should:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Create a stable and coherent structure&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Focus on the right levels of abstraction&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Develop relationship and interaction diagrams in parallel&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Select architecturally significant requirements as inputs to the Component Model&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plan how your team will leverage the Component Model throughout the project lifecycle&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The component model describes the structure of a system in terms of its software components with their&#xD;
    responsibilities, interfaces, relationships, and the way they collaborate to deliver the required functionality. The&#xD;
    component model is the main artifact documenting the functional view of the architecture and serves as an abstraction&#xD;
    of the design. Components identified may be decomposed into further component models before they complete the&#xD;
    specification required for detailed design.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Component models help define and document:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The structure of the system&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The recurring interactions and dependencies between sets of components&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The components present within an enterprise, each of which may be made up of smaller components.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component models are documented at 2 levels:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The logical level - focuses on specifying the components' responsibilities and characteristics required to deliver&#xD;
        the requirements. These specifications are technology and product neutral.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The physical level -focuses on how to implement the components to meet the previously established specifications.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    You may transform logical components into physical components via custom development, the purchase of products, or the&#xD;
    reuse of assets.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important to maintain a separation between logical and physical components on larger projects. However,&#xD;
    smaller or less complex projects may evolve a single logical component model into a physical model, and end up with&#xD;
    only a physical model.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Examples of components at the logical level are a 'Message Bus' or a 'Customer Relationship Manager' component.&#xD;
    Components at the physical level that implement these logical components might be 'IBM WebSphere Message Broker' or&#xD;
    'Siebel Contact Center.'&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oPJURypeP1-3FSevaHp4PA" name="component_specification,_AaUIweJmEeGhW_zi4ZlG6w" guid="-oPJURypeP1-3FSevaHp4PA">
    <keyConsiderations>&lt;p>&#xD;
    Points to consider when deciding whether to use a Component Specification:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The Component Specification provides value when the architecture is complex, such that new team members need a&#xD;
        simplified, abstracted model to understand it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The extra work required to ensure that the Component Specification and Executable Architecture remain consistent&#xD;
        must be balanced against the benefit of having a view of the system that represents only the most important details&#xD;
        of how the system works. It can be very costly to maintain a high degree of fidelity between the Component&#xD;
        Specification and Executable Architecture. As the complexity of the Component Specification increases, so does the&#xD;
        cost to maintain it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Once you no longer maintain the Component Specification, its value decays rapidly. At some point, it will no longer&#xD;
        accurately reflect the Executable Architecture. Deciding to no longer maintain the Component Specification may be&#xD;
        appropriate (it may have served its purpose), but the decision should be a conscious one.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component Specifications tend to be useful in companies where systems live for decades, or where there are many&#xD;
    variants of the system.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact specifies the details of a component identified in the Component Model. The specification shows the&#xD;
    interfaces offered and used by the component, identifies where business rules are placed, and details the operations&#xD;
    and their signatures for each interface.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Component Interfaces&lt;/strong> - An interface specifies one or more operation signatures and is both offered and&#xD;
    used by a component. Offering an interface means the component makes the interface available for other components to&#xD;
    use.&amp;nbsp;&amp;nbsp;Each interface provides a unique and well-defined set of operations. Hiding the structure of a&#xD;
    component and its data behind an interface allows that data to be changed without affecting how the interface is&#xD;
    used.&amp;nbsp; The actual composition of that data may change, but the interface that provides access to that data is&#xD;
    fixed. Interfaces also describe the state of a component.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Business Rules&lt;/strong> - Business Rules dictate the behavior of a system, and the component specification&#xD;
    defines how the system implements the business rules.&amp;nbsp; For example, a business rule may state that Internet&#xD;
    transactions for an on-line order can not exceed $1000 for a given account. A component that manages account&#xD;
    transactions may define an on-line transactions interface that implements this business rule.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Operations&lt;/strong> - Fully specified Component Specifications assign operations and operation signatures to&#xD;
    the interfaces and may define pre- and post-conditions on the operations.&amp;nbsp; Pre- and post-conditions specify the&#xD;
    effect of an operation without prescribing an algorithm or implementation.&amp;nbsp;A post-condition specifies the effect&#xD;
    of the operation on the components data or state.&amp;nbsp;A pre-condition is the condition under which the operation&#xD;
    guarantees that the post-condition is true.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mwIIURJl1Tu-sj27j-wz7w" name="architectural_decisions,_AaYaMeJmEeGhW_zi4ZlG6w" guid="-mwIIURJl1Tu-sj27j-wz7w">
    <keyConsiderations>&lt;p>&#xD;
    Some important considerations for making and implementing architectural decisions:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Make sure the process for making decisions has the right level of sponsorship necessary to enforce those decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Make architecturally significant decisions early and be sure to validate high risk decisions using an executable&#xD;
        architecture&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Review and update architectural decisions as development progresses and update this artifact so it reflects any&#xD;
        changes to your decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It is not necessary to document every minute decision you make when developing the architecture; focus on those&#xD;
        that are controversial or are based on reasoning that is not obvious&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact documents key architectural decisions and the rationale behind those decisions.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UjQUyesK7tVU-Jb6blih0g" name="architecture_overview,_AacroeJmEeGhW_zi4ZlG6w" guid="-UjQUyesK7tVU-Jb6blih0g">
    <keyConsiderations>As communication is its main purpose, it is more important for the description of the architecture to be simple, brief,&#xD;
clear, and understandable than comprehensive or accurate in all details.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides an overview of the main conceptual elements and relationships of an architecture, which might&#xD;
    include candidate subsystems, components, nodes, connections, data stores, users and external systems. As such, it&#xD;
    represents the governing ideas and candidate building blocks of the architecture.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dJ6aVhv8GDpfZk1W8Ye6gw" name="operational_model,_AagWAeJmEeGhW_zi4ZlG6w" guid="-dJ6aVhv8GDpfZk1W8Ye6gw">
    <keyConsiderations>&lt;h5>&#xD;
    Levels of this artifact&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    The artifact can be a large and complex work product.&amp;nbsp; It is therefore important to understand how it may be best&#xD;
    developed and presented, depending on the particular context.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In order to reduce the complexity of the development process, the various development techniques available take&#xD;
    advantage of a number of well-defined views and levels of completeness.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Therefore this artifact can be refined and elaborated in various ways depending on the nature of the project life cycle&#xD;
    and the development techniques used.&amp;nbsp; Useful intermediate stages of development have been defined for both the&#xD;
    &lt;strong>logical&lt;/strong> and &lt;strong>physical&lt;/strong> levels of this artifact as described within this artifact.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Degree of completeness (elaboration) and quality (refinement)&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Individual circumstances will dictate the degree of completeness (including omission) of each level of this&#xD;
    artifact.&amp;nbsp; Decisions on level of detail, focus and completeness will be based on many factors, such as&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Audience (e.g. business people, IT Architects, or Developers)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose (is it to be fully specified and configured or a generalized reference pattern?)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Completeness (is it early in a project's life, or a finished artifact?)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The degree of completeness reached (or required) will also be dependent on the development process (e.g. waterfall,&#xD;
    iterative, etc.).&amp;nbsp; The levels of this artifact elaborate through degrees of completeness towards their completed&#xD;
    states while remaining synchronized and consistent with one another at each major project &quot;milestone&quot;.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Varying depth of detail&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    As well describing the operational aspect of a complete IT system, it is often helpful to develop this artifact showing&#xD;
    greater detail for particular parts of the system.&amp;nbsp; For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        This artifact may model a whole IT system as one or two nodes on the overall model, but a further more detailed&#xD;
        representation of parts of the IT system in a particular location may also be constructed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This artifact may model a single part of an IT system in detail without modeling the whole IT system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This artifact may include the same &quot;recurring pattern&quot; of nodes and/or connections, and, in this case, a separate&#xD;
        artifact may detail the recurring pattern and be referenced by the main artifact.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h5>&#xD;
    Cross-cutting viewpoints&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    This artifact and the logical and physical levels of this artifact may be the focus of a particular viewpoint, at any&#xD;
    degree of elaboration and refinement, to address the concerns of a particular stakeholder. These cross-cutting&#xD;
    viewpoints overlap with one another.&amp;nbsp; For example, views may be constructed on this artifact for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Application&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Technical&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Capacity&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Availability and Recovery&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Security and Privacy Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Operability and Operations Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software Distribution and Installation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Distributed Data Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem Identification and Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        End User Support/Helpdesk&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Networking&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Accessibility&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        National Language Support&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Financial proprietary&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Archiving&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Such filtering does not generally change the elements in the artifact rather it simply enables a clearer focus on some&#xD;
    particular part of it.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Please refer to &quot;An Introduction to the IBM Views and Viewpoints Framework for IT Systems&quot; Whitepaper for further&#xD;
    details on the views and viewpoints framework including the relationship between base and cross-cutting views.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Linkages to other work products&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    As well as a linkage via Deployment Units with the functional aspect of architecture as embodied in the Component&#xD;
    Model, this artifact has influences and/or is strongly interdependent on other areas that cover the design of the&#xD;
    infrastructure that will implement the operational aspect of architecture. For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Network Design: affects the application design, middleware selection, component placement, security and privacy,&#xD;
        systems management and overall operational system control.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Platform Design; the detailed design and configuration of the platforms that will implement the nodes.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Storage Design; the detailed design and configuration of storage which may be shared across multiple platforms.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Site &amp;amp; Facilities Design; the detailed design and configuration of the site and facilities in the locations in&#xD;
        which nodes (implemented by platforms) are placed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems Management design; through its definition of how the IT system is spread out over locations and what&#xD;
        systems management components and nodes are needed at each location.&amp;nbsp; Selection of a systems management style&#xD;
        is an important decision, which determines: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                The cost of operations management&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The cost of software distribution&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The complexity of system management tooling&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Potential security and performance of the IT system (ability to satisfy the service level requirements)&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Existing or planned enterprise-wide IT infrastructure initiatives on which the target system will be&#xD;
        implemented.&amp;nbsp; For example, enterprise wide middleware decisions may well move function, which would otherwise&#xD;
        be duplicated across multiple applications, into a set of shared services, which are usually purchased or part of&#xD;
        an enterprise wide development effort.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes the operational distribution of a system's components (which may be grouped into deployment&#xD;
    units) onto nodes, the placement of nodes and users across locations, the connections between nodes necessary to&#xD;
    support the required interactions between components, in order to achieve the system's functional and non-functional&#xD;
    requirements within the constraints of technology, skills and budget.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Operational Modeling Terminology&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    This artifact's (and that of its contained artifacts) terminology is defined within the System Description Standard R3&#xD;
    Semantic Specification (see Guidance for link) which includes definitions for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Actors (and workers) - the roles a user or an external system play with respect to the target system&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Locations - a geographical area or position.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Borders - representing the existing connection between two locations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Components - modular units of functionality, which make this functionality available through an interface.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Deployment Units - a grouping of facets of a component that have similar characteristics.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connectors - enable the exchange of messages (interactions) between resource containers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interactions - identify the messages exchanged between one or two resource containers in the context of a&#xD;
        collaboration, and the sequencing of these messages via their associated send/receive events.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Nodes - a collection of components fulfilling a specific responsibility with a certain quality of service within&#xD;
        the target system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connections - supports the required connectivity between connectable model elements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Zones - an aggregation of a number of model elements with a common (sub-) set of values for a particular&#xD;
        non-functional requirement and/or non-functional characteristic.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Boundaries - associated with a change in value for a particular non-functional requirement and/or characteristic&#xD;
        between two model elements.&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Depending on the development approach adopted and/or the context, it can be very helpful to create levels of this&#xD;
    artifact.&amp;nbsp; The two basic levels of this artifact are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Logical&lt;/strong>:&amp;nbsp; This level describes the characteristics and capabilities of the operational aspect&#xD;
        of the system architecture in a &lt;strong>technology independent and product neutral&lt;/strong> manner.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Physical&lt;/strong>:&amp;nbsp; This level describes characteristics and capabilities of the operational aspect of&#xD;
        the system architecture in a &lt;strong>technology and product dependent&lt;/strong> manner.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Both levels of this artifact may be further described at three different sub-levels relating to the degree to which the&#xD;
    level has been sized:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Unsized&lt;/strong> (or unranged) - the technology and products are specified to support the components&#xD;
        deployed but not sized and without detailing how the system will achieve the service level characteristics.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Ranged&lt;/strong> - the technology and products are specified to support a bounded range of requirements for&#xD;
        a defined range of circumstances.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Sized&lt;/strong> - the technology and products are specified and sized to support the components deployed and&#xD;
        details how the system will achieve the service level characteristics.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HHg7nmADQgAXNoZbUWGZUw" name="developer,_AbBTYeJmEeGhW_zi4ZlG6w" guid="-HHg7nmADQgAXNoZbUWGZUw">
    <refinedDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;Implementer&quot; name=&quot;Implementer&quot;>&lt;/a>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The implementer role is responsible for developing and testing components, in accordance with the project's adopted&#xD;
    standards, for integration into larger subsystems. When test components, such as drivers or stubs, must be created to&#xD;
    support testing, the implementer is also responsible for developing and testing the test components and corresponding&#xD;
    subsystems.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Further Reading&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    See &lt;i>Code Complete - A Practical Handbook of Software Construction&lt;/i> &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.tech.common.base/guidances/supportingmaterials/references.tech_6CCF393.html#MCO93&quot;&#xD;
    guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>[MCO93]&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-U6RSkpwWdlLCSh0YvIA6ig" name="tester,_AbIoIeJmEeGhW_zi4ZlG6w" guid="-U6RSkpwWdlLCSh0YvIA6ig">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wToIDAAbpJbVfJlrVGqvYA" name="test_log,_Aba8AeJmEeGhW_zi4ZlG6w" guid="-wToIDAAbpJbVfJlrVGqvYA">
    <refinedDescription>This artifact provides a detailed, typically time-based record that both verifies that a set of tests were run, and&#xD;
provides information that relates to the success of those tests. The focus is typically on providing an accurate audit&#xD;
trail, which enables you to undertake a post-run diagnosis of failures. This raw data is subsequently analyzed to determine&#xD;
the results of an aspect of the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VrmB1PyGxIvy0euDtbpjGQ" name="build,_AbtP4eJmEeGhW_zi4ZlG6w" guid="-VrmB1PyGxIvy0euDtbpjGQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7WmMWzezDxQmyWAw0unSUg" name="code_analysis_guidelines,_AbxhUeJmEeGhW_zi4ZlG6w" guid="-7WmMWzezDxQmyWAw0unSUg">
    <keyConsiderations>The most important thing about coding guidelines is to have them. Everyone has their stylistic preferences, but a enforcing&#xD;
a single style greatly improves readability and maintainability. Avoid ignoring coding guidelines just because it's&#xD;
difficult to come to agreement. Choose a set of guidelines get coding.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Code analysis guidelines includes information for the static and runtime evaluation of the implementation (code).&#xD;
    Static guidelines focus on code that is not currently running. Dynamic guidelines focus on evaluating the behavior of&#xD;
    the software as the code is executing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Static analysis includes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coding guidelines that give the implementation a familiar look and feel to everyone on the team, and make it easier&#xD;
        to find code blocks and commonly used areas of code (methods, case statements, etc). These guidelines makes the&#xD;
        code more maintainable and more efficient to produce.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Code dependency that evaluates how different implementation modules depend upon each other. This can improve&#xD;
        coupling and cohesion at the implementation level, for example.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Code complexity that helps developers judge if the code has become too complex to be maintained efficiently.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    See the definition of &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.design_driven_implementation.base-ibm/guidances/termdefinitions/runtime_analysis_E9330E42.html&quot; guid=&quot;_iWLT0H9mEd2zS8U3DVRSmQ&quot;>runtime analysis&lt;/a>&amp;nbsp;for more information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Automated tools and techniques can cover more areas of static and runtime analysis. Use this work product to list all&#xD;
    the areas that need to be examined in the implementation and the tools used to examine the implementation.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zZ5_oGKW_C2pR-A5n1dEGw" name="developer_test,_Ab1LseJmEeGhW_zi4ZlG6w" guid="-zZ5_oGKW_C2pR-A5n1dEGw">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qRHcHYNRF7ZaPq5qaboj5Q" name="implementation,_Ab5dIeJmEeGhW_zi4ZlG6w" guid="-qRHcHYNRF7ZaPq5qaboj5Q">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--J8VAOxVI-4i30LFDd_YcA" name="design,_Ab9ukeJmEeGhW_zi4ZlG6w" guid="--J8VAOxVI-4i30LFDd_YcA">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WtDsZ1xPIjofPz0mdipaNQ" name="architect,_AeI40eJmEeGhW_zi4ZlG6w" guid="-WtDsZ1xPIjofPz0mdipaNQ">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fnJUC0_CNeAahOduh9yzJw" name="project_manager,_AeLVEeJmEeGhW_zi4ZlG6w" guid="-fnJUC0_CNeAahOduh9yzJw">
    <keyConsiderations>In the context of portfolio management, this role participates in the decision of how to allocate resources supply&#xD;
to&amp;nbsp;work on portfolio components demand.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-C_G9Ee0pcuKebSWdBZT_aQ" name="storyboard,_AeTQ4eJmEeGhW_zi4ZlG6w" guid="-C_G9Ee0pcuKebSWdBZT_aQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AHr9SGbx0kyYsfB6LsvlJQ" name="it_services_strategy,_AealoeJmEeGhW_zi4ZlG6w" guid="-AHr9SGbx0kyYsfB6LsvlJQ">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-reIm423SIQPfMlBG4wRvug" name="software_dist_plan,_Aedo8eJmEeGhW_zi4ZlG6w" guid="-reIm423SIQPfMlBG4wRvug">
    <keyConsiderations xsi:nil="true"/>
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-urQkrl0sfij9kDu2Rn6NUQ" name="component_model,_AegsQeJmEeGhW_zi4ZlG6w" guid="-urQkrl0sfij9kDu2Rn6NUQ">
    <keyConsiderations>&lt;p>&#xD;
    Points to consider when deciding whether to use a Component Model:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A Component Model is useful when you must design the system for multiple target environments, with separate design&#xD;
        architectures. The Component Model is an abstraction, or a generalization, of the system design. It omits most of&#xD;
        the details of the design in order to provide an overview of the system's functionality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Component Model provides value when the design is complex, such that new team members need a simplified,&#xD;
        abstracted model to understand it. A well-defined architecture can serve the same purpose.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Balance the extra work required to ensure that the component and design models remain consistent against the&#xD;
        benefit of having a view of the system that represents only the most important details of how the system works. It&#xD;
        can be very costly to maintain a high degree of fidelity between the Component Model and the system design. A less&#xD;
        ambitious approach might be to maintain the Component Model with only the most important components and the key&#xD;
        abstractions in the design. As the complexity of the Component Model increases, so does the cost to maintain it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Once you no longer maintain the Component Model, its value decays rapidly. At some point, it no longer accurately&#xD;
        reflects the current functional design of the system. Deciding to no longer maintain the Component Model may be&#xD;
        appropriate, as it may have served its purpose, but the decision should be a conscious one.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component models tend to be useful in companies where systems live for decades, or where there are many variants of the&#xD;
    system.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To ensure the successful development of a component model on a project, your team should:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Create a stable and coherent structure&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Focus on the right levels of abstraction&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Develop relationship and interaction diagrams in parallel&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Select architecturally significant requirements as inputs to the Component Model&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plan how your team will leverage the Component Model throughout the project lifecycle&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The component model describes the structure of a system in terms of its software components with their&#xD;
    responsibilities, interfaces, relationships, and the way they collaborate to deliver the required functionality. The&#xD;
    component model is the main artifact documenting the functional view of the architecture and serves as an abstraction&#xD;
    of the design. Components identified may be decomposed into further component models before they complete the&#xD;
    specification required for detailed design.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Component models help define and document:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The structure of the system&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The recurring interactions and dependencies between sets of components&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The components present within an enterprise, each of which may be made up of smaller components.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component models are documented at 2 levels:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The logical level - focuses on specifying the components' responsibilities and characteristics required to deliver&#xD;
        the requirements. These specifications are technology and product neutral.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The physical level -focuses on how to implement the components to meet the previously established specifications.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    You may transform logical components into physical components via custom development, the purchase of products, or the&#xD;
    reuse of assets.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important to maintain a separation between logical and physical components on larger projects. However,&#xD;
    smaller or less complex projects may evolve a single logical component model into a physical model, and end up with&#xD;
    only a physical model.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Examples of components at the logical level are a 'Message Bus' or a 'Customer Relationship Manager' component.&#xD;
    Components at the physical level that implement these logical components might be 'IBM WebSphere Message Broker' or&#xD;
    'Siebel Contact Center.'&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QAp-VB5I8ra8jtEp2uwMPQ" name="component_specification,_AejvkeJmEeGhW_zi4ZlG6w" guid="-QAp-VB5I8ra8jtEp2uwMPQ">
    <keyConsiderations>&lt;p>&#xD;
    Points to consider when deciding whether to use a Component Specification:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The Component Specification provides value when the architecture is complex, such that new team members need a&#xD;
        simplified, abstracted model to understand it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The extra work required to ensure that the Component Specification and Executable Architecture remain consistent&#xD;
        must be balanced against the benefit of having a view of the system that represents only the most important details&#xD;
        of how the system works. It can be very costly to maintain a high degree of fidelity between the Component&#xD;
        Specification and Executable Architecture. As the complexity of the Component Specification increases, so does the&#xD;
        cost to maintain it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Once you no longer maintain the Component Specification, its value decays rapidly. At some point, it will no longer&#xD;
        accurately reflect the Executable Architecture. Deciding to no longer maintain the Component Specification may be&#xD;
        appropriate (it may have served its purpose), but the decision should be a conscious one.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component Specifications tend to be useful in companies where systems live for decades, or where there are many&#xD;
    variants of the system.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact specifies the details of a component identified in the Component Model. The specification shows the&#xD;
    interfaces offered and used by the component, identifies where business rules are placed, and details the operations&#xD;
    and their signatures for each interface.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Component Interfaces&lt;/strong> - An interface specifies one or more operation signatures and is both offered and&#xD;
    used by a component. Offering an interface means the component makes the interface available for other components to&#xD;
    use.&amp;nbsp;&amp;nbsp;Each interface provides a unique and well-defined set of operations. Hiding the structure of a&#xD;
    component and its data behind an interface allows that data to be changed without affecting how the interface is&#xD;
    used.&amp;nbsp; The actual composition of that data may change, but the interface that provides access to that data is&#xD;
    fixed. Interfaces also describe the state of a component.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Business Rules&lt;/strong> - Business Rules dictate the behavior of a system, and the component specification&#xD;
    defines how the system implements the business rules.&amp;nbsp; For example, a business rule may state that Internet&#xD;
    transactions for an on-line order can not exceed $1000 for a given account. A component that manages account&#xD;
    transactions may define an on-line transactions interface that implements this business rule.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Operations&lt;/strong> - Fully specified Component Specifications assign operations and operation signatures to&#xD;
    the interfaces and may define pre- and post-conditions on the operations.&amp;nbsp; Pre- and post-conditions specify the&#xD;
    effect of an operation without prescribing an algorithm or implementation.&amp;nbsp;A post-condition specifies the effect&#xD;
    of the operation on the components data or state.&amp;nbsp;A pre-condition is the condition under which the operation&#xD;
    guarantees that the post-condition is true.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zRuwM7ialswGSFaalrfx-g" name="architectural_decisions,_Aemy4eJmEeGhW_zi4ZlG6w" guid="-zRuwM7ialswGSFaalrfx-g">
    <keyConsiderations>&lt;p>&#xD;
    Some important considerations for making and implementing architectural decisions:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Make sure the process for making decisions has the right level of sponsorship necessary to enforce those decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Make architecturally significant decisions early and be sure to validate high risk decisions using an executable&#xD;
        architecture&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Review and update architectural decisions as development progresses and update this artifact so it reflects any&#xD;
        changes to your decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It is not necessary to document every minute decision you make when developing the architecture; focus on those&#xD;
        that are controversial or are based on reasoning that is not obvious&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact documents key architectural decisions and the rationale behind those decisions.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-R6DtAWwhsCb18HmICjIGIQ" name="architecture_overview,_Aep2MeJmEeGhW_zi4ZlG6w" guid="-R6DtAWwhsCb18HmICjIGIQ">
    <keyConsiderations>As communication is its main purpose, it is more important for the description of the architecture to be simple, brief,&#xD;
clear, and understandable than comprehensive or accurate in all details.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides an overview of the main conceptual elements and relationships of an architecture, which might&#xD;
    include candidate subsystems, components, nodes, connections, data stores, users and external systems. As such, it&#xD;
    represents the governing ideas and candidate building blocks of the architecture.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1pxMdrPUVCUgXDGelLK2MA" name="operational_model,_Aes5geJmEeGhW_zi4ZlG6w" guid="-1pxMdrPUVCUgXDGelLK2MA">
    <keyConsiderations>&lt;h5>&#xD;
    Levels of this artifact&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    The artifact can be a large and complex work product.&amp;nbsp; It is therefore important to understand how it may be best&#xD;
    developed and presented, depending on the particular context.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In order to reduce the complexity of the development process, the various development techniques available take&#xD;
    advantage of a number of well-defined views and levels of completeness.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Therefore this artifact can be refined and elaborated in various ways depending on the nature of the project life cycle&#xD;
    and the development techniques used.&amp;nbsp; Useful intermediate stages of development have been defined for both the&#xD;
    &lt;strong>logical&lt;/strong> and &lt;strong>physical&lt;/strong> levels of this artifact as described within this artifact.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Degree of completeness (elaboration) and quality (refinement)&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Individual circumstances will dictate the degree of completeness (including omission) of each level of this&#xD;
    artifact.&amp;nbsp; Decisions on level of detail, focus and completeness will be based on many factors, such as&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Audience (e.g. business people, IT Architects, or Developers)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose (is it to be fully specified and configured or a generalized reference pattern?)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Completeness (is it early in a project's life, or a finished artifact?)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The degree of completeness reached (or required) will also be dependent on the development process (e.g. waterfall,&#xD;
    iterative, etc.).&amp;nbsp; The levels of this artifact elaborate through degrees of completeness towards their completed&#xD;
    states while remaining synchronized and consistent with one another at each major project &quot;milestone&quot;.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Varying depth of detail&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    As well describing the operational aspect of a complete IT system, it is often helpful to develop this artifact showing&#xD;
    greater detail for particular parts of the system.&amp;nbsp; For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        This artifact may model a whole IT system as one or two nodes on the overall model, but a further more detailed&#xD;
        representation of parts of the IT system in a particular location may also be constructed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This artifact may model a single part of an IT system in detail without modeling the whole IT system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This artifact may include the same &quot;recurring pattern&quot; of nodes and/or connections, and, in this case, a separate&#xD;
        artifact may detail the recurring pattern and be referenced by the main artifact.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h5>&#xD;
    Cross-cutting viewpoints&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    This artifact and the logical and physical levels of this artifact may be the focus of a particular viewpoint, at any&#xD;
    degree of elaboration and refinement, to address the concerns of a particular stakeholder. These cross-cutting&#xD;
    viewpoints overlap with one another.&amp;nbsp; For example, views may be constructed on this artifact for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Application&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Technical&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Capacity&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Availability and Recovery&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Security and Privacy Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Operability and Operations Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software Distribution and Installation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Distributed Data Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem Identification and Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        End User Support/Helpdesk&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Networking&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Accessibility&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        National Language Support&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Financial proprietary&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Archiving&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Such filtering does not generally change the elements in the artifact rather it simply enables a clearer focus on some&#xD;
    particular part of it.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Please refer to &quot;An Introduction to the IBM Views and Viewpoints Framework for IT Systems&quot; Whitepaper for further&#xD;
    details on the views and viewpoints framework including the relationship between base and cross-cutting views.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Linkages to other work products&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    As well as a linkage via Deployment Units with the functional aspect of architecture as embodied in the Component&#xD;
    Model, this artifact has influences and/or is strongly interdependent on other areas that cover the design of the&#xD;
    infrastructure that will implement the operational aspect of architecture. For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Network Design: affects the application design, middleware selection, component placement, security and privacy,&#xD;
        systems management and overall operational system control.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Platform Design; the detailed design and configuration of the platforms that will implement the nodes.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Storage Design; the detailed design and configuration of storage which may be shared across multiple platforms.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Site &amp;amp; Facilities Design; the detailed design and configuration of the site and facilities in the locations in&#xD;
        which nodes (implemented by platforms) are placed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems Management design; through its definition of how the IT system is spread out over locations and what&#xD;
        systems management components and nodes are needed at each location.&amp;nbsp; Selection of a systems management style&#xD;
        is an important decision, which determines: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                The cost of operations management&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The cost of software distribution&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The complexity of system management tooling&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Potential security and performance of the IT system (ability to satisfy the service level requirements)&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Existing or planned enterprise-wide IT infrastructure initiatives on which the target system will be&#xD;
        implemented.&amp;nbsp; For example, enterprise wide middleware decisions may well move function, which would otherwise&#xD;
        be duplicated across multiple applications, into a set of shared services, which are usually purchased or part of&#xD;
        an enterprise wide development effort.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes the operational distribution of a system's components (which may be grouped into deployment&#xD;
    units) onto nodes, the placement of nodes and users across locations, the connections between nodes necessary to&#xD;
    support the required interactions between components, in order to achieve the system's functional and non-functional&#xD;
    requirements within the constraints of technology, skills and budget.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Operational Modeling Terminology&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    This artifact's (and that of its contained artifacts) terminology is defined within the System Description Standard R3&#xD;
    Semantic Specification (see Guidance for link) which includes definitions for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Actors (and workers) - the roles a user or an external system play with respect to the target system&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Locations - a geographical area or position.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Borders - representing the existing connection between two locations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Components - modular units of functionality, which make this functionality available through an interface.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Deployment Units - a grouping of facets of a component that have similar characteristics.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connectors - enable the exchange of messages (interactions) between resource containers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interactions - identify the messages exchanged between one or two resource containers in the context of a&#xD;
        collaboration, and the sequencing of these messages via their associated send/receive events.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Nodes - a collection of components fulfilling a specific responsibility with a certain quality of service within&#xD;
        the target system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connections - supports the required connectivity between connectable model elements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Zones - an aggregation of a number of model elements with a common (sub-) set of values for a particular&#xD;
        non-functional requirement and/or non-functional characteristic.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Boundaries - associated with a change in value for a particular non-functional requirement and/or characteristic&#xD;
        between two model elements.&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Depending on the development approach adopted and/or the context, it can be very helpful to create levels of this&#xD;
    artifact.&amp;nbsp; The two basic levels of this artifact are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Logical&lt;/strong>:&amp;nbsp; This level describes the characteristics and capabilities of the operational aspect&#xD;
        of the system architecture in a &lt;strong>technology independent and product neutral&lt;/strong> manner.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Physical&lt;/strong>:&amp;nbsp; This level describes characteristics and capabilities of the operational aspect of&#xD;
        the system architecture in a &lt;strong>technology and product dependent&lt;/strong> manner.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Both levels of this artifact may be further described at three different sub-levels relating to the degree to which the&#xD;
    level has been sized:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Unsized&lt;/strong> (or unranged) - the technology and products are specified to support the components&#xD;
        deployed but not sized and without detailing how the system will achieve the service level characteristics.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Ranged&lt;/strong> - the technology and products are specified to support a bounded range of requirements for&#xD;
        a defined range of circumstances.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Sized&lt;/strong> - the technology and products are specified and sized to support the components deployed and&#xD;
        details how the system will achieve the service level characteristics.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bGgbZ1mb-CXetsc7sq6erw" name="stakeholder_request,_AfI-YeJmEeGhW_zi4ZlG6w" guid="-bGgbZ1mb-CXetsc7sq6erw">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uLaJ6kAoowEqSLYkcpAkEw" name="user_support_specs,_AfYO8eJmEeGhW_zi4ZlG6w" guid="-uLaJ6kAoowEqSLYkcpAkEw">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HLTt9Y56_tGWHqScOZ7flA" name="system_wide_requirements,_Afh_8eJmEeGhW_zi4ZlG6w" guid="-HLTt9Y56_tGWHqScOZ7flA">
    <keyConsiderations>&lt;ul>&#xD;
    &lt;li>&#xD;
        When you document system-wide requirements, ensure that the needs of all of the stakeholders are represented. In&#xD;
        particular, include the needs of those who are responsible for maintaining or supporting the system after it is&#xD;
        delivered.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Typically, there are some overlaps and gray areas between system-wide requirements and other requirements work&#xD;
        products. For example, the authorization behavior of a system can be specified as use cases or as statements within&#xD;
        system-wide requirements. The overall driving need is that no important requirements are missed or duplicated, and&#xD;
        that there is an agreed upon approach for capturing and processing every type of requirement.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements originate from many places. Documenting the source of the requirement is particularly&#xD;
        important when you separate externally mandated requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Requirements are often thought of as &quot;Qualitative&quot; (specifying a quality or desirable characteristic) versus&#xD;
        &quot;Quantitative&quot; (specifying a quantity). Qualitative requirements can sometimes be elaborated into quantitative&#xD;
        requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A good quality requirement is one that you can verify, either through testing or some other objective evaluation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        You must evaluate system-wide requirements for cost, schedule impact, and level of contribution to business goals.&#xD;
        Based on your evaluation, the system-wide requirements should be iteratively challenged, defended, and amended.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ikaULJls5WhuAuKXtZs_xA" name="actor,_AfotoeJmEeGhW_zi4ZlG6w" guid="-ikaULJls5WhuAuKXtZs_xA">
    <keyConsiderations>&lt;p>&#xD;
    This&amp;nbsp;artifact concentrates on the classes of person and other systems that interact with the system under&#xD;
    consideration. Not every role in an organization becomes an actor.&amp;nbsp;However, work products that describe&#xD;
    organizational roles may be useful sources for coming up with actors.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Actors represent different types of users. An actor is anyone or anything that exchanges data with the system. An actor&#xD;
    can be a user, external hardware, or another system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The difference between an actor and an individual system user is that an actor represents a particular class of users,&#xD;
    rather than an actual user.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Several different individual users can play the same role, which means that they can be represented by the same, single&#xD;
    actor. In that case, each individual user constitutes an instance of the actor.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>However,&#xD;
    in some situations, only one person plays the role modeled by an actor. For example, there may be only one individual&#xD;
    in the role of system administrator for a rather small system.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0pt&quot;>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>The&#xD;
    same user can also act as several actors (that is, the same person can take on different roles).&lt;/span>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VFEosyP4narnLiFLBjSxKA" name="iteration_plan,_AgWfUeJmEeGhW_zi4ZlG6w" guid="-VFEosyP4narnLiFLBjSxKA">
    <keyConsiderations>&lt;p>&#xD;
    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work&#xD;
    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the&#xD;
    remaining high priority work items, plus a few mid-priority ones from the Work Items List). Once work items have been&#xD;
    assigned to the iteration, the team ensures that they can complete all work, regardless of original work item&#xD;
    priorities. Deciding what to develop first on an iteration will vary across projects and iterations.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UdiQEdYcTxSXDjmzuKSIqQ" name="risk_list,_AgawwOJmEeGhW_zi4ZlG6w" guid="-UdiQEdYcTxSXDjmzuKSIqQ">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zBnk0-rxHNNvxOkV2nU9qQ" name="project_plan,_AgfpQeJmEeGhW_zi4ZlG6w" guid="-zBnk0-rxHNNvxOkV2nU9qQ">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in&#xD;
order to make sure that everybody agrees with it.&lt;p/>&lt;p>&#xD;
    Create and update the project plan in planning sessions that involve the whole team and appropriate project&#xD;
    stakeholders in order to make sure that everybody agrees with it.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Document key stakeholder agreements involving budgets, schedules, resources, and requirements.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it&#xD;
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and&#xD;
    their milestones.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect&#xD;
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of&#xD;
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the&#xD;
    project.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XmhL91hKqxfWOo2QD9PfQA" name="business_case,_AgjToeJmEeGhW_zi4ZlG6w" guid="-XmhL91hKqxfWOo2QD9PfQA">
    <refinedDescription>For a commercial software product, the Business Case should include a set of assumptions about the project and the order of&#xD;
magnitude return on investment (ROI) if those assumptions are true. For example, the ROI will be a magnitude of five if&#xD;
completed in one year, two if completed in two years, and a negative number after that. These assumptions are checked again&#xD;
at the end of the Elaboration phase, when the scope and plan are defined with more accuracy.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-t26qc3EpyHkVykV_o9q7Ww" name="issues_list,_Agm-AeJmEeGhW_zi4ZlG6w" guid="-t26qc3EpyHkVykV_o9q7Ww">
    <refinedDescription>In general, issues are items that are not being tracked through Change Management or as tasks in the Project or Iteration&#xD;
Plans, although they may derive from these.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-R8TvOgGrcVO9lXA3PO4eow" name="project_measurements,_AgqoYeJmEeGhW_zi4ZlG6w" guid="-R8TvOgGrcVO9lXA3PO4eow">
    <refinedDescription>&lt;p>&#xD;
    The format and contents of the Project Measurements&amp;nbsp;depends on the metrics selected and the technology used for&#xD;
    collection and storage. It is essentially a database of metric-value associations and allied information for their&#xD;
    collection and calculation. Its form could be as simple as a set of files manually maintained by the Project&#xD;
    Manager.&amp;nbsp; However, we recommend that the collection and storage be automated and, as far as possible, be made&#xD;
    non-intrusive.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QoAkCdE2kzMjJeNH539MzA" name="status_assessment,_AguSweJmEeGhW_zi4ZlG6w" guid="-QoAkCdE2kzMjJeNH539MzA">
    <refinedDescription>&lt;p>&#xD;
    One of the objectives of the process is to ensure that the expectations of all parties are synchronized and consistent.&#xD;
    The periodic Status Assessment provides a mechanism for managing everyone's expectations throughout the project&#xD;
    lifecycle.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Continuous open communication with objective data derived directly from ongoing activities and the evolving product&#xD;
    configurations are mandatory in any project. These project snapshots provide the basis for management's attention.&#xD;
    While the period may vary, the forcing function needs to capture the project history.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note that Status Assessments are different from milestone reviews.&#xD;
&lt;/p>&lt;!--EndFragment--></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5Q0FNo2BrxqeVSsDNNvBNw" name="developer,_Ahd5oeJmEeGhW_zi4ZlG6w" guid="-5Q0FNo2BrxqeVSsDNNvBNw">
    <refinedDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;Implementer&quot; name=&quot;Implementer&quot;>&lt;/a>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The implementer role is responsible for developing and testing components, in accordance with the project's adopted&#xD;
    standards, for integration into larger subsystems. When test components, such as drivers or stubs, must be created to&#xD;
    support testing, the implementer is also responsible for developing and testing the test components and corresponding&#xD;
    subsystems.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Further Reading&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    See &lt;i>Code Complete - A Practical Handbook of Software Construction&lt;/i> &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.tech.common.base/guidances/supportingmaterials/references.tech_6CCF393.html#MCO93&quot;&#xD;
    guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>[MCO93]&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mWAlGlicWA60qAZs7khOJA" name="tester,_AhmcgeJmEeGhW_zi4ZlG6w" guid="-mWAlGlicWA60qAZs7khOJA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Qj5YyTNZnZEaT9xB1OmplQ" name="build,_Ah27MeJmEeGhW_zi4ZlG6w" guid="-Qj5YyTNZnZEaT9xB1OmplQ">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-32AallNDcL4AIRyuuPIjrQ" name="code_analysis_guidelines,_Ah7zsOJmEeGhW_zi4ZlG6w" guid="-32AallNDcL4AIRyuuPIjrQ">
    <keyConsiderations>The most important thing about coding guidelines is to have them. Everyone has their stylistic preferences, but a enforcing&#xD;
a single style greatly improves readability and maintainability. Avoid ignoring coding guidelines just because it's&#xD;
difficult to come to agreement. Choose a set of guidelines get coding.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Code analysis guidelines includes information for the static and runtime evaluation of the implementation (code).&#xD;
    Static guidelines focus on code that is not currently running. Dynamic guidelines focus on evaluating the behavior of&#xD;
    the software as the code is executing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Static analysis includes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coding guidelines that give the implementation a familiar look and feel to everyone on the team, and make it easier&#xD;
        to find code blocks and commonly used areas of code (methods, case statements, etc). These guidelines makes the&#xD;
        code more maintainable and more efficient to produce.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Code dependency that evaluates how different implementation modules depend upon each other. This can improve&#xD;
        coupling and cohesion at the implementation level, for example.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Code complexity that helps developers judge if the code has become too complex to be maintained efficiently.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    See the definition of &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.design_driven_implementation.base-ibm/guidances/termdefinitions/runtime_analysis_E9330E42.html&quot; guid=&quot;_iWLT0H9mEd2zS8U3DVRSmQ&quot;>runtime analysis&lt;/a>&amp;nbsp;for more information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Automated tools and techniques can cover more areas of static and runtime analysis. Use this work product to list all&#xD;
    the areas that need to be examined in the implementation and the tools used to examine the implementation.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uVkFfotH52XM_cQkhCJHJg" name="developer_test,_AiAFIeJmEeGhW_zi4ZlG6w" guid="-uVkFfotH52XM_cQkhCJHJg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qaBcz1JsnnSry6NUgCo7gQ" name="implementation,_AiE9oOJmEeGhW_zi4ZlG6w" guid="-qaBcz1JsnnSry6NUgCo7gQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gTFKeVaC72-YtKq9KyS92w" name="design,_AiJ2IeJmEeGhW_zi4ZlG6w" guid="-gTFKeVaC72-YtKq9KyS92w">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sjY9a6b3iKomKjGcPXk3GQ" name="test_log,_Aid_MeJmEeGhW_zi4ZlG6w" guid="-sjY9a6b3iKomKjGcPXk3GQ">
    <refinedDescription>This artifact provides a detailed, typically time-based record that both verifies that a set of tests were run, and&#xD;
provides information that relates to the success of those tests. The focus is typically on providing an accurate audit&#xD;
trail, which enables you to undertake a post-run diagnosis of failures. This raw data is subsequently analyzed to determine&#xD;
the results of an aspect of the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ATynBvHUQqY7MgfJVyliKQ" name="system_wide_requirements,_iKJ88OJlEeGhW_zi4ZlG6w" guid="-ATynBvHUQqY7MgfJVyliKQ">
    <keyConsiderations>&lt;ul>&#xD;
    &lt;li>&#xD;
        When you document system-wide requirements, ensure that the needs of all of the stakeholders are represented. In&#xD;
        particular, include the needs of those who are responsible for maintaining or supporting the system after it is&#xD;
        delivered.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Typically, there are some overlaps and gray areas between system-wide requirements and other requirements work&#xD;
        products. For example, the authorization behavior of a system can be specified as use cases or as statements within&#xD;
        system-wide requirements. The overall driving need is that no important requirements are missed or duplicated, and&#xD;
        that there is an agreed upon approach for capturing and processing every type of requirement.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements originate from many places. Documenting the source of the requirement is particularly&#xD;
        important when you separate externally mandated requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Requirements are often thought of as &quot;Qualitative&quot; (specifying a quality or desirable characteristic) versus&#xD;
        &quot;Quantitative&quot; (specifying a quantity). Qualitative requirements can sometimes be elaborated into quantitative&#xD;
        requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A good quality requirement is one that you can verify, either through testing or some other objective evaluation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        You must evaluate system-wide requirements for cost, schedule impact, and level of contribution to business goals.&#xD;
        Based on your evaluation, the system-wide requirements should be iteratively challenged, defended, and amended.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-G6UInpxIBSgGsfj1NOCmnA" name="architect,_AqR3YeJmEeGhW_zi4ZlG6w" guid="-G6UInpxIBSgGsfj1NOCmnA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0WUiER7v0vm96N-sZ491Tg" name="project_manager,_AqUToeJmEeGhW_zi4ZlG6w" guid="-0WUiER7v0vm96N-sZ491Tg">
    <keyConsiderations>In the context of portfolio management, this role participates in the decision of how to allocate resources supply&#xD;
to&amp;nbsp;work on portfolio components demand.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8lucjus39MlT37kUOYjKRw" name="storyboard,_Aqc2geJmEeGhW_zi4ZlG6w" guid="-8lucjus39MlT37kUOYjKRw">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3ARubMMy-jd-WitjafGwBQ" name="iteration_plan,_Aqq48eJmEeGhW_zi4ZlG6w" guid="-3ARubMMy-jd-WitjafGwBQ">
    <keyConsiderations>&lt;p>&#xD;
    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work&#xD;
    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the&#xD;
    remaining high priority work items, plus a few mid-priority ones from the Work Items List). Once work items have been&#xD;
    assigned to the iteration, the team ensures that they can complete all work, regardless of original work item&#xD;
    priorities. Deciding what to develop first on an iteration will vary across projects and iterations.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-y_hMBbcErOc8Bh5w1G_Yww" name="risk_list,_AqujUeJmEeGhW_zi4ZlG6w" guid="-y_hMBbcErOc8Bh5w1G_Yww">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zuBciU3HWVO0TeHwxhsIpg" name="project_plan,_Aqzb0eJmEeGhW_zi4ZlG6w" guid="-zuBciU3HWVO0TeHwxhsIpg">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in&#xD;
order to make sure that everybody agrees with it.&lt;p/>&lt;p>&#xD;
    Create and update the project plan in planning sessions that involve the whole team and appropriate project&#xD;
    stakeholders in order to make sure that everybody agrees with it.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Document key stakeholder agreements involving budgets, schedules, resources, and requirements.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it&#xD;
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and&#xD;
    their milestones.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect&#xD;
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of&#xD;
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the&#xD;
    project.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-si4JINSsbZtgCJvy3DgsXA" name="business_case,_Aq2fIeJmEeGhW_zi4ZlG6w" guid="-si4JINSsbZtgCJvy3DgsXA">
    <refinedDescription>For a commercial software product, the Business Case should include a set of assumptions about the project and the order of&#xD;
magnitude return on investment (ROI) if those assumptions are true. For example, the ROI will be a magnitude of five if&#xD;
completed in one year, two if completed in two years, and a negative number after that. These assumptions are checked again&#xD;
at the end of the Elaboration phase, when the scope and plan are defined with more accuracy.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AHqR9LJTyuhZi-AJtoiBFA" name="issues_list,_Aq6JgeJmEeGhW_zi4ZlG6w" guid="-AHqR9LJTyuhZi-AJtoiBFA">
    <refinedDescription>In general, issues are items that are not being tracked through Change Management or as tasks in the Project or Iteration&#xD;
Plans, although they may derive from these.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MJQQddvqlfws07-_3U9rGw" name="project_measurements,_Aq9z4eJmEeGhW_zi4ZlG6w" guid="-MJQQddvqlfws07-_3U9rGw">
    <refinedDescription>&lt;p>&#xD;
    The format and contents of the Project Measurements&amp;nbsp;depends on the metrics selected and the technology used for&#xD;
    collection and storage. It is essentially a database of metric-value associations and allied information for their&#xD;
    collection and calculation. Its form could be as simple as a set of files manually maintained by the Project&#xD;
    Manager.&amp;nbsp; However, we recommend that the collection and storage be automated and, as far as possible, be made&#xD;
    non-intrusive.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gsAtlm70jckitC_OyJW4ZA" name="status_assessment,_ArA3MeJmEeGhW_zi4ZlG6w" guid="-gsAtlm70jckitC_OyJW4ZA">
    <refinedDescription>&lt;p>&#xD;
    One of the objectives of the process is to ensure that the expectations of all parties are synchronized and consistent.&#xD;
    The periodic Status Assessment provides a mechanism for managing everyone's expectations throughout the project&#xD;
    lifecycle.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Continuous open communication with objective data derived directly from ongoing activities and the evolving product&#xD;
    configurations are mandatory in any project. These project snapshots provide the basis for management's attention.&#xD;
    While the period may vary, the forcing function needs to capture the project history.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note that Status Assessments are different from milestone reviews.&#xD;
&lt;/p>&lt;!--EndFragment--></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-09tYbdBD3hvRn5YCfXi_og" name="user_support_specs,_Arn7MeJmEeGhW_zi4ZlG6w" guid="-09tYbdBD3hvRn5YCfXi_og">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Hwo2NLHqqyalA9_AA0kGsg" name="actor,_Ar2kseJmEeGhW_zi4ZlG6w" guid="-Hwo2NLHqqyalA9_AA0kGsg">
    <keyConsiderations>&lt;p>&#xD;
    This&amp;nbsp;artifact concentrates on the classes of person and other systems that interact with the system under&#xD;
    consideration. Not every role in an organization becomes an actor.&amp;nbsp;However, work products that describe&#xD;
    organizational roles may be useful sources for coming up with actors.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Actors represent different types of users. An actor is anyone or anything that exchanges data with the system. An actor&#xD;
    can be a user, external hardware, or another system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The difference between an actor and an individual system user is that an actor represents a particular class of users,&#xD;
    rather than an actual user.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Several different individual users can play the same role, which means that they can be represented by the same, single&#xD;
    actor. In that case, each individual user constitutes an instance of the actor.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>However,&#xD;
    in some situations, only one person plays the role modeled by an actor. For example, there may be only one individual&#xD;
    in the role of system administrator for a rather small system.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0pt&quot;>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>The&#xD;
    same user can also act as several actors (that is, the same person can take on different roles).&lt;/span>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-4V5Scp4xpSpgb6RZxlYAEA" name="stakeholder_request,_AsZXQeJmEeGhW_zi4ZlG6w" guid="-4V5Scp4xpSpgb6RZxlYAEA">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jHOd--ZT7yksCSnZf94Nyg" name="it_services_strategy,_AsnZseJmEeGhW_zi4ZlG6w" guid="-jHOd--ZT7yksCSnZf94Nyg">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Bf2dywAN1SIYaYYJ6fPD5w" name="software_dist_plan,_AsrEEeJmEeGhW_zi4ZlG6w" guid="-Bf2dywAN1SIYaYYJ6fPD5w">
    <keyConsiderations xsi:nil="true"/>
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oFW4MZ-CJ8lDx4qwckTScg" name="component_model,_AsuuceJmEeGhW_zi4ZlG6w" guid="-oFW4MZ-CJ8lDx4qwckTScg">
    <keyConsiderations>&lt;p>&#xD;
    Points to consider when deciding whether to use a Component Model:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A Component Model is useful when you must design the system for multiple target environments, with separate design&#xD;
        architectures. The Component Model is an abstraction, or a generalization, of the system design. It omits most of&#xD;
        the details of the design in order to provide an overview of the system's functionality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Component Model provides value when the design is complex, such that new team members need a simplified,&#xD;
        abstracted model to understand it. A well-defined architecture can serve the same purpose.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Balance the extra work required to ensure that the component and design models remain consistent against the&#xD;
        benefit of having a view of the system that represents only the most important details of how the system works. It&#xD;
        can be very costly to maintain a high degree of fidelity between the Component Model and the system design. A less&#xD;
        ambitious approach might be to maintain the Component Model with only the most important components and the key&#xD;
        abstractions in the design. As the complexity of the Component Model increases, so does the cost to maintain it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Once you no longer maintain the Component Model, its value decays rapidly. At some point, it no longer accurately&#xD;
        reflects the current functional design of the system. Deciding to no longer maintain the Component Model may be&#xD;
        appropriate, as it may have served its purpose, but the decision should be a conscious one.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component models tend to be useful in companies where systems live for decades, or where there are many variants of the&#xD;
    system.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To ensure the successful development of a component model on a project, your team should:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Create a stable and coherent structure&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Focus on the right levels of abstraction&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Develop relationship and interaction diagrams in parallel&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Select architecturally significant requirements as inputs to the Component Model&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plan how your team will leverage the Component Model throughout the project lifecycle&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The component model describes the structure of a system in terms of its software components with their&#xD;
    responsibilities, interfaces, relationships, and the way they collaborate to deliver the required functionality. The&#xD;
    component model is the main artifact documenting the functional view of the architecture and serves as an abstraction&#xD;
    of the design. Components identified may be decomposed into further component models before they complete the&#xD;
    specification required for detailed design.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Component models help define and document:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The structure of the system&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The recurring interactions and dependencies between sets of components&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The components present within an enterprise, each of which may be made up of smaller components.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component models are documented at 2 levels:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The logical level - focuses on specifying the components' responsibilities and characteristics required to deliver&#xD;
        the requirements. These specifications are technology and product neutral.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The physical level -focuses on how to implement the components to meet the previously established specifications.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    You may transform logical components into physical components via custom development, the purchase of products, or the&#xD;
    reuse of assets.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important to maintain a separation between logical and physical components on larger projects. However,&#xD;
    smaller or less complex projects may evolve a single logical component model into a physical model, and end up with&#xD;
    only a physical model.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Examples of components at the logical level are a 'Message Bus' or a 'Customer Relationship Manager' component.&#xD;
    Components at the physical level that implement these logical components might be 'IBM WebSphere Message Broker' or&#xD;
    'Siebel Contact Center.'&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eryGI9xIC-k8wphuYIJ3jA" name="component_specification,_Asy_4eJmEeGhW_zi4ZlG6w" guid="-eryGI9xIC-k8wphuYIJ3jA">
    <keyConsiderations>&lt;p>&#xD;
    Points to consider when deciding whether to use a Component Specification:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The Component Specification provides value when the architecture is complex, such that new team members need a&#xD;
        simplified, abstracted model to understand it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The extra work required to ensure that the Component Specification and Executable Architecture remain consistent&#xD;
        must be balanced against the benefit of having a view of the system that represents only the most important details&#xD;
        of how the system works. It can be very costly to maintain a high degree of fidelity between the Component&#xD;
        Specification and Executable Architecture. As the complexity of the Component Specification increases, so does the&#xD;
        cost to maintain it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Once you no longer maintain the Component Specification, its value decays rapidly. At some point, it will no longer&#xD;
        accurately reflect the Executable Architecture. Deciding to no longer maintain the Component Specification may be&#xD;
        appropriate (it may have served its purpose), but the decision should be a conscious one.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component Specifications tend to be useful in companies where systems live for decades, or where there are many&#xD;
    variants of the system.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact specifies the details of a component identified in the Component Model. The specification shows the&#xD;
    interfaces offered and used by the component, identifies where business rules are placed, and details the operations&#xD;
    and their signatures for each interface.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Component Interfaces&lt;/strong> - An interface specifies one or more operation signatures and is both offered and&#xD;
    used by a component. Offering an interface means the component makes the interface available for other components to&#xD;
    use.&amp;nbsp;&amp;nbsp;Each interface provides a unique and well-defined set of operations. Hiding the structure of a&#xD;
    component and its data behind an interface allows that data to be changed without affecting how the interface is&#xD;
    used.&amp;nbsp; The actual composition of that data may change, but the interface that provides access to that data is&#xD;
    fixed. Interfaces also describe the state of a component.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Business Rules&lt;/strong> - Business Rules dictate the behavior of a system, and the component specification&#xD;
    defines how the system implements the business rules.&amp;nbsp; For example, a business rule may state that Internet&#xD;
    transactions for an on-line order can not exceed $1000 for a given account. A component that manages account&#xD;
    transactions may define an on-line transactions interface that implements this business rule.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Operations&lt;/strong> - Fully specified Component Specifications assign operations and operation signatures to&#xD;
    the interfaces and may define pre- and post-conditions on the operations.&amp;nbsp; Pre- and post-conditions specify the&#xD;
    effect of an operation without prescribing an algorithm or implementation.&amp;nbsp;A post-condition specifies the effect&#xD;
    of the operation on the components data or state.&amp;nbsp;A pre-condition is the condition under which the operation&#xD;
    guarantees that the post-condition is true.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qnwSjvxSEPFolQm-RoOg3A" name="architectural_decisions,_As3RUeJmEeGhW_zi4ZlG6w" guid="-qnwSjvxSEPFolQm-RoOg3A">
    <keyConsiderations>&lt;p>&#xD;
    Some important considerations for making and implementing architectural decisions:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Make sure the process for making decisions has the right level of sponsorship necessary to enforce those decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Make architecturally significant decisions early and be sure to validate high risk decisions using an executable&#xD;
        architecture&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Review and update architectural decisions as development progresses and update this artifact so it reflects any&#xD;
        changes to your decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It is not necessary to document every minute decision you make when developing the architecture; focus on those&#xD;
        that are controversial or are based on reasoning that is not obvious&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact documents key architectural decisions and the rationale behind those decisions.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DJCBA69fIxLvUbe089rI_w" name="architecture_overview,_As8w4eJmEeGhW_zi4ZlG6w" guid="-DJCBA69fIxLvUbe089rI_w">
    <keyConsiderations>As communication is its main purpose, it is more important for the description of the architecture to be simple, brief,&#xD;
clear, and understandable than comprehensive or accurate in all details.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides an overview of the main conceptual elements and relationships of an architecture, which might&#xD;
    include candidate subsystems, components, nodes, connections, data stores, users and external systems. As such, it&#xD;
    represents the governing ideas and candidate building blocks of the architecture.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2WEV347h58rZYisma9xgig" name="operational_model,_AtAbQeJmEeGhW_zi4ZlG6w" guid="-2WEV347h58rZYisma9xgig">
    <keyConsiderations>&lt;h5>&#xD;
    Levels of this artifact&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    The artifact can be a large and complex work product.&amp;nbsp; It is therefore important to understand how it may be best&#xD;
    developed and presented, depending on the particular context.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In order to reduce the complexity of the development process, the various development techniques available take&#xD;
    advantage of a number of well-defined views and levels of completeness.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Therefore this artifact can be refined and elaborated in various ways depending on the nature of the project life cycle&#xD;
    and the development techniques used.&amp;nbsp; Useful intermediate stages of development have been defined for both the&#xD;
    &lt;strong>logical&lt;/strong> and &lt;strong>physical&lt;/strong> levels of this artifact as described within this artifact.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Degree of completeness (elaboration) and quality (refinement)&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Individual circumstances will dictate the degree of completeness (including omission) of each level of this&#xD;
    artifact.&amp;nbsp; Decisions on level of detail, focus and completeness will be based on many factors, such as&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Audience (e.g. business people, IT Architects, or Developers)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose (is it to be fully specified and configured or a generalized reference pattern?)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Completeness (is it early in a project's life, or a finished artifact?)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The degree of completeness reached (or required) will also be dependent on the development process (e.g. waterfall,&#xD;
    iterative, etc.).&amp;nbsp; The levels of this artifact elaborate through degrees of completeness towards their completed&#xD;
    states while remaining synchronized and consistent with one another at each major project &quot;milestone&quot;.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Varying depth of detail&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    As well describing the operational aspect of a complete IT system, it is often helpful to develop this artifact showing&#xD;
    greater detail for particular parts of the system.&amp;nbsp; For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        This artifact may model a whole IT system as one or two nodes on the overall model, but a further more detailed&#xD;
        representation of parts of the IT system in a particular location may also be constructed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This artifact may model a single part of an IT system in detail without modeling the whole IT system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This artifact may include the same &quot;recurring pattern&quot; of nodes and/or connections, and, in this case, a separate&#xD;
        artifact may detail the recurring pattern and be referenced by the main artifact.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h5>&#xD;
    Cross-cutting viewpoints&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    This artifact and the logical and physical levels of this artifact may be the focus of a particular viewpoint, at any&#xD;
    degree of elaboration and refinement, to address the concerns of a particular stakeholder. These cross-cutting&#xD;
    viewpoints overlap with one another.&amp;nbsp; For example, views may be constructed on this artifact for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Application&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Technical&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Capacity&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Availability and Recovery&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Security and Privacy Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Operability and Operations Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software Distribution and Installation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Distributed Data Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem Identification and Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        End User Support/Helpdesk&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Networking&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Accessibility&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        National Language Support&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Financial proprietary&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Archiving&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Such filtering does not generally change the elements in the artifact rather it simply enables a clearer focus on some&#xD;
    particular part of it.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Please refer to &quot;An Introduction to the IBM Views and Viewpoints Framework for IT Systems&quot; Whitepaper for further&#xD;
    details on the views and viewpoints framework including the relationship between base and cross-cutting views.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Linkages to other work products&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    As well as a linkage via Deployment Units with the functional aspect of architecture as embodied in the Component&#xD;
    Model, this artifact has influences and/or is strongly interdependent on other areas that cover the design of the&#xD;
    infrastructure that will implement the operational aspect of architecture. For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Network Design: affects the application design, middleware selection, component placement, security and privacy,&#xD;
        systems management and overall operational system control.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Platform Design; the detailed design and configuration of the platforms that will implement the nodes.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Storage Design; the detailed design and configuration of storage which may be shared across multiple platforms.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Site &amp;amp; Facilities Design; the detailed design and configuration of the site and facilities in the locations in&#xD;
        which nodes (implemented by platforms) are placed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems Management design; through its definition of how the IT system is spread out over locations and what&#xD;
        systems management components and nodes are needed at each location.&amp;nbsp; Selection of a systems management style&#xD;
        is an important decision, which determines: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                The cost of operations management&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The cost of software distribution&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The complexity of system management tooling&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Potential security and performance of the IT system (ability to satisfy the service level requirements)&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Existing or planned enterprise-wide IT infrastructure initiatives on which the target system will be&#xD;
        implemented.&amp;nbsp; For example, enterprise wide middleware decisions may well move function, which would otherwise&#xD;
        be duplicated across multiple applications, into a set of shared services, which are usually purchased or part of&#xD;
        an enterprise wide development effort.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes the operational distribution of a system's components (which may be grouped into deployment&#xD;
    units) onto nodes, the placement of nodes and users across locations, the connections between nodes necessary to&#xD;
    support the required interactions between components, in order to achieve the system's functional and non-functional&#xD;
    requirements within the constraints of technology, skills and budget.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Operational Modeling Terminology&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    This artifact's (and that of its contained artifacts) terminology is defined within the System Description Standard R3&#xD;
    Semantic Specification (see Guidance for link) which includes definitions for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Actors (and workers) - the roles a user or an external system play with respect to the target system&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Locations - a geographical area or position.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Borders - representing the existing connection between two locations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Components - modular units of functionality, which make this functionality available through an interface.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Deployment Units - a grouping of facets of a component that have similar characteristics.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connectors - enable the exchange of messages (interactions) between resource containers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interactions - identify the messages exchanged between one or two resource containers in the context of a&#xD;
        collaboration, and the sequencing of these messages via their associated send/receive events.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Nodes - a collection of components fulfilling a specific responsibility with a certain quality of service within&#xD;
        the target system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connections - supports the required connectivity between connectable model elements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Zones - an aggregation of a number of model elements with a common (sub-) set of values for a particular&#xD;
        non-functional requirement and/or non-functional characteristic.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Boundaries - associated with a change in value for a particular non-functional requirement and/or characteristic&#xD;
        between two model elements.&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Depending on the development approach adopted and/or the context, it can be very helpful to create levels of this&#xD;
    artifact.&amp;nbsp; The two basic levels of this artifact are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Logical&lt;/strong>:&amp;nbsp; This level describes the characteristics and capabilities of the operational aspect&#xD;
        of the system architecture in a &lt;strong>technology independent and product neutral&lt;/strong> manner.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Physical&lt;/strong>:&amp;nbsp; This level describes characteristics and capabilities of the operational aspect of&#xD;
        the system architecture in a &lt;strong>technology and product dependent&lt;/strong> manner.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Both levels of this artifact may be further described at three different sub-levels relating to the degree to which the&#xD;
    level has been sized:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Unsized&lt;/strong> (or unranged) - the technology and products are specified to support the components&#xD;
        deployed but not sized and without detailing how the system will achieve the service level characteristics.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Ranged&lt;/strong> - the technology and products are specified to support a bounded range of requirements for&#xD;
        a defined range of circumstances.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Sized&lt;/strong> - the technology and products are specified and sized to support the components deployed and&#xD;
        details how the system will achieve the service level characteristics.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lqvKYUlQQLHlrx46n4y72g" name="developer,_Atkb8eJmEeGhW_zi4ZlG6w" guid="-lqvKYUlQQLHlrx46n4y72g">
    <refinedDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;Implementer&quot; name=&quot;Implementer&quot;>&lt;/a>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The implementer role is responsible for developing and testing components, in accordance with the project's adopted&#xD;
    standards, for integration into larger subsystems. When test components, such as drivers or stubs, must be created to&#xD;
    support testing, the implementer is also responsible for developing and testing the test components and corresponding&#xD;
    subsystems.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Further Reading&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    See &lt;i>Code Complete - A Practical Handbook of Software Construction&lt;/i> &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.tech.common.base/guidances/supportingmaterials/references.tech_6CCF393.html#MCO93&quot;&#xD;
    guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>[MCO93]&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3OPATFf7ZOePWOjuo-k2Ng" name="tester,_AtsXweJmEeGhW_zi4ZlG6w" guid="-3OPATFf7ZOePWOjuo-k2Ng">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zSe3Fe-E1tgOFPwnymIelw" name="test_log,_At_5weJmEeGhW_zi4ZlG6w" guid="-zSe3Fe-E1tgOFPwnymIelw">
    <refinedDescription>This artifact provides a detailed, typically time-based record that both verifies that a set of tests were run, and&#xD;
provides information that relates to the success of those tests. The focus is typically on providing an accurate audit&#xD;
trail, which enables you to undertake a post-run diagnosis of failures. This raw data is subsequently analyzed to determine&#xD;
the results of an aspect of the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gsU5pgp0rF9jVvwUbPJnTg" name="build,_AuRmkeJmEeGhW_zi4ZlG6w" guid="-gsU5pgp0rF9jVvwUbPJnTg">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dlPTKJB8NGMQYklF1XDP_g" name="code_analysis_guidelines,_AuWfEeJmEeGhW_zi4ZlG6w" guid="-dlPTKJB8NGMQYklF1XDP_g">
    <keyConsiderations>The most important thing about coding guidelines is to have them. Everyone has their stylistic preferences, but a enforcing&#xD;
a single style greatly improves readability and maintainability. Avoid ignoring coding guidelines just because it's&#xD;
difficult to come to agreement. Choose a set of guidelines get coding.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Code analysis guidelines includes information for the static and runtime evaluation of the implementation (code).&#xD;
    Static guidelines focus on code that is not currently running. Dynamic guidelines focus on evaluating the behavior of&#xD;
    the software as the code is executing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Static analysis includes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coding guidelines that give the implementation a familiar look and feel to everyone on the team, and make it easier&#xD;
        to find code blocks and commonly used areas of code (methods, case statements, etc). These guidelines makes the&#xD;
        code more maintainable and more efficient to produce.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Code dependency that evaluates how different implementation modules depend upon each other. This can improve&#xD;
        coupling and cohesion at the implementation level, for example.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Code complexity that helps developers judge if the code has become too complex to be maintained efficiently.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    See the definition of &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.design_driven_implementation.base-ibm/guidances/termdefinitions/runtime_analysis_E9330E42.html&quot; guid=&quot;_iWLT0H9mEd2zS8U3DVRSmQ&quot;>runtime analysis&lt;/a>&amp;nbsp;for more information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Automated tools and techniques can cover more areas of static and runtime analysis. Use this work product to list all&#xD;
    the areas that need to be examined in the implementation and the tools used to examine the implementation.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nr2pvwv50-SdOkGi-EkSqg" name="developer_test,_AuawgeJmEeGhW_zi4ZlG6w" guid="-nr2pvwv50-SdOkGi-EkSqg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VsMV2YjehpRlh8ucUzx0gg" name="implementation,_AufB8eJmEeGhW_zi4ZlG6w" guid="-VsMV2YjehpRlh8ucUzx0gg">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-G1XsnG_AaI24p-u8HRnl0g" name="design,_AujTYeJmEeGhW_zi4ZlG6w" guid="-G1XsnG_AaI24p-u8HRnl0g">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--Hy8W5vHsP5jR7BiYBDivg" name="architect,_AkeKUeJmEeGhW_zi4ZlG6w" guid="--Hy8W5vHsP5jR7BiYBDivg">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7EkDpxKDvyuPACHFo0N3oQ" name="project_manager,_Akf_geJmEeGhW_zi4ZlG6w" guid="-7EkDpxKDvyuPACHFo0N3oQ">
    <keyConsiderations>In the context of portfolio management, this role participates in the decision of how to allocate resources supply&#xD;
to&amp;nbsp;work on portfolio components demand.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The person in this role:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaches the team to drive a successful outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is accountable for the outcome of the project and the acceptance of the product by the customer&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is responsible for the evaluation of project's risks and for controlling those risks through mitigation strategies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Applies management knowledge, skills, tools, and techniques to a broad range of tasks to deliver the&#xD;
        desired result for a particular project in a timely manner&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-N8xkIKbIVlVPltJZ3g8h7g" name="storyboard,_AkmGIeJmEeGhW_zi4ZlG6w" guid="-N8xkIKbIVlVPltJZ3g8h7g">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--lyx6y5IU1gstc9Z7vcw3A" name="user_support_specs,_AkuB8eJmEeGhW_zi4ZlG6w" guid="--lyx6y5IU1gstc9Z7vcw3A">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HYRdeIy3uHsf_XYmEW3jkg" name="system_wide_requirements,_Ak0IkeJmEeGhW_zi4ZlG6w" guid="-HYRdeIy3uHsf_XYmEW3jkg">
    <keyConsiderations>&lt;ul>&#xD;
    &lt;li>&#xD;
        When you document system-wide requirements, ensure that the needs of all of the stakeholders are represented. In&#xD;
        particular, include the needs of those who are responsible for maintaining or supporting the system after it is&#xD;
        delivered.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Typically, there are some overlaps and gray areas between system-wide requirements and other requirements work&#xD;
        products. For example, the authorization behavior of a system can be specified as use cases or as statements within&#xD;
        system-wide requirements. The overall driving need is that no important requirements are missed or duplicated, and&#xD;
        that there is an agreed upon approach for capturing and processing every type of requirement.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements originate from many places. Documenting the source of the requirement is particularly&#xD;
        important when you separate externally mandated requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Requirements are often thought of as &quot;Qualitative&quot; (specifying a quality or desirable characteristic) versus&#xD;
        &quot;Quantitative&quot; (specifying a quantity). Qualitative requirements can sometimes be elaborated into quantitative&#xD;
        requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A good quality requirement is one that you can verify, either through testing or some other objective evaluation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        You must evaluate system-wide requirements for cost, schedule impact, and level of contribution to business goals.&#xD;
        Based on your evaluation, the system-wide requirements should be iteratively challenged, defended, and amended.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-CEnjQIEWEgM9AfKQeGAwPw" name="actor,_Ak9SgeJmEeGhW_zi4ZlG6w" guid="-CEnjQIEWEgM9AfKQeGAwPw">
    <keyConsiderations>&lt;p>&#xD;
    This&amp;nbsp;artifact concentrates on the classes of person and other systems that interact with the system under&#xD;
    consideration. Not every role in an organization becomes an actor.&amp;nbsp;However, work products that describe&#xD;
    organizational roles may be useful sources for coming up with actors.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Actors represent different types of users. An actor is anyone or anything that exchanges data with the system. An actor&#xD;
    can be a user, external hardware, or another system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The difference between an actor and an individual system user is that an actor represents a particular class of users,&#xD;
    rather than an actual user.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Several different individual users can play the same role, which means that they can be represented by the same, single&#xD;
    actor. In that case, each individual user constitutes an instance of the actor.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>However,&#xD;
    in some situations, only one person plays the role modeled by an actor. For example, there may be only one individual&#xD;
    in the role of system administrator for a rather small system.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0pt&quot;>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>The&#xD;
    same user can also act as several actors (that is, the same person can take on different roles).&lt;/span>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-onYq4c_bpOXyYv7FOIoXmA" name="iteration_plan,_Al5tseJmEeGhW_zi4ZlG6w" guid="-onYq4c_bpOXyYv7FOIoXmA">
    <keyConsiderations>&lt;p>&#xD;
    Work items assigned to an iteration do not necessarily have the same priority. When selecting work items from the Work&#xD;
    Items List, the iteration plan may end up having work items with different priorities (for example, you assign the&#xD;
    remaining high priority work items, plus a few mid-priority ones from the Work Items List). Once work items have been&#xD;
    assigned to the iteration, the team ensures that they can complete all work, regardless of original work item&#xD;
    priorities. Deciding what to develop first on an iteration will vary across projects and iterations.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact captures the key milestones of an iteration, showing start and end dates, intermediate milestones,&#xD;
    synchronization points with other teams, demos, and so on. This artifact is also used to capture issues that need to be&#xD;
    solved during the iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should list a few objectives for the iteration, which will help guide you throughout the iteration. Also, assess at&#xD;
    the end if those objectives have been achieved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task assignments for an iteration are a subset of all tasks on the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.mgmt.common.extend_supp/workproducts/work_items_list_39D03CC8.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. Therefore, the iteration plan ideally references those&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The evaluation criteria and iteration assessment information are captured in this artifact, so that you can communicate&#xD;
    results and actions from assessments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Up9bWuvIa-8dK1xLToY7wA" name="risk_list,_Al9YEeJmEeGhW_zi4ZlG6w" guid="-Up9bWuvIa-8dK1xLToY7wA">
    <keyConsiderations>&lt;p>&#xD;
    This list should capture the critical and serious risks. If you find this list extending beyond 20 items, carefully&#xD;
    consider whether they are really serious risks. Tracking more than 20 risks is an onerous task.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This list identifies, in decreasing order of priority, all the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.mgmt.common.base/guidances/termdefinitions/risk_33255339.html&quot;&#xD;
    guid=&quot;_ii2LUEvGEdunZcj9T5hrMQ&quot;>risks&lt;/a> associated to a project.&amp;nbsp;It serves as a focal point for project&#xD;
    activities, and is the basis around which iterations are organized.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../core.mgmt.common.extend_supp/guidances/concepts/risk_AF5840DA.html&quot;&#xD;
    guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more details.&lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wzpNb5WbxPJo90m3kOWyEw" name="work_items_list,_AmBpgeJmEeGhW_zi4ZlG6w" guid="-wzpNb5WbxPJo90m3kOWyEw">
    <keyConsiderations>&lt;p>&#xD;
    Work Items should contain estimates. See guidelines on managing work items and agile estimation.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides a focal point for the entire team:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note&#xD;
        that some of these requests may never be implemented, or be implemented in later projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list&#xD;
        is prioritized separately.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It provides one place to go to for the development team to understand what&amp;nbsp;micro-increments&amp;nbsp;need to be&#xD;
        delivered, get references to material required to carry out the work, and report progress made.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These are the typical work items that go on this list:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use cases (and references to use-case specifications)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Changes and enhancement requests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defects&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development tasks&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Work items can be very large in scope, especially when capturing requests for enhancements, such as &quot;Support Financial&#xD;
    Planning&quot; for a personal finance application. To allow the application to be developed in micro-increments, work items&#xD;
    are analyzed and broken down into smaller work items so that they can be assigned to an iteration, such as a use-case&#xD;
    scenario for&amp;nbsp;&quot;Calculate Net Worth&quot;. Further breakdown may be required to identify suitable tasks to be assigned to&#xD;
    developers, such as &quot;Develop UI for Calculate Net Worth&quot;. This means that work items often have parent/child&#xD;
    relationships, where the lowest level is a specification and tracking device for micro-increments.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SGF9D3EQDmM_P62ZGJ0FWg" name="project_plan,_AmGiAeJmEeGhW_zi4ZlG6w" guid="-SGF9D3EQDmM_P62ZGJ0FWg">
    <keyConsiderations>Create and update the project plan in planning sessions that involve the whole team and appropriate project stakeholders in&#xD;
order to make sure that everybody agrees with it.&lt;p/>&lt;p>&#xD;
    Create and update the project plan in planning sessions that involve the whole team and appropriate project&#xD;
    stakeholders in order to make sure that everybody agrees with it.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Document key stakeholder agreements involving budgets, schedules, resources, and requirements.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes how the project is organized, and identifies what practices will be followed. Additionally, it&#xD;
    defines the parameters for tracking project progress, and specifies the high-level objectives of the iterations and&#xD;
    their milestones.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect&#xD;
    a certain level of functionality be available.&amp;nbsp;Update the plan&amp;nbsp;as often as necessary, usually at the end of&#xD;
    each iteration, in order to reflect changing priorities and needs, as well as record the lessons learned from the&#xD;
    project.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MaGNVVtq1z_goqZF_UZUHg" name="business_case,_AmKzceJmEeGhW_zi4ZlG6w" guid="-MaGNVVtq1z_goqZF_UZUHg">
    <refinedDescription>For a commercial software product, the Business Case should include a set of assumptions about the project and the order of&#xD;
magnitude return on investment (ROI) if those assumptions are true. For example, the ROI will be a magnitude of five if&#xD;
completed in one year, two if completed in two years, and a negative number after that. These assumptions are checked again&#xD;
at the end of the Elaboration phase, when the scope and plan are defined with more accuracy.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3tKGgcaIpNndecCL3IxYtw" name="issues_list,_AmPr8eJmEeGhW_zi4ZlG6w" guid="-3tKGgcaIpNndecCL3IxYtw">
    <refinedDescription>In general, issues are items that are not being tracked through Change Management or as tasks in the Project or Iteration&#xD;
Plans, although they may derive from these.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rel8UlynosL7HJnccWUG1g" name="project_measurements,_AmUkceJmEeGhW_zi4ZlG6w" guid="-rel8UlynosL7HJnccWUG1g">
    <refinedDescription>&lt;p>&#xD;
    The format and contents of the Project Measurements&amp;nbsp;depends on the metrics selected and the technology used for&#xD;
    collection and storage. It is essentially a database of metric-value associations and allied information for their&#xD;
    collection and calculation. Its form could be as simple as a set of files manually maintained by the Project&#xD;
    Manager.&amp;nbsp; However, we recommend that the collection and storage be automated and, as far as possible, be made&#xD;
    non-intrusive.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UAIXwnddvax4o_VMIhgYQg" name="status_assessment,_AmZc8eJmEeGhW_zi4ZlG6w" guid="-UAIXwnddvax4o_VMIhgYQg">
    <refinedDescription>&lt;p>&#xD;
    One of the objectives of the process is to ensure that the expectations of all parties are synchronized and consistent.&#xD;
    The periodic Status Assessment provides a mechanism for managing everyone's expectations throughout the project&#xD;
    lifecycle.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Continuous open communication with objective data derived directly from ongoing activities and the evolving product&#xD;
    configurations are mandatory in any project. These project snapshots provide the basis for management's attention.&#xD;
    While the period may vary, the forcing function needs to capture the project history.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Note that Status Assessments are different from milestone reviews.&#xD;
&lt;/p>&lt;!--EndFragment--></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-o-ouJ83o-SHfzvI9TcwZcw" name="it_services_strategy,_AnS00eJmEeGhW_zi4ZlG6w" guid="-o-ouJ83o-SHfzvI9TcwZcw">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rMWkOb3_DP1VSueBAulzpg" name="software_dist_plan,_AnYUYeJmEeGhW_zi4ZlG6w" guid="-rMWkOb3_DP1VSueBAulzpg">
    <keyConsiderations xsi:nil="true"/>
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lYIFVEcr6CrfVpISywHHIA" name="component_model,_AndM4eJmEeGhW_zi4ZlG6w" guid="-lYIFVEcr6CrfVpISywHHIA">
    <keyConsiderations>&lt;p>&#xD;
    Points to consider when deciding whether to use a Component Model:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A Component Model is useful when you must design the system for multiple target environments, with separate design&#xD;
        architectures. The Component Model is an abstraction, or a generalization, of the system design. It omits most of&#xD;
        the details of the design in order to provide an overview of the system's functionality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Component Model provides value when the design is complex, such that new team members need a simplified,&#xD;
        abstracted model to understand it. A well-defined architecture can serve the same purpose.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Balance the extra work required to ensure that the component and design models remain consistent against the&#xD;
        benefit of having a view of the system that represents only the most important details of how the system works. It&#xD;
        can be very costly to maintain a high degree of fidelity between the Component Model and the system design. A less&#xD;
        ambitious approach might be to maintain the Component Model with only the most important components and the key&#xD;
        abstractions in the design. As the complexity of the Component Model increases, so does the cost to maintain it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Once you no longer maintain the Component Model, its value decays rapidly. At some point, it no longer accurately&#xD;
        reflects the current functional design of the system. Deciding to no longer maintain the Component Model may be&#xD;
        appropriate, as it may have served its purpose, but the decision should be a conscious one.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component models tend to be useful in companies where systems live for decades, or where there are many variants of the&#xD;
    system.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To ensure the successful development of a component model on a project, your team should:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Create a stable and coherent structure&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Focus on the right levels of abstraction&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Develop relationship and interaction diagrams in parallel&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Select architecturally significant requirements as inputs to the Component Model&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plan how your team will leverage the Component Model throughout the project lifecycle&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The component model describes the structure of a system in terms of its software components with their&#xD;
    responsibilities, interfaces, relationships, and the way they collaborate to deliver the required functionality. The&#xD;
    component model is the main artifact documenting the functional view of the architecture and serves as an abstraction&#xD;
    of the design. Components identified may be decomposed into further component models before they complete the&#xD;
    specification required for detailed design.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Component models help define and document:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The structure of the system&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The recurring interactions and dependencies between sets of components&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The components present within an enterprise, each of which may be made up of smaller components.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component models are documented at 2 levels:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The logical level - focuses on specifying the components' responsibilities and characteristics required to deliver&#xD;
        the requirements. These specifications are technology and product neutral.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The physical level -focuses on how to implement the components to meet the previously established specifications.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    You may transform logical components into physical components via custom development, the purchase of products, or the&#xD;
    reuse of assets.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important to maintain a separation between logical and physical components on larger projects. However,&#xD;
    smaller or less complex projects may evolve a single logical component model into a physical model, and end up with&#xD;
    only a physical model.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Examples of components at the logical level are a 'Message Bus' or a 'Customer Relationship Manager' component.&#xD;
    Components at the physical level that implement these logical components might be 'IBM WebSphere Message Broker' or&#xD;
    'Siebel Contact Center.'&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--QYCeDUTf9NHBJ3UQTonJQ" name="component_specification,_AnheUeJmEeGhW_zi4ZlG6w" guid="--QYCeDUTf9NHBJ3UQTonJQ">
    <keyConsiderations>&lt;p>&#xD;
    Points to consider when deciding whether to use a Component Specification:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The Component Specification provides value when the architecture is complex, such that new team members need a&#xD;
        simplified, abstracted model to understand it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The extra work required to ensure that the Component Specification and Executable Architecture remain consistent&#xD;
        must be balanced against the benefit of having a view of the system that represents only the most important details&#xD;
        of how the system works. It can be very costly to maintain a high degree of fidelity between the Component&#xD;
        Specification and Executable Architecture. As the complexity of the Component Specification increases, so does the&#xD;
        cost to maintain it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Once you no longer maintain the Component Specification, its value decays rapidly. At some point, it will no longer&#xD;
        accurately reflect the Executable Architecture. Deciding to no longer maintain the Component Specification may be&#xD;
        appropriate (it may have served its purpose), but the decision should be a conscious one.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component Specifications tend to be useful in companies where systems live for decades, or where there are many&#xD;
    variants of the system.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact specifies the details of a component identified in the Component Model. The specification shows the&#xD;
    interfaces offered and used by the component, identifies where business rules are placed, and details the operations&#xD;
    and their signatures for each interface.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Component Interfaces&lt;/strong> - An interface specifies one or more operation signatures and is both offered and&#xD;
    used by a component. Offering an interface means the component makes the interface available for other components to&#xD;
    use.&amp;nbsp;&amp;nbsp;Each interface provides a unique and well-defined set of operations. Hiding the structure of a&#xD;
    component and its data behind an interface allows that data to be changed without affecting how the interface is&#xD;
    used.&amp;nbsp; The actual composition of that data may change, but the interface that provides access to that data is&#xD;
    fixed. Interfaces also describe the state of a component.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Business Rules&lt;/strong> - Business Rules dictate the behavior of a system, and the component specification&#xD;
    defines how the system implements the business rules.&amp;nbsp; For example, a business rule may state that Internet&#xD;
    transactions for an on-line order can not exceed $1000 for a given account. A component that manages account&#xD;
    transactions may define an on-line transactions interface that implements this business rule.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Operations&lt;/strong> - Fully specified Component Specifications assign operations and operation signatures to&#xD;
    the interfaces and may define pre- and post-conditions on the operations.&amp;nbsp; Pre- and post-conditions specify the&#xD;
    effect of an operation without prescribing an algorithm or implementation.&amp;nbsp;A post-condition specifies the effect&#xD;
    of the operation on the components data or state.&amp;nbsp;A pre-condition is the condition under which the operation&#xD;
    guarantees that the post-condition is true.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ilm6Ea_lUNwrFrV53NuFAg" name="architectural_decisions,_AnmW0eJmEeGhW_zi4ZlG6w" guid="-Ilm6Ea_lUNwrFrV53NuFAg">
    <keyConsiderations>&lt;p>&#xD;
    Some important considerations for making and implementing architectural decisions:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Make sure the process for making decisions has the right level of sponsorship necessary to enforce those decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Make architecturally significant decisions early and be sure to validate high risk decisions using an executable&#xD;
        architecture&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Review and update architectural decisions as development progresses and update this artifact so it reflects any&#xD;
        changes to your decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It is not necessary to document every minute decision you make when developing the architecture; focus on those&#xD;
        that are controversial or are based on reasoning that is not obvious&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact documents key architectural decisions and the rationale behind those decisions.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OSGpLNh8lHv98NcRV5Lcig" name="architecture_overview,_AnrPUeJmEeGhW_zi4ZlG6w" guid="-OSGpLNh8lHv98NcRV5Lcig">
    <keyConsiderations>As communication is its main purpose, it is more important for the description of the architecture to be simple, brief,&#xD;
clear, and understandable than comprehensive or accurate in all details.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides an overview of the main conceptual elements and relationships of an architecture, which might&#xD;
    include candidate subsystems, components, nodes, connections, data stores, users and external systems. As such, it&#xD;
    represents the governing ideas and candidate building blocks of the architecture.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XD2VDvaXwYoJnriHMiom5A" name="operational_model,_AnwH0eJmEeGhW_zi4ZlG6w" guid="-XD2VDvaXwYoJnriHMiom5A">
    <keyConsiderations>&lt;h5>&#xD;
    Levels of this artifact&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    The artifact can be a large and complex work product.&amp;nbsp; It is therefore important to understand how it may be best&#xD;
    developed and presented, depending on the particular context.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In order to reduce the complexity of the development process, the various development techniques available take&#xD;
    advantage of a number of well-defined views and levels of completeness.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Therefore this artifact can be refined and elaborated in various ways depending on the nature of the project life cycle&#xD;
    and the development techniques used.&amp;nbsp; Useful intermediate stages of development have been defined for both the&#xD;
    &lt;strong>logical&lt;/strong> and &lt;strong>physical&lt;/strong> levels of this artifact as described within this artifact.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Degree of completeness (elaboration) and quality (refinement)&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Individual circumstances will dictate the degree of completeness (including omission) of each level of this&#xD;
    artifact.&amp;nbsp; Decisions on level of detail, focus and completeness will be based on many factors, such as&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Audience (e.g. business people, IT Architects, or Developers)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose (is it to be fully specified and configured or a generalized reference pattern?)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Completeness (is it early in a project's life, or a finished artifact?)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The degree of completeness reached (or required) will also be dependent on the development process (e.g. waterfall,&#xD;
    iterative, etc.).&amp;nbsp; The levels of this artifact elaborate through degrees of completeness towards their completed&#xD;
    states while remaining synchronized and consistent with one another at each major project &quot;milestone&quot;.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Varying depth of detail&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    As well describing the operational aspect of a complete IT system, it is often helpful to develop this artifact showing&#xD;
    greater detail for particular parts of the system.&amp;nbsp; For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        This artifact may model a whole IT system as one or two nodes on the overall model, but a further more detailed&#xD;
        representation of parts of the IT system in a particular location may also be constructed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This artifact may model a single part of an IT system in detail without modeling the whole IT system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This artifact may include the same &quot;recurring pattern&quot; of nodes and/or connections, and, in this case, a separate&#xD;
        artifact may detail the recurring pattern and be referenced by the main artifact.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h5>&#xD;
    Cross-cutting viewpoints&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    This artifact and the logical and physical levels of this artifact may be the focus of a particular viewpoint, at any&#xD;
    degree of elaboration and refinement, to address the concerns of a particular stakeholder. These cross-cutting&#xD;
    viewpoints overlap with one another.&amp;nbsp; For example, views may be constructed on this artifact for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Application&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Technical&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Capacity&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Availability and Recovery&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Security and Privacy Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Operability and Operations Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software Distribution and Installation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Distributed Data Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem Identification and Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        End User Support/Helpdesk&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Networking&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Accessibility&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        National Language Support&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Financial proprietary&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Archiving&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Such filtering does not generally change the elements in the artifact rather it simply enables a clearer focus on some&#xD;
    particular part of it.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Please refer to &quot;An Introduction to the IBM Views and Viewpoints Framework for IT Systems&quot; Whitepaper for further&#xD;
    details on the views and viewpoints framework including the relationship between base and cross-cutting views.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Linkages to other work products&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    As well as a linkage via Deployment Units with the functional aspect of architecture as embodied in the Component&#xD;
    Model, this artifact has influences and/or is strongly interdependent on other areas that cover the design of the&#xD;
    infrastructure that will implement the operational aspect of architecture. For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Network Design: affects the application design, middleware selection, component placement, security and privacy,&#xD;
        systems management and overall operational system control.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Platform Design; the detailed design and configuration of the platforms that will implement the nodes.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Storage Design; the detailed design and configuration of storage which may be shared across multiple platforms.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Site &amp;amp; Facilities Design; the detailed design and configuration of the site and facilities in the locations in&#xD;
        which nodes (implemented by platforms) are placed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems Management design; through its definition of how the IT system is spread out over locations and what&#xD;
        systems management components and nodes are needed at each location.&amp;nbsp; Selection of a systems management style&#xD;
        is an important decision, which determines: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                The cost of operations management&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The cost of software distribution&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The complexity of system management tooling&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Potential security and performance of the IT system (ability to satisfy the service level requirements)&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Existing or planned enterprise-wide IT infrastructure initiatives on which the target system will be&#xD;
        implemented.&amp;nbsp; For example, enterprise wide middleware decisions may well move function, which would otherwise&#xD;
        be duplicated across multiple applications, into a set of shared services, which are usually purchased or part of&#xD;
        an enterprise wide development effort.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes the operational distribution of a system's components (which may be grouped into deployment&#xD;
    units) onto nodes, the placement of nodes and users across locations, the connections between nodes necessary to&#xD;
    support the required interactions between components, in order to achieve the system's functional and non-functional&#xD;
    requirements within the constraints of technology, skills and budget.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Operational Modeling Terminology&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    This artifact's (and that of its contained artifacts) terminology is defined within the System Description Standard R3&#xD;
    Semantic Specification (see Guidance for link) which includes definitions for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Actors (and workers) - the roles a user or an external system play with respect to the target system&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Locations - a geographical area or position.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Borders - representing the existing connection between two locations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Components - modular units of functionality, which make this functionality available through an interface.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Deployment Units - a grouping of facets of a component that have similar characteristics.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connectors - enable the exchange of messages (interactions) between resource containers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interactions - identify the messages exchanged between one or two resource containers in the context of a&#xD;
        collaboration, and the sequencing of these messages via their associated send/receive events.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Nodes - a collection of components fulfilling a specific responsibility with a certain quality of service within&#xD;
        the target system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connections - supports the required connectivity between connectable model elements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Zones - an aggregation of a number of model elements with a common (sub-) set of values for a particular&#xD;
        non-functional requirement and/or non-functional characteristic.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Boundaries - associated with a change in value for a particular non-functional requirement and/or characteristic&#xD;
        between two model elements.&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Depending on the development approach adopted and/or the context, it can be very helpful to create levels of this&#xD;
    artifact.&amp;nbsp; The two basic levels of this artifact are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Logical&lt;/strong>:&amp;nbsp; This level describes the characteristics and capabilities of the operational aspect&#xD;
        of the system architecture in a &lt;strong>technology independent and product neutral&lt;/strong> manner.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Physical&lt;/strong>:&amp;nbsp; This level describes characteristics and capabilities of the operational aspect of&#xD;
        the system architecture in a &lt;strong>technology and product dependent&lt;/strong> manner.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Both levels of this artifact may be further described at three different sub-levels relating to the degree to which the&#xD;
    level has been sized:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Unsized&lt;/strong> (or unranged) - the technology and products are specified to support the components&#xD;
        deployed but not sized and without detailing how the system will achieve the service level characteristics.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Ranged&lt;/strong> - the technology and products are specified to support a bounded range of requirements for&#xD;
        a defined range of circumstances.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Sized&lt;/strong> - the technology and products are specified and sized to support the components deployed and&#xD;
        details how the system will achieve the service level characteristics.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-X31YKC3K5G5Ge-9q-wjF0A" name="stakeholder_request,_AoZBAeJmEeGhW_zi4ZlG6w" guid="-X31YKC3K5G5Ge-9q-wjF0A">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KeNeB9dr51-xrY69V1IWyw" name="system_wide_requirements,_xoTtAOJlEeGhW_zi4ZlG6w" guid="-KeNeB9dr51-xrY69V1IWyw">
    <keyConsiderations>&lt;ul>&#xD;
    &lt;li>&#xD;
        When you document system-wide requirements, ensure that the needs of all of the stakeholders are represented. In&#xD;
        particular, include the needs of those who are responsible for maintaining or supporting the system after it is&#xD;
        delivered.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Typically, there are some overlaps and gray areas between system-wide requirements and other requirements work&#xD;
        products. For example, the authorization behavior of a system can be specified as use cases or as statements within&#xD;
        system-wide requirements. The overall driving need is that no important requirements are missed or duplicated, and&#xD;
        that there is an agreed upon approach for capturing and processing every type of requirement.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements originate from many places. Documenting the source of the requirement is particularly&#xD;
        important when you separate externally mandated requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Requirements are often thought of as &quot;Qualitative&quot; (specifying a quality or desirable characteristic) versus&#xD;
        &quot;Quantitative&quot; (specifying a quantity). Qualitative requirements can sometimes be elaborated into quantitative&#xD;
        requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A good quality requirement is one that you can verify, either through testing or some other objective evaluation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        You must evaluate system-wide requirements for cost, schedule impact, and level of contribution to business goals.&#xD;
        Based on your evaluation, the system-wide requirements should be iteratively challenged, defended, and amended.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uAnHKlollYCmIB6x0OCmNw" name="architect,_BNeEAeJmEeGhW_zi4ZlG6w" guid="-uAnHKlollYCmIB6x0OCmNw">
    <refinedDescription>&lt;p>&#xD;
    The person in this role leads or coordinates the technical design of the system and has overall responsibility for&#xD;
    facilitating the major technical decisions expressed as software architecture. This typically includes identifying and&#xD;
    documenting the architecturally significant aspects of the system as views that describe requirements, design,&#xD;
    implementation, and deployment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various&#xD;
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and&#xD;
    followed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role works closely with project managers in staffing and planning the project, because it is recommended&#xD;
    that the team be organized around the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This role also works closely with analysts and developers to make sure that the architecturally significant&#xD;
    requirements are assigned to the proper components of the system. &#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9FHr-2LlZl115bE7_V6XPg" name="developer,_BNf5MeJmEeGhW_zi4ZlG6w" guid="-9FHr-2LlZl115bE7_V6XPg">
    <refinedDescription>&lt;a id=&quot;Top&quot; name=&quot;Top&quot;>&lt;/a>&lt;a id=&quot;Implementer&quot; name=&quot;Implementer&quot;>&lt;/a>&lt;a id=&quot;Description&quot; name=&quot;Description&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    The implementer role is responsible for developing and testing components, in accordance with the project's adopted&#xD;
    standards, for integration into larger subsystems. When test components, such as drivers or stubs, must be created to&#xD;
    support testing, the implementer is also responsible for developing and testing the test components and corresponding&#xD;
    subsystems.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Further Reading&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    See &lt;i>Code Complete - A Practical Handbook of Software Construction&lt;/i> &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../core.tech.common.base/guidances/supportingmaterials/references.tech_6CCF393.html#MCO93&quot;&#xD;
    guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>[MCO93]&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aIW3w6sOSKZ1AD5UwonKbA" name="tester,_BNkKoeJmEeGhW_zi4ZlG6w" guid="-aIW3w6sOSKZ1AD5UwonKbA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests that need to be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-i1zKyU9fzaJ1NGSNWNiVAg" name="storyboard,_BNpqMeJmEeGhW_zi4ZlG6w" guid="-i1zKyU9fzaJ1NGSNWNiVAg">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tkWGiqB0C-gJ_zPJDhjRxg" name="user_support_specs,_BN0pUeJmEeGhW_zi4ZlG6w" guid="-tkWGiqB0C-gJ_zPJDhjRxg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7kChclglYllXdFlyTzCcog" name="requirements_attributes,_BN3FkeJmEeGhW_zi4ZlG6w" guid="-7kChclglYllXdFlyTzCcog">
    <keyConsiderations>Requirement attributes help the project team understand, prioritize, manage, track and validate the project requirements.</keyConsiderations>
    <refinedDescription>A project requirement does not just consist of the description of the requirement. Each requirement needs a set of&#xD;
properties - called attributes -&amp;nbsp;that capture important information about it. And requirements that belong to&#xD;
different categories&amp;nbsp;can have a different set of attributes. All requirements&amp;nbsp;must have a core set of attributes&#xD;
to capture critical information about each requirement. The information that is captured in the attributes can used to&#xD;
generate views and reports, which are used to track and measure progress.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gTS-ECWA2Yk4hoDN_ygfmA" name="requirements_traceability,_BN6I4eJmEeGhW_zi4ZlG6w" guid="-gTS-ECWA2Yk4hoDN_ygfmA">
    <keyConsiderations>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>In order to maintain the consistency&amp;nbsp;of the&#xD;
    traceability,&amp;nbsp;this artifact must be re-assessed every time there is a change to the requirement or at the end of&#xD;
    each milestone.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Arial','sans-serif'&quot;>In a small simple project, the&#xD;
    traceability matrix can be&amp;nbsp;maintained in a spreadsheet. Automated tool support is helpful in a complicated&#xD;
    large-scale project.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are project resource costs to establishing and maintaining traceability. It is important to establish just enough&#xD;
    traceability to support completeness checking and change impact analysis without over-using the technique by tracing&#xD;
    &quot;everything to everything&quot;.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>&lt;span&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: 'Arial','sans-serif'&quot;>Traceability is defined by identifying which relationships&#xD;
    between requirement types - or other artifacts -- are important enough to track and maintain.&lt;/span>&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zG3TDNN95vM7O8Nm9kKYlw" name="requirements_management_process_description,_BN8lIeJmEeGhW_zi4ZlG6w" guid="-zG3TDNN95vM7O8Nm9kKYlw">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lXgqRgNR6wW67yM0yqGaDA" name="vision,_BOAPgeJmEeGhW_zi4ZlG6w" guid="-lXgqRgNR6wW67yM0yqGaDA">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-41AEcpti1PlvG81m6HDgPQ" name="actor,_BOMcweJmEeGhW_zi4ZlG6w" guid="-41AEcpti1PlvG81m6HDgPQ">
    <keyConsiderations>&lt;p>&#xD;
    This&amp;nbsp;artifact concentrates on the classes of person and other systems that interact with the system under&#xD;
    consideration. Not every role in an organization becomes an actor.&amp;nbsp;However, work products that describe&#xD;
    organizational roles may be useful sources for coming up with actors.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Actors represent different types of users. An actor is anyone or anything that exchanges data with the system. An actor&#xD;
    can be a user, external hardware, or another system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The difference between an actor and an individual system user is that an actor represents a particular class of users,&#xD;
    rather than an actual user.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Several different individual users can play the same role, which means that they can be represented by the same, single&#xD;
    actor. In that case, each individual user constitutes an instance of the actor.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>However,&#xD;
    in some situations, only one person plays the role modeled by an actor. For example, there may be only one individual&#xD;
    in the role of system administrator for a rather small system.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0pt&quot;>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>The&#xD;
    same user can also act as several actors (that is, the same person can take on different roles).&lt;/span>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-m_vimHM07cMaEdH4sfPw-g" name="test_log,_BPwjAeJmEeGhW_zi4ZlG6w" guid="-m_vimHM07cMaEdH4sfPw-g">
    <refinedDescription>This artifact provides a detailed, typically time-based record that both verifies that a set of tests were run, and&#xD;
provides information that relates to the success of those tests. The focus is typically on providing an accurate audit&#xD;
trail, which enables you to undertake a post-run diagnosis of failures. This raw data is subsequently analyzed to determine&#xD;
the results of an aspect of the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-D66bhlHFRI72B5hLQRmgMg" name="stakeholder_request,_BP-lceJmEeGhW_zi4ZlG6w" guid="-D66bhlHFRI72B5hLQRmgMg">
    <keyConsiderations>Stakeholder requests can come from many different sources. Examples of sources for the Stakeholder Requests are: &#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Results of stakeholder interviews&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Results from requirements elicitation sessions and workshops&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Statement of work&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Request for proposal&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Mission statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem statement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business rules&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Laws and regulations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Legacy systems&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business models&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br /></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JRqRXkJI0a--HhogWmKvMw" name="build,_BQJkkeJmEeGhW_zi4ZlG6w" guid="-JRqRXkJI0a--HhogWmKvMw">
    <refinedDescription>&lt;p>&#xD;
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a&#xD;
    build process (typically an automated build script) that creates an executable version, or one that runs. This&#xD;
    executable version will typically have a number of supporting files that are also considered part of this artifact.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jbOhxyHS_KfEp-pMQ-styw" name="code_analysis_guidelines,_BQMn4eJmEeGhW_zi4ZlG6w" guid="-jbOhxyHS_KfEp-pMQ-styw">
    <keyConsiderations>The most important thing about coding guidelines is to have them. Everyone has their stylistic preferences, but a enforcing&#xD;
a single style greatly improves readability and maintainability. Avoid ignoring coding guidelines just because it's&#xD;
difficult to come to agreement. Choose a set of guidelines get coding.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Code analysis guidelines includes information for the static and runtime evaluation of the implementation (code).&#xD;
    Static guidelines focus on code that is not currently running. Dynamic guidelines focus on evaluating the behavior of&#xD;
    the software as the code is executing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Static analysis includes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coding guidelines that give the implementation a familiar look and feel to everyone on the team, and make it easier&#xD;
        to find code blocks and commonly used areas of code (methods, case statements, etc). These guidelines makes the&#xD;
        code more maintainable and more efficient to produce.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Code dependency that evaluates how different implementation modules depend upon each other. This can improve&#xD;
        coupling and cohesion at the implementation level, for example.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Code complexity that helps developers judge if the code has become too complex to be maintained efficiently.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    See the definition of &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.tech.design_driven_implementation.base-ibm/guidances/termdefinitions/runtime_analysis_E9330E42.html&quot; guid=&quot;_iWLT0H9mEd2zS8U3DVRSmQ&quot;>runtime analysis&lt;/a>&amp;nbsp;for more information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Automated tools and techniques can cover more areas of static and runtime analysis. Use this work product to list all&#xD;
    the areas that need to be examined in the implementation and the tools used to examine the implementation.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-yQuehrgG89fPC2NhmtgPng" name="developer_test,_BQPrMeJmEeGhW_zi4ZlG6w" guid="-yQuehrgG89fPC2NhmtgPng">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kQ7gUXnQU5jtKKnyMSsREw" name="implementation,_BQSHceJmEeGhW_zi4ZlG6w" guid="-kQ7gUXnQU5jtKKnyMSsREw">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JmY_K9y4YbPpGyPN6EdYrQ" name="design,_BQUjseJmEeGhW_zi4ZlG6w" guid="-JmY_K9y4YbPpGyPN6EdYrQ">
    <refinedDescription>&lt;p>&#xD;
    This work product describes the elements that will make up the implemented system. It communicates abstractions of&#xD;
    particular portions of the implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    While architecture focuses on interfaces, patterns, and key decisions, the design fleshes out the technical details in&#xD;
    readiness for implementation, or as part of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This product can describe multiple static and dynamic views of the system for examination. Although various views may&#xD;
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit&#xD;
    together without contradiction.&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fbzv5mP8jkZNrhubXwV50w" name="it_services_strategy,_BQlpceJmEeGhW_zi4ZlG6w" guid="-fbzv5mP8jkZNrhubXwV50w">
    <keyConsiderations>&lt;p>&#xD;
    The IT Services Strategy could potentially lead to significant changes to the set of IT services provided and the way&#xD;
    in which they are sourced and delivered. As a consequence it could have far-reaching implications for the IT&#xD;
    organization, it's skills, processes and tools.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The IT Services Strategy work product describes the desired future strategic set or portfolio of IT services that must&#xD;
    be provided to satisfy the business' requirements and describes the individual services making up that future service&#xD;
    portfolio or service model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service is a specific IT function or output, performed on behalf of or in support of a consumer, that provides&#xD;
    measurable value. Services are a basis for doing business with the consumer of IT services, require an understanding of&#xD;
    their needs, and are delivered through a series of implemented activities.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An IT service brings together elements of process, organization and technology. The detailed service definitions show:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The activities, from one or more processes, that are executed in delivering the service;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The service roles or participants responsible for executing those activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The tools or information technology used to automate the execution of activities and deliver their results.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The IT services strategy describes the set of services that are to be provided and the way in which those services are&#xD;
    grouped or categorized. The scope and granularity of the service model will depend greatly on the perspective being&#xD;
    taken and the context within which the service model and service definitions are being created. The level of detail&#xD;
    necessary in the service definition will vary considerably depending on the audience for that description and the&#xD;
    purpose for which it is being created. For example, the IT Service model and service definitions used by a CIO or&#xD;
    business executive to facilitate analysis of outsourcing options will be at a much higher level than the service&#xD;
    definitions required by the first line IT manager responsible for defining and implementing service workflows.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ikBcCLI3Gcb-mCugmmb9sQ" name="software_dist_plan,_BQosweJmEeGhW_zi4ZlG6w" guid="-ikBcCLI3Gcb-mCugmmb9sQ">
    <keyConsiderations xsi:nil="true"/>
    <refinedDescription>&lt;p>&#xD;
    A Software Distribution Plan is part of a systems management project or part of an IT system architecture Operational&#xD;
    Model. The Software Distribution Plan includes the data required to allow the operations department to perform the&#xD;
    software configuration, installation, and distribution (CID) process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Generating a Software Distribution Plan is a way to avoid significant adverse impact on end users and IT infrastructure&#xD;
    due to changes and the overall cost of distributing the solution. The plan, when implemented, will provide end users,&#xD;
    who are accepting a new application and possibly new hardware, with the ability to restore their systems to a known&#xD;
    state on short notice. Downtime, due to user error or system disruption, cannot be tolerated in mission critical&#xD;
    applications, such as a call center for a telephone company or other utility.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Full automation of the software distribution process is not always necessary, but the plan will identify the cost&#xD;
    benefit of automation. The information collected in the plan will be valuable for any mixture of manual and automated&#xD;
    processes.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FfI8SJscCvU3j1NxQ3wdmw" name="component_model,_BQrwEeJmEeGhW_zi4ZlG6w" guid="-FfI8SJscCvU3j1NxQ3wdmw">
    <keyConsiderations>&lt;p>&#xD;
    Points to consider when deciding whether to use a Component Model:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A Component Model is useful when you must design the system for multiple target environments, with separate design&#xD;
        architectures. The Component Model is an abstraction, or a generalization, of the system design. It omits most of&#xD;
        the details of the design in order to provide an overview of the system's functionality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Component Model provides value when the design is complex, such that new team members need a simplified,&#xD;
        abstracted model to understand it. A well-defined architecture can serve the same purpose.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Balance the extra work required to ensure that the component and design models remain consistent against the&#xD;
        benefit of having a view of the system that represents only the most important details of how the system works. It&#xD;
        can be very costly to maintain a high degree of fidelity between the Component Model and the system design. A less&#xD;
        ambitious approach might be to maintain the Component Model with only the most important components and the key&#xD;
        abstractions in the design. As the complexity of the Component Model increases, so does the cost to maintain it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Once you no longer maintain the Component Model, its value decays rapidly. At some point, it no longer accurately&#xD;
        reflects the current functional design of the system. Deciding to no longer maintain the Component Model may be&#xD;
        appropriate, as it may have served its purpose, but the decision should be a conscious one.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component models tend to be useful in companies where systems live for decades, or where there are many variants of the&#xD;
    system.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To ensure the successful development of a component model on a project, your team should:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Create a stable and coherent structure&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Focus on the right levels of abstraction&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Develop relationship and interaction diagrams in parallel&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Select architecturally significant requirements as inputs to the Component Model&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Plan how your team will leverage the Component Model throughout the project lifecycle&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The component model describes the structure of a system in terms of its software components with their&#xD;
    responsibilities, interfaces, relationships, and the way they collaborate to deliver the required functionality. The&#xD;
    component model is the main artifact documenting the functional view of the architecture and serves as an abstraction&#xD;
    of the design. Components identified may be decomposed into further component models before they complete the&#xD;
    specification required for detailed design.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Component models help define and document:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The structure of the system&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The recurring interactions and dependencies between sets of components&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The components present within an enterprise, each of which may be made up of smaller components.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component models are documented at 2 levels:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The logical level - focuses on specifying the components' responsibilities and characteristics required to deliver&#xD;
        the requirements. These specifications are technology and product neutral.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The physical level -focuses on how to implement the components to meet the previously established specifications.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    You may transform logical components into physical components via custom development, the purchase of products, or the&#xD;
    reuse of assets.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important to maintain a separation between logical and physical components on larger projects. However,&#xD;
    smaller or less complex projects may evolve a single logical component model into a physical model, and end up with&#xD;
    only a physical model.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Examples of components at the logical level are a 'Message Bus' or a 'Customer Relationship Manager' component.&#xD;
    Components at the physical level that implement these logical components might be 'IBM WebSphere Message Broker' or&#xD;
    'Siebel Contact Center.'&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-o6CT579n6nIKY_lw5tRNtw" name="component_specification,_BQuMUeJmEeGhW_zi4ZlG6w" guid="-o6CT579n6nIKY_lw5tRNtw">
    <keyConsiderations>&lt;p>&#xD;
    Points to consider when deciding whether to use a Component Specification:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The Component Specification provides value when the architecture is complex, such that new team members need a&#xD;
        simplified, abstracted model to understand it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The extra work required to ensure that the Component Specification and Executable Architecture remain consistent&#xD;
        must be balanced against the benefit of having a view of the system that represents only the most important details&#xD;
        of how the system works. It can be very costly to maintain a high degree of fidelity between the Component&#xD;
        Specification and Executable Architecture. As the complexity of the Component Specification increases, so does the&#xD;
        cost to maintain it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Once you no longer maintain the Component Specification, its value decays rapidly. At some point, it will no longer&#xD;
        accurately reflect the Executable Architecture. Deciding to no longer maintain the Component Specification may be&#xD;
        appropriate (it may have served its purpose), but the decision should be a conscious one.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Component Specifications tend to be useful in companies where systems live for decades, or where there are many&#xD;
    variants of the system.&lt;br />&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact specifies the details of a component identified in the Component Model. The specification shows the&#xD;
    interfaces offered and used by the component, identifies where business rules are placed, and details the operations&#xD;
    and their signatures for each interface.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Component Interfaces&lt;/strong> - An interface specifies one or more operation signatures and is both offered and&#xD;
    used by a component. Offering an interface means the component makes the interface available for other components to&#xD;
    use.&amp;nbsp;&amp;nbsp;Each interface provides a unique and well-defined set of operations. Hiding the structure of a&#xD;
    component and its data behind an interface allows that data to be changed without affecting how the interface is&#xD;
    used.&amp;nbsp; The actual composition of that data may change, but the interface that provides access to that data is&#xD;
    fixed. Interfaces also describe the state of a component.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Business Rules&lt;/strong> - Business Rules dictate the behavior of a system, and the component specification&#xD;
    defines how the system implements the business rules.&amp;nbsp; For example, a business rule may state that Internet&#xD;
    transactions for an on-line order can not exceed $1000 for a given account. A component that manages account&#xD;
    transactions may define an on-line transactions interface that implements this business rule.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Operations&lt;/strong> - Fully specified Component Specifications assign operations and operation signatures to&#xD;
    the interfaces and may define pre- and post-conditions on the operations.&amp;nbsp; Pre- and post-conditions specify the&#xD;
    effect of an operation without prescribing an algorithm or implementation.&amp;nbsp;A post-condition specifies the effect&#xD;
    of the operation on the components data or state.&amp;nbsp;A pre-condition is the condition under which the operation&#xD;
    guarantees that the post-condition is true.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-OIBvr0_86UyR49kKQeJilg" name="architectural_decisions,_BQxPoeJmEeGhW_zi4ZlG6w" guid="-OIBvr0_86UyR49kKQeJilg">
    <keyConsiderations>&lt;p>&#xD;
    Some important considerations for making and implementing architectural decisions:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Make sure the process for making decisions has the right level of sponsorship necessary to enforce those decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Make architecturally significant decisions early and be sure to validate high risk decisions using an executable&#xD;
        architecture&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Review and update architectural decisions as development progresses and update this artifact so it reflects any&#xD;
        changes to your decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        It is not necessary to document every minute decision you make when developing the architecture; focus on those&#xD;
        that are controversial or are based on reasoning that is not obvious&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact documents key architectural decisions and the rationale behind those decisions.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QjFd_RKKLDzk6bM6vyE6WA" name="architecture_overview,_BQzr4eJmEeGhW_zi4ZlG6w" guid="-QjFd_RKKLDzk6bM6vyE6WA">
    <keyConsiderations>As communication is its main purpose, it is more important for the description of the architecture to be simple, brief,&#xD;
clear, and understandable than comprehensive or accurate in all details.</keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact provides an overview of the main conceptual elements and relationships of an architecture, which might&#xD;
    include candidate subsystems, components, nodes, connections, data stores, users and external systems. As such, it&#xD;
    represents the governing ideas and candidate building blocks of the architecture.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sNwvLgqt5NCuJhX0z1NZxg" name="operational_model,_BQ2vMeJmEeGhW_zi4ZlG6w" guid="-sNwvLgqt5NCuJhX0z1NZxg">
    <keyConsiderations>&lt;h5>&#xD;
    Levels of this artifact&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    The artifact can be a large and complex work product.&amp;nbsp; It is therefore important to understand how it may be best&#xD;
    developed and presented, depending on the particular context.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In order to reduce the complexity of the development process, the various development techniques available take&#xD;
    advantage of a number of well-defined views and levels of completeness.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Therefore this artifact can be refined and elaborated in various ways depending on the nature of the project life cycle&#xD;
    and the development techniques used.&amp;nbsp; Useful intermediate stages of development have been defined for both the&#xD;
    &lt;strong>logical&lt;/strong> and &lt;strong>physical&lt;/strong> levels of this artifact as described within this artifact.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Degree of completeness (elaboration) and quality (refinement)&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Individual circumstances will dictate the degree of completeness (including omission) of each level of this&#xD;
    artifact.&amp;nbsp; Decisions on level of detail, focus and completeness will be based on many factors, such as&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Audience (e.g. business people, IT Architects, or Developers)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose (is it to be fully specified and configured or a generalized reference pattern?)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Completeness (is it early in a project's life, or a finished artifact?)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The degree of completeness reached (or required) will also be dependent on the development process (e.g. waterfall,&#xD;
    iterative, etc.).&amp;nbsp; The levels of this artifact elaborate through degrees of completeness towards their completed&#xD;
    states while remaining synchronized and consistent with one another at each major project &quot;milestone&quot;.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Varying depth of detail&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    As well describing the operational aspect of a complete IT system, it is often helpful to develop this artifact showing&#xD;
    greater detail for particular parts of the system.&amp;nbsp; For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        This artifact may model a whole IT system as one or two nodes on the overall model, but a further more detailed&#xD;
        representation of parts of the IT system in a particular location may also be constructed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This artifact may model a single part of an IT system in detail without modeling the whole IT system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This artifact may include the same &quot;recurring pattern&quot; of nodes and/or connections, and, in this case, a separate&#xD;
        artifact may detail the recurring pattern and be referenced by the main artifact.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h5>&#xD;
    Cross-cutting viewpoints&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    This artifact and the logical and physical levels of this artifact may be the focus of a particular viewpoint, at any&#xD;
    degree of elaboration and refinement, to address the concerns of a particular stakeholder. These cross-cutting&#xD;
    viewpoints overlap with one another.&amp;nbsp; For example, views may be constructed on this artifact for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Application&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Technical&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Capacity&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Availability and Recovery&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Security and Privacy Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Operability and Operations Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Software Distribution and Installation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Distributed Data Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problem Identification and Management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        End User Support/Helpdesk&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Networking&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Accessibility&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        National Language Support&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Financial proprietary&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Archiving&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Such filtering does not generally change the elements in the artifact rather it simply enables a clearer focus on some&#xD;
    particular part of it.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Please refer to &quot;An Introduction to the IBM Views and Viewpoints Framework for IT Systems&quot; Whitepaper for further&#xD;
    details on the views and viewpoints framework including the relationship between base and cross-cutting views.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Linkages to other work products&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    As well as a linkage via Deployment Units with the functional aspect of architecture as embodied in the Component&#xD;
    Model, this artifact has influences and/or is strongly interdependent on other areas that cover the design of the&#xD;
    infrastructure that will implement the operational aspect of architecture. For example:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Network Design: affects the application design, middleware selection, component placement, security and privacy,&#xD;
        systems management and overall operational system control.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Platform Design; the detailed design and configuration of the platforms that will implement the nodes.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Storage Design; the detailed design and configuration of storage which may be shared across multiple platforms.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Site &amp;amp; Facilities Design; the detailed design and configuration of the site and facilities in the locations in&#xD;
        which nodes (implemented by platforms) are placed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems Management design; through its definition of how the IT system is spread out over locations and what&#xD;
        systems management components and nodes are needed at each location.&amp;nbsp; Selection of a systems management style&#xD;
        is an important decision, which determines: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                The cost of operations management&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The cost of software distribution&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The complexity of system management tooling&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Potential security and performance of the IT system (ability to satisfy the service level requirements)&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Existing or planned enterprise-wide IT infrastructure initiatives on which the target system will be&#xD;
        implemented.&amp;nbsp; For example, enterprise wide middleware decisions may well move function, which would otherwise&#xD;
        be duplicated across multiple applications, into a set of shared services, which are usually purchased or part of&#xD;
        an enterprise wide development effort.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact describes the operational distribution of a system's components (which may be grouped into deployment&#xD;
    units) onto nodes, the placement of nodes and users across locations, the connections between nodes necessary to&#xD;
    support the required interactions between components, in order to achieve the system's functional and non-functional&#xD;
    requirements within the constraints of technology, skills and budget.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Operational Modeling Terminology&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    This artifact's (and that of its contained artifacts) terminology is defined within the System Description Standard R3&#xD;
    Semantic Specification (see Guidance for link) which includes definitions for the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Actors (and workers) - the roles a user or an external system play with respect to the target system&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Locations - a geographical area or position.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Borders - representing the existing connection between two locations&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Components - modular units of functionality, which make this functionality available through an interface.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Deployment Units - a grouping of facets of a component that have similar characteristics.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connectors - enable the exchange of messages (interactions) between resource containers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interactions - identify the messages exchanged between one or two resource containers in the context of a&#xD;
        collaboration, and the sequencing of these messages via their associated send/receive events.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Nodes - a collection of components fulfilling a specific responsibility with a certain quality of service within&#xD;
        the target system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connections - supports the required connectivity between connectable model elements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Zones - an aggregation of a number of model elements with a common (sub-) set of values for a particular&#xD;
        non-functional requirement and/or non-functional characteristic.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Boundaries - associated with a change in value for a particular non-functional requirement and/or characteristic&#xD;
        between two model elements.&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Depending on the development approach adopted and/or the context, it can be very helpful to create levels of this&#xD;
    artifact.&amp;nbsp; The two basic levels of this artifact are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Logical&lt;/strong>:&amp;nbsp; This level describes the characteristics and capabilities of the operational aspect&#xD;
        of the system architecture in a &lt;strong>technology independent and product neutral&lt;/strong> manner.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Physical&lt;/strong>:&amp;nbsp; This level describes characteristics and capabilities of the operational aspect of&#xD;
        the system architecture in a &lt;strong>technology and product dependent&lt;/strong> manner.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Both levels of this artifact may be further described at three different sub-levels relating to the degree to which the&#xD;
    level has been sized:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Unsized&lt;/strong> (or unranged) - the technology and products are specified to support the components&#xD;
        deployed but not sized and without detailing how the system will achieve the service level characteristics.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Ranged&lt;/strong> - the technology and products are specified to support a bounded range of requirements for&#xD;
        a defined range of circumstances.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Sized&lt;/strong> - the technology and products are specified and sized to support the components deployed and&#xD;
        details how the system will achieve the service level characteristics.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-TLudjccBgltefvlmZZw0kg" name="user_support_specs,_BIak4eJmEeGhW_zi4ZlG6w" guid="-TLudjccBgltefvlmZZw0kg">
    <keyConsiderations>&lt;p>&#xD;
    Coordinate the User Support Specifications with the end user training material specifications to avoid having to cover&#xD;
    the same topics twice - unless it is on purpose.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In writing the User Support Specifications, re-use as much as possible of the:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Package Design Documentation&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Package Extension Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report Specifications&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interface Specifications&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In selecting the media for the user documentation take into the consideration the ease of maintenance, i.e., how will&#xD;
    the documentation be updated, is the documentation accessible, and how will it be distributed.&amp;nbsp; Should the&#xD;
    documentation be on-line on a server, and should some of it be kept in hard copy as a back up in case the server is&#xD;
    inaccessible?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This must be done in conjunction with the development of user training materials.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    The specifications are the work descriptions for the development of the various units of user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The User Support Specifications should cover:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The configuration of the standard package, including accessibility and package extensions that have been developed.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The reports and interfaces that have been developed. &#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How a combination of these will be used to support the client's business processes.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The specifications define the boundaries between the different units of user documentation, as well as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Content&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audience&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purpose&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Standards to be used, and the language(s)&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RxIwiMIbw5bijooPorp4rA" name="requirements_management_process_description,_BIbzAeJmEeGhW_zi4ZlG6w" guid="-RxIwiMIbw5bijooPorp4rA">
    <refinedDescription>&lt;p>&#xD;
    The Requirements Management Process Description describes the requirements artifacts, requirement types, their&#xD;
    respective requirements attributes, how requirements traceability will be managed, and specifies the information to be&#xD;
    collected and tracked. It also specifies how requirements changes will be managed, as well as addressing requirements&#xD;
    organization, tool automation, the necessary reports, views, and queries that will be generated and the related&#xD;
    processes for requirements and requirements change management.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nuV_fgwVmjlj3RPMQ-Gc_g" name="vision,_BIdBIeJmEeGhW_zi4ZlG6w" guid="-nuV_fgwVmjlj3RPMQ-Gc_g">
    <keyConsiderations>&lt;p>&#xD;
    It is good practice to keep this artifact brief, so you can release it to stakeholders as soon as possible, and to make&#xD;
    the artifact easy for stakeholders to read and understand. You can accomplish this by including only the most important&#xD;
    features and avoiding details of requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Projects that focus on product development might extend the marketing section and include a more detailed product&#xD;
    position statement that is based on their needs and research.&#xD;
&lt;/p></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WhVXNckte12AprRtSt0qFw" name="glossary,_BIePQeJmEeGhW_zi4ZlG6w" guid="-WhVXNckte12AprRtSt0qFw">
    <keyConsiderations>&lt;p>&#xD;
    Although listed as an &lt;i>output from&lt;/i> and an &lt;i>input to&lt;/i> tasks associated with the requirements discipline, this&#xD;
    artifact can be updated at any time and by any role as new terms are identified. The terms defined should be used&#xD;
    according to the recorded definitions in all project documentation so that all stakeholders can clearly see that terms&#xD;
    are being used consistently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    One of the primary decisions when developing&amp;nbsp;this artifact&amp;nbsp;is whether to have all terms in a single glossary&#xD;
    or to maintain terms in several glossaries, business terms artifacts, or models.&amp;nbsp;If terms are defined in multiple&#xD;
    places, you need to communicate all of those sources to the team and decide which take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It may be important, even in small projects, to reference and use existing broader glossaries, business terms&#xD;
    artifacts, or data models, where they exist.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Industry- and organization-wide glossaries may be referenced, and compliance with such specific chosen standards may be&#xD;
    required.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    This artifact&amp;nbsp;helps you avoid miscommunication by providing two essential resources:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A central location to look for terms and abbreviations that are new to development team members&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definitions of terms that are used in specific ways within the domain&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Definitions for the glossary terms come from several sources, such as requirements documents, specifications, and&#xD;
    discussions with stakeholders and domain experts.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vstQ2U09j3TBzQNB1GvzkQ" name="storyboard,_BIfdYeJmEeGhW_zi4ZlG6w" guid="-vstQ2U09j3TBzQNB1GvzkQ">
    <keyConsiderations>&lt;p>&#xD;
One or multiple storyboards may be defined for a use case, thereby supporting a use-case-driven approach to software engineering, as well as providing an excellent means to validate the user's (actor's) expectations of these use cases and their role in the use-case flows of events.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;span class=&quot;Apple-style-span&quot; style=&quot;WORD-SPACING: 0px; FONT: 13px arial; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; TEXT-ALIGN: left; orphans: 2; widows: 2; webkit-border-horizontal-spacing: 0px; webkit-border-vertical-spacing: 0px; webkit-text-decorations-in-effect: none; webkit-text-size-adjust: auto; webkit-text-stroke-width: 0&quot;>&#xD;
Storyboards support requirements elicitation by enabling stakeholders to discover and clarify unknown or unclear requirements, and to provide feedbacks.&lt;/span></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8hMu6PWchcARH2e5xHAprA" name="system_wide_requirements,_BIgrgeJmEeGhW_zi4ZlG6w" guid="-8hMu6PWchcARH2e5xHAprA">
    <keyConsiderations>&lt;ul>&#xD;
    &lt;li>&#xD;
        When you document system-wide requirements, ensure that the needs of all of the stakeholders are represented. In&#xD;
        particular, include the needs of those who are responsible for maintaining or supporting the system after it is&#xD;
        delivered.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Typically, there are some overlaps and gray areas between system-wide requirements and other requirements work&#xD;
        products. For example, the authorization behavior of a system can be specified as use cases or as statements within&#xD;
        system-wide requirements. The overall driving need is that no important requirements are missed or duplicated, and&#xD;
        that there is an agreed upon approach for capturing and processing every type of requirement.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System-wide requirements originate from many places. Documenting the source of the requirement is particularly&#xD;
        important when you separate externally mandated requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Requirements are often thought of as &quot;Qualitative&quot; (specifying a quality or desirable characteristic) versus&#xD;
        &quot;Quantitative&quot; (specifying a quantity). Qualitative requirements can sometimes be elaborated into quantitative&#xD;
        requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A good quality requirement is one that you can verify, either through testing or some other objective evaluation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        You must evaluate system-wide requirements for cost, schedule impact, and level of contribution to business goals.&#xD;
        Based on your evaluation, the system-wide requirements should be iteratively challenged, defended, and amended.&#xD;
    &lt;/li>&#xD;
&lt;/ul></keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zQAEtWK3KckLzq8oYtIZig" name="actor,_BIju0eJmEeGhW_zi4ZlG6w" guid="-zQAEtWK3KckLzq8oYtIZig">
    <keyConsiderations>&lt;p>&#xD;
    This&amp;nbsp;artifact concentrates on the classes of person and other systems that interact with the system under&#xD;
    consideration. Not every role in an organization becomes an actor.&amp;nbsp;However, work products that describe&#xD;
    organizational roles may be useful sources for coming up with actors.&#xD;
&lt;/p></keyConsiderations>
    <refinedDescription>&lt;p>&#xD;
    Actors represent different types of users. An actor is anyone or anything that exchanges data with the system. An actor&#xD;
    can be a user, external hardware, or another system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The difference between an actor and an individual system user is that an actor represents a particular class of users,&#xD;
    rather than an actual user.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Several different individual users can play the same role, which means that they can be represented by the same, single&#xD;
    actor. In that case, each individual user constitutes an instance of the actor.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>However,&#xD;
    in some situations, only one person plays the role modeled by an actor. For example, there may be only one individual&#xD;
    in the role of system administrator for a rather small system.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 6pt 0pt&quot;>&#xD;
    &lt;span     style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>The&#xD;
    same user can also act as several actors (that is, the same person can take on different roles).&lt;/span>&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
</xmi:XMI>
