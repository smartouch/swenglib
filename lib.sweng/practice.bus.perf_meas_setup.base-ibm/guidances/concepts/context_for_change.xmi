<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-j9GH_p1Fyfzqu-Nl0jaHKw" name="new_concept,_8IIG4C3ZEd6n2ZBJV2V0uQ" guid="-j9GH_p1Fyfzqu-Nl0jaHKw" changeDate="2009-07-29T12:07:17.687-0700" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    &lt;strong>Main Description&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Change initiatives and their associated measures are unique to the environments of an organization. Therefore, the&#xD;
    decisions for what the right measures for an organization at any particular time must be made within a defined context.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Scale &amp;amp; Complexity&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;em>Complexity&lt;/em> is usually associated with things such as lines of code, function points, or number of use cases.&#xD;
    &lt;em>Scale&lt;/em> relates to team size. The larger the team, the more complex the human dynamics become. Therefore, adding&#xD;
    people to projects inherently makes the projects more complex.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Addressing scale and complexity enables you to leverage these two dimensions in a way that most organizations never do&#xD;
    when implementing a change initiative. That helps you introduce the right set of changes to the right set of projects.&#xD;
    Rather than treating all projects as the same, you need to recognize key differences and apply the right changes to the&#xD;
    right projects.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Variance&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Variances are those things that affect the outcome of a project. Variances may be characterized according to several&#xD;
    criteria:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Risk.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Team member skills.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An organization's ability or inability to deliver.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Outsourcing.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;strong>Context Mapping&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Not addressing variance with scale when introducing a change initiative limits an organization's ability to introduce&#xD;
    the right set of changes to the right set of projects. Rather than treating all projects as the same, recognize key&#xD;
    differences and apply the right changes to the right projects. Context determines the focus for improvement.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the chart below, variance and scale are both represented as progressing from low or small to high. A project&#xD;
    considered to be small in scale and have low variance if fairly predictable and, typically, needs to work only on the&#xD;
    efficiency of each team member to complete the project on time and within budget. Conversely, a project that is very&#xD;
    large with high variance has more to focus on than the efficiency of each team member.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;334&quot; alt=&quot;Variance and scale from low to high&quot; src=&quot;./resources/contextforchange1.jpg&quot; width=&quot;580&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    All team sizes, whether the variance is low or high, focus on efficiency improvement as a business driver. As the team&#xD;
    size grows, the team needs to maintain agility at scale or they will not become more efficient. The context of agility&#xD;
    changes with the context of the project. Large, highly variable teams must also focus on achieving a level of&#xD;
    predictability that increases confidence within the organization that they will finish the project within an acceptable&#xD;
    range for the schedule and within budget.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Context determines the focus on the preferred practices. Different practices apply to different contexts, and team&#xD;
    effectiveness varies based on which practices the team focuses on, as the next figure shows.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;table title=&quot;contextforchange2&quot; style=&quot;WIDTH: 913px; HEIGHT: 243px&quot; cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;913&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p align=&quot;center&quot;>&#xD;
                    &lt;i>Predictability&lt;/i>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p>&#xD;
                    &lt;strong>Variance: Cost, Schedule, ...&lt;/strong>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Requirements Elicitation&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Evolutionary Architecture&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Risk-value Lifecycle&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Requirements Management&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Modeling Practices&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p align=&quot;center&quot;>&#xD;
                    &lt;i>Agility&lt;/i>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p align=&quot;center&quot;>&#xD;
                    High&lt;br />&#xD;
                    Medium&lt;br />&#xD;
                    Low&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Iterative Development&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Release Planning&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Shared Vision&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Architecture Management&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Requirements Elicitation&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Iterative Development&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Release Planning&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;p align=&quot;center&quot;>&#xD;
                    &lt;i>Efficiency&lt;/i>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Test Management&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Change and Release Management&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Continuous Integration&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        Test Management&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Change and Release Management&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        Continuous Integration&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;strong>Scale: Application Size, Team Size, ...&lt;/strong>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;p align=&quot;center&quot;>&#xD;
                    Small -- Medium -- High&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;br />&#xD;
&lt;p>&#xD;
    &lt;em>Serialized&lt;/em> development (also known as &lt;em>waterfall&lt;/em> development) works well in a low-risk environment but&#xD;
    does not effectively enable the management of risk, so there is a penalty for using serialized development in the upper&#xD;
    half.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;em>Agile&lt;/em> development works for all contexts, but the biggest return for agile development is in the upper half.&#xD;
    Also, the type of agile development that is the most effective varies by context. Disciplined agile development, such&#xD;
    the scrum process and XP, works primarily for small projects, because they lack good mechanisms for handling large&#xD;
    team, distribution, and outsourcing arrangements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    But when you add strong governance and other scaling mechanisms to these methods -- what we call &lt;em>agility at&#xD;
    scale&lt;/em> -- you can effectively operate on the right half. Some development approaches move you left within the&#xD;
    context of a project. The strong focus on risk mitigation allows you to operate as if you were in the lower half after&#xD;
    you have completed 20-40% of the project. The agile development notion of strong automation of change, build, and test&#xD;
    practices further enables a team to operate as if they were a smaller team, thereby bringing them to the left of this&#xD;
    chart.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Capturing baselines of executable code early allows for many small component teams that can now operate and gain the&#xD;
    efficiencies as if they were in the lower-right quadrant of the chart, leading to improved software economics.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img height=&quot;335&quot; alt=&quot;Measures and Practices for a given context&quot; src=&quot;./resources/contextforchange3.jpg&quot;     width=&quot;567&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The measures to implement are associated with the practices chosen for a given context. Cost-related measures will be&#xD;
    relevant in all areas. Agile development measures are crucial, especially in the upper two thirds. Predictability&#xD;
    measures are crucial for the upper third: projects that are of medium to high variance and medium to high scale.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
