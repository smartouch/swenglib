<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-K5uBr925-BXDSrmA2ym_mw" guid="-K5uBr925-BXDSrmA2ym_mw" changeDate="2010-08-27T13:28:37.510-0700" version="7.5.0">
  <mainDescription>&lt;table bordercolor=&quot;#ffffff&quot; height=&quot;299&quot; width=&quot;100%&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;td width=&quot;24%&quot; height=&quot;293&quot;>&#xD;
                &lt;p dir=&quot;ltr&quot; align=&quot;left&quot;>&#xD;
                    This principle explain why software development greatly benefits from being iterative. An iterative&#xD;
                    process&amp;nbsp;makes it possible to easily accommodate change,&amp;nbsp;to obtain feedback and factor it into&#xD;
                    the project,&amp;nbsp;to reduce&amp;nbsp;risk early, and&amp;nbsp;to adjust&amp;nbsp;the process dynamically.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;3%&quot; height=&quot;293&quot;>&#xD;
                &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;73%&quot;>&#xD;
                &lt;table bordercolor=&quot;#000000&quot; height=&quot;289&quot; cellpadding=&quot;10&quot; width=&quot;100%&quot; border=&quot;3&quot;>&#xD;
                    &lt;tbody>&#xD;
                        &lt;tr>&#xD;
                            &lt;td width=&quot;18%&quot; height=&quot;79&quot;>&#xD;
                                &lt;strong>Benefits&lt;/strong>&#xD;
                            &lt;/td>&#xD;
                            &lt;td width=&quot;82%&quot;>&#xD;
                                &lt;ul>&#xD;
                                    &lt;li>&#xD;
                                        Early risk reduction&#xD;
                                    &lt;/li>&#xD;
                                    &lt;li>&#xD;
                                        Higher predictability throughout the project&#xD;
                                    &lt;/li>&#xD;
                                    &lt;li>&#xD;
                                        Trust among stakeholders&#xD;
                                    &lt;/li>&#xD;
                                &lt;/ul>&#xD;
                            &lt;/td>&#xD;
                        &lt;/tr>&#xD;
                        &lt;tr>&#xD;
                            &lt;td height=&quot;98&quot;>&#xD;
                                &lt;strong>Pattern&lt;/strong>&#xD;
                            &lt;/td>&#xD;
                            &lt;td>&#xD;
                                &lt;ol>&#xD;
                                    &lt;li>&#xD;
                                        Enable feedback by delivering incremental user value in each iteration.&#xD;
                                    &lt;/li>&#xD;
                                    &lt;li>&#xD;
                                        Adapt your plans using an iterative process&#xD;
                                    &lt;/li>&#xD;
                                    &lt;li>&#xD;
                                        Embrace and manage change&#xD;
                                    &lt;/li>&#xD;
                                    &lt;li>&#xD;
                                        Attack major technical, business and programmatic risks early&#xD;
                                    &lt;/li>&#xD;
                                &lt;/ol>&#xD;
                            &lt;/td>&#xD;
                        &lt;/tr>&#xD;
                        &lt;tr>&#xD;
                            &lt;td height=&quot;98&quot;>&#xD;
                                &lt;strong>Anti-Patterns&lt;/strong>&#xD;
                            &lt;/td>&#xD;
                            &lt;td>&#xD;
                                &lt;ul>&#xD;
                                    &lt;li>&#xD;
                                        Plan the whole lifecycle in detail, track variances against plan (can actually&#xD;
                                        contribute to project failure).&#xD;
                                    &lt;/li>&#xD;
                                    &lt;li>&#xD;
                                        Assess status in the first two thirds of the project by relying on reviews of&#xD;
                                        specifications, rather than assessing status of test results and demonstrations of&#xD;
                                        working software.&#xD;
                                    &lt;/li>&#xD;
                                &lt;/ul>&#xD;
                            &lt;/td>&#xD;
                        &lt;/tr>&#xD;
                    &lt;/tbody>&#xD;
                &lt;/table>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;h4>&#xD;
    Discussion&amp;nbsp;&amp;nbsp;&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    There are several imperatives underlying this principle. The first one is that we must&amp;nbsp;&lt;em>deliver incremental&#xD;
    value to enable early and continuous feedback&lt;/em>. This is done by dividing our project into a set of iterations. In&#xD;
    each iteration, we perform some requirements, design, implementation, and testing of our application, thus producing a&#xD;
    deliverable that is one step closer to the final solution. This allows us to demonstrate the application to end users&#xD;
    and other stakeholders, or have them use the application directly, enabling them to provide rapid feedback on how we&#xD;
    are doing. Are we moving in the right direction? Are stakeholders satisfied with what we have done so far? Do we need&#xD;
    to change the features implemented so war?&amp;nbsp; And finally, what additional features need to be implemented to add&#xD;
    business value? By being able to satisfactorily answer these questions, we are more likely to build trust among&#xD;
    stakeholders&amp;nbsp;that&amp;nbsp;the system&amp;nbsp;we are developing&amp;nbsp;will address their needs. We are also less likely to&#xD;
    over-engineer our approach or to&amp;nbsp;add capabilities that are not useful to the end user.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The second imperative is to leverage demonstrations and feedback to &lt;em>adapt our plans&lt;/em>. Rather than relying on&#xD;
    assessing specifications, such as requirements specifications, design models, or plans, we need instead to assess how&#xD;
    well the code developed thus far actually works. This means that me must use&amp;nbsp;test results and demonstrations of&#xD;
    &amp;nbsp;working code to stakeholders to determine how well we are doing. This provides a good understanding of where we&#xD;
    are, how fast the team is progressing, and whether we need to make course corrections to successfully complete the&#xD;
    project. We can then use this information to update the overall plan for the project and develop detailed plans for the&#xD;
    next iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The third underlying imperative is to &lt;em>embrace and manage change&lt;/em>. Today's applications are too complex for the&#xD;
    requirements, design, implementation, and test to align perfectly the first time through. Instead, the most effective&#xD;
    application development methods embrace the inevitability of change. Through early and continuous feedback, we learn&#xD;
    how to improve the application, and the iterative approach provides us with the opportunity to implement those changes&#xD;
    incrementally. All this change needs to be managed by having the processes and tools in place so we can effectively&#xD;
    manage change without hindering creativity.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The fourth imperative underlying this principle is the need to &lt;em>drive out key risks early in the lifecycle&lt;/em>, as&#xD;
    illustrated in the diagram below.. We must address the major technical, business, and programmatic risks as early as&#xD;
    possible, rather than postponing risk resolution towards the end of the project. This is done by continuously assessing&#xD;
    what risks we are facing, and addressing the top remaining risks in the next iteration. In successful projects, early&#xD;
    iterations involve stakeholder buy-in on a vision and high-level requirements, including architectural design,&#xD;
    implementation and testing to mitigate technical risks. It is also important to retain information required to force&#xD;
    decisions around what major reusable assets or commercial-of-the-shelf (COTS) software to use.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Diagram illustrating that an iterative process can achieve faster risk reduction than a waterfall process&quot;     src=&quot;./resources/bp_fig4.gif&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Risk Reduction Profiles for Waterfall and Iterative Developments&lt;/strong>&lt;em>.&lt;/em>&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    A major goal with iterative development is to reduce risk early on. This is done by analyzing, prioritizing, and&#xD;
    attacking top risks in each iteration (as described in Iterative Development). Additional guidance&amp;nbsp;on&#xD;
    helping&amp;nbsp;organize the development lifecycle around iterations is provided in&amp;nbsp;concepts such as&amp;nbsp;Iteration&#xD;
    and&amp;nbsp;Phase.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
