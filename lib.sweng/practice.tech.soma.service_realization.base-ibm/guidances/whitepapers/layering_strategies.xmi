<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:GuidanceDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-dK8y1BGfGyl4_rKNObpyIQ" name="layering_strategies,_l4HhwGWuEd6Zd-lbA790BQ" guid="-dK8y1BGfGyl4_rKNObpyIQ" changeDate="2009-07-31T15:09:39.156-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Abstract&#xD;
&lt;/h3>&#xD;
&lt;p> Several techniques exist for decomposing software systems. &lt;em>Layering &lt;/em>is &#xD;
  one example, and it is described in this paper. Such techniques address two &#xD;
  main concerns: most systems are too complex to comprehend in their entirety, &#xD;
  and different perspectives of a system are required for different audiences. &#xD;
&lt;/p>&#xD;
&lt;p> Layering has been adopted in numerous software systems. However, layering &#xD;
  is often misunderstood and incorrectly applied. This paper clarifies what is &#xD;
  meant be layering, and discusses the impact of applying different layering strategies. &#xD;
&lt;/p></mainDescription>
  <attachments>resources/tp199_layering_strategies.pdf</attachments>
</org.eclipse.epf.uma:GuidanceDescription>
