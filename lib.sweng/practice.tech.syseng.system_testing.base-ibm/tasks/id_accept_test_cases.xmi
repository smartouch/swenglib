<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-JLj9bTfsrR2WwpDdoYDnLA" name="id_accept_test_cases,_S2srgOb7EeGcDsTeRQzr_Q" guid="-JLj9bTfsrR2WwpDdoYDnLA" changeDate="2012-08-22T10:13:14.107-0700">
  <mainDescription>&lt;p>&#xD;
    &lt;strong>Define test context and environment&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As with each level of testing, the first step in performing System Acceptance Testing is to define what will be tested,&#xD;
    the System Under Test (SUT). In order to verify and validate the entire system, the SUT encompasses the complete,&#xD;
    deliverable system that includes both software and hardware. Acceptance tests frequently require a test bench to&#xD;
    stimulate system’s hardware inputs and respond to its outputs. In addition, acceptance tests often require an&#xD;
    environmental simulator that closes the loop between system outputs and inputs.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Define&amp;nbsp;test cases&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Acceptance test cases require fall into two categories: verification tests and validation test. Verification tests&#xD;
    confirm that the product meets the requirements. Verify the system’s key capabilities. The concept of operations and&#xD;
    system level use cases refine these capabilities. For each test case, define one or more test scripts so that exercise&#xD;
    the capability. It is important to specify the scenario completely, including exception conditions. Acceptance testing&#xD;
    generally requires that the customer, product manager, and quality assurance review and approve the test cases.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Validation tests show that the requirements the system was built from are correct. These test cases require the&#xD;
    developer to think about how the product performs in its environment. Validation test cases frequently expose incorrect&#xD;
    or incomplete requirement conditions. Therefore, these test cases should be identified as early in the development&#xD;
    lifecycle as possible to reduce the propagation of the requirement defects.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:TaskDescription>
