<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-MixOq0vpxBWAZFRQFilTsg" name=",_hN0UoOWTEeGKRrt3T5Dstw" guid="-MixOq0vpxBWAZFRQFilTsg" changeDate="2012-08-22T10:32:26.091-0700" version="7.5.1">
  <mainDescription>&lt;p>&#xD;
    &lt;strong>Define test context&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The first step in performing System Integration test is to define what will be tested, the System Under Test (SUT).&#xD;
    Many times, the SUT will encompass the complete system. In other cases, it will encompass a subset of&#xD;
    subsystem/components that interact together to meet some capability. Often, System Integration testing requires that&#xD;
    the tests run on the target device or a simulator. This environment restriction requires a special software build with&#xD;
    all required components. If all required parts are not available, it may be possible to use a simulator or build&#xD;
    special testing components for a subsystem.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Define test cases&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Identify test cases by identifying the functionality you are building. Each test case defines a specific capability.&#xD;
    This functionality may be described by a use case, an activity diagram or flow chart, a state chart, or a set of&#xD;
    requirements. For each test case, define one or more test scripts so that the capability is fully exercised. It is&#xD;
    important to specify the scenario completely, including exception handling conditions.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:TaskDescription>
