<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-ByvZEzY8T9MCCURKiWz5vg" name="adopt_change_mgmt_practice,_kHilsA1VEd2_YZgLr0B-dw" guid="-ByvZEzY8T9MCCURKiWz5vg" changeDate="2008-09-09T10:46:33.125-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Getting started (small deployment)&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Most organizations have change control environments available that can be adopted and adapted for a project's use. The&#xD;
    key considerations for a project are:&#xD;
&lt;/p>&#xD;
&lt;ul class=&quot;noindent&quot;>&#xD;
    &lt;li>&#xD;
        What work products and kinds of changes are controlled by the process? Requirements? Project plans? Baselined&#xD;
        implementations? See &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../practice.mgmt.formal_change_mgmt.base-ibm/guidances/examples/example_change_types_16A2AABA.html&quot;&#xD;
        guid=&quot;_YnLqgGljEd2b-p2CJEmo4w&quot;>Example: Types of Changes&lt;/a>.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What kinds of changes, if any, can be done outside of this process? Corrections to typos? Minor defect fixes? Who&#xD;
        decides? Determine if there is a need for a streamlined &quot;fast-path&quot; process for small, low-risk changes.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What types of change requests should you manage: defect, &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../../practice.mgmt.formal_change_mgmt.base-ibm/guidances/termdefinitions/enhancement_request_def_A3B41673.html&quot;&#xD;
         guid=&quot;_bKncAGrhEd23U-t8W6Ujmw&quot;>Enhancement Request&lt;/a>, new feature?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who participates in this process (who can submit, who can approve, and so on)?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How often are changes reviewed?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What metrics are needed? How are they used?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    A good rule of thumb is to have as much formality as you require, and no more. Generally, it is most efficient to&#xD;
    minimize formal change control to highly visible features, and allow the project team to manage lower-level details&#xD;
    with a minimum of overhead.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Getting Started (large scale deployment)&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    If the scope of adopting change control is a multiple-project, multiple-organization effort, or if a major tooling&#xD;
    purchase is required, then you may need to treat the roll-out of the process as a project in its own right. The&#xD;
    following are considerations that may apply.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    1. Scope&#xD;
&lt;/p>&#xD;
&lt;blockquote dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;p>&#xD;
        The first step is to define the scope and the boundaries of the change management process. In addition to the&#xD;
        questions applicable to small deployments, consider the following:&#xD;
    &lt;/p>&#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            What kinds of work products are mandated to be controlled by the process? Which are optionally controlled by&#xD;
            this process?&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            What kinds of changes, if any, are mandated as part of the process?&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Who participates in this process? &#xD;
            &lt;ul>&#xD;
                &lt;li>&#xD;
                    Is it open to customers and partners (affects architecture, security, and licensing)?&#xD;
                &lt;/li>&#xD;
                &lt;li>&#xD;
                    Who are the stakeholders and the users? Will the process be used by all of the departments in the&#xD;
                    organization? Will it be used for all of the products? Who in the organization will be able to view the&#xD;
                    status of requests and projects as they are analyzed, prioritized, designed, developed, tested, and&#xD;
                    deployed?&#xD;
                &lt;/li>&#xD;
                &lt;li>&#xD;
                    How are resources allocated? Is there a separate project office that needs to be involved in the&#xD;
                    process?&#xD;
                &lt;/li>&#xD;
            &lt;/ul>&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            What standards, if any, do you need to comply with, such as Capability Maturity Model&lt;span&#xD;
            style=&quot;FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot;>(R)&lt;/span>&#xD;
            Integration (CMMI) and the Sarbanes-Oxley Act(SOX)?&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Does the change management environment need to integrate to other systems (version control, build management,&#xD;
            help desk, and so on)?&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            What metrics, if any, are mandated? How are these metrics used?&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/blockquote>&#xD;
&lt;p dir=&quot;ltr&quot;>&#xD;
    2. Requirements&#xD;
&lt;/p>&#xD;
&lt;div dir=&quot;ltr&quot; style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            Based on the defined scope, define the requirements for the process. Make sure to cover the needs of both the&#xD;
            stakeholders and the users.&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Agreement on the requirements and priorities must be achieved with all of the stakeholders.&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            A sponsorship of CxO level will help to solve disagreements.&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    3. Architecture&#xD;
&lt;/p>&#xD;
&lt;div dir=&quot;ltr&quot; style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            Architecture (database, Web server, integration, and so on).&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Change types, work items, stateless record-types (for BOM). The best way to describe this is in a class&#xD;
            diagram.&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Data. The best way to describe the data is as attributes of classes (if there are no special requirements,&#xD;
            start with the basic recommended fields).&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Workflow. The best way to describe this is as a state transition diagram or activity diagram (consider Unified&#xD;
            Workflow for all changes, or private for each change type).&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Roles (actions allowed, fields allowed).&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Integrations (How to integrate? API, import/export, e-mail).&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    4. Implement&#xD;
&lt;/p>&#xD;
&lt;div dir=&quot;ltr&quot; style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            Build and customize the schema.&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Test and interact with power users.&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Document the process (tailoring this practice can be a good starting point).&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    5. Transition and Deploy&#xD;
&lt;/p>&#xD;
&lt;div dir=&quot;ltr&quot; style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px&quot;>&#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            Installations servers and clients (if relevant)&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Configuration&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Acceptance tests&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Legacy data import and cleansing&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Training&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Mentoring&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Ongoing fixes and enhancements&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div>&#xD;
&lt;h3>&#xD;
    Common Pitfalls&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    &lt;strong>Too much process&lt;/strong>&lt;br />&#xD;
    The overhead of the change process is much greater than the effort required to just make the changes.&lt;br />&#xD;
    &lt;br />&#xD;
    &lt;strong>Too little process&lt;/strong>&lt;br />&#xD;
    The results of too little process are incomplete changes sets. Incomplete change sets can result in additional defects&#xD;
    and project scope creep, which in turn can result in missed deadlines.&lt;br />&#xD;
    &lt;br />&#xD;
    &lt;strong>Lack of agreement on, or understanding of, the process&lt;/strong>&lt;br />&#xD;
    When stakeholders do not understand or agree with the process, the results can be dashed expectations and conflict.&#xD;
    When development teams do not understand or agree with the process, then developers are more likely to bypass the&#xD;
    process.&lt;br />&#xD;
    &lt;br />&#xD;
    &lt;strong>Inadequate tool support&lt;/strong>&lt;br />&#xD;
    When there is inadequate tool support, users are more likely to abandon the process due to the difficulty of managing,&#xD;
    navigating, and finding information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Change management is disconnected from configuration management&lt;/strong>&lt;br />&#xD;
    When change management is disconnected from configuration management, it becomes impossible to determine the proper&#xD;
    configuration that implements a change, and to identify which changes are in a configuration.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
