<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-O2rkX5Rj6G0KRi1uxM6lfA" name="new_guideline,_FUPRoGlMEd2b-p2CJEmo4w" guid="-O2rkX5Rj6G0KRi1uxM6lfA" changeDate="2008-08-13T08:33:45.670-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Emergency Change Management&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The procedures you put in place to handle emergency changes should be flexible enough to facilitate rapid resolution of&#xD;
    the problem, including documentation of who is authorized to make emergency changes to the application, and how to get&#xD;
    in touch with these individuals. You should have either a sufficient number of people who can resolve emergencies, or&#xD;
    those people should be easily accessible at all times to prevent a roadblock in the problem resolution process.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is very important to maintain both communication and the integrity of documentation through an emergency change.&#xD;
    Documenting the steps taken to resolve the problem is of paramount importance.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You should take into consideration whether the change will resolve the existing problem, as well as whether the change&#xD;
    will cause other problems. For an emergency change process, the steps you need to consider are described following.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Issue determination&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    It is usually obvious when an emergency change is required in a production environment. However, exactly what change is&#xD;
    required may not be immediately clear. When taking corrective action, it is imperative that you implement only one change at a&#xD;
    time. Otherwise, if the problem is resolved by multiple changes, it is impossible to pinpoint which change actually&#xD;
    fixed the problem. Worse, if other problems are introduced, it is impossible to determine which change was the cause&#xD;
    of the new fault. Each change should go through the full process outlined previously before you begin on the next change. If&#xD;
    a change is shown to have no effect, you should back out of it before beginning the next change (the single exception&#xD;
    being when the initial change is a prerequisite to the next change under consideration).&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Limited risk assessment&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In most cases, the amount of risk assessment done in an emergency situation is directly proportional to the scope of&#xD;
    the change, and inversely proportional to the effect of the outage. Ultimately, risk assessment is the responsibility&#xD;
    of the support person implementing the change. For this, he or she should rely on their own personal experience, as&#xD;
    well as that of associated support personnel. Many of the ideas given in the previous section about change management best&#xD;
    practices can be adapted to the emergency change environment, but on a more limited scale. Finally, as part of the&#xD;
    limited risk assessment, you should determine which users may be affected by the change.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Communication&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Although it is not always possible to notify all users of all changes (especially in emergency situations), the user&#xD;
    community will certainly appreciate any warning you can provide. You should also communicate the details of any&#xD;
    emergency changes to the change manager, allowing him to maintain metrics on emergency changes and root causes. The&#xD;
    information may also affect the scheduling or rollout of future changes.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Documentation&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Updating documentation is critical to ensure valid, up-to-date information. During unplanned changes, it is easy to&#xD;
    forget to make updates because of the frantic nature of emergencies. However, undocumented change solutions often&#xD;
    result in increased downtime if the solution is unsuccessful.&lt;br />&#xD;
    It helps to document changes before they are made in emergency situations from a central location, perhaps at the&#xD;
    change manager level. If a central support organization does not exist to document changes before they occur, different&#xD;
    individuals may make changes at the same time, not knowing about each other's activities.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Implementation&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    If the process of assigning risk and documentation occurs prior to the implementation, the actual implementation should&#xD;
    be straightforward. Beware of the potential for change coming from multiple support personnel without their knowing&#xD;
    about each other's changes. This scenario can lead to increased potential downtime and misinterpretation of the&#xD;
    problem.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Test and evaluation&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In this phase, the person who initiated the change is responsible for ensuring that the emergency change had the&#xD;
    desired effect and if not, restarting the emergency change process. Steps to take in the investigation of the change&#xD;
    include:&#xD;
&lt;/p>&#xD;
&lt;div style=&quot;MARGIN-LEFT: 2em&quot;>&#xD;
    &lt;ol>&#xD;
        &lt;li>&#xD;
            Observe and document the impact of the change on the problem.&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Observe and document any side effects of the change. &#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Determine whether the problem has been resolved, and if so, make sure that all of the necessary documentation occurs to&#xD;
            properly reflect the change. &#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            If the change is unsuccessful, back out, and continue the emergency change process until the problem is&#xD;
            resolved or a work-around is in place.&#xD;
        &lt;/li>&#xD;
    &lt;/ol>&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    Once the change has been deemed successful, send all emergency change documentation to the change request manager for&#xD;
    review and documentation by the change control team. The change request manager should coordinate a post-mortem&#xD;
    evaluation of the problem to determine potential improvements to prevent future emergency changes of this type. The&#xD;
    change request manager should also bring the change request to engineering or architecture experts for review, and&#xD;
    allow them the opportunity to change solution templates, standard software versions, or designs to better meet the&#xD;
    goals or requirements of your organization.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Performance indicators for Change Management&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    It is important for you to be able to measure the success of your change management process. The best mechanism is&#xD;
    establishing some performance indicators. These indicators should be reviewed regularly to ensure that change planning&#xD;
    and change management are working well.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Change Management metrics by functional group&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Include the percentage and quantity of change success by functional group and risk level in your change management&#xD;
    metrics. Emergency changes should be identified separately in the metrics by functional group, including the success&#xD;
    rate for attempted fixes. You should contact the user identified on the change request form following the change to get&#xD;
    an understanding of change success.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Change history archive&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The change coordinator is also responsible for archiving the change history. For archival purposes, creating a spreadsheet with columns for&#xD;
    functional group success and failure, and rows for the months, is sufficient. Change history archives can&#xD;
    help identify current issues based on past change rates and available resources. The information can also be used to&#xD;
    investigate change rates in general for overall planning purposes.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Targeting change success&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    To target change success, you should start with a baseline of change management metrics. The change coordinator can then&#xD;
    identify potential issues and set overall goals.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Periodic Change Management performance meeting&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    It is important to review the metrics you collect monthly, including the following metrics: &#xD;
	&lt;ul>&#xD;
	&lt;li>Change quantity and risk level&lt;/li>&#xD;
    &lt;li>Change failure quantity and post mortem evaluations&lt;/li>&#xD;
	&lt;li>Emergency changes and post mortem evaluations&lt;/li>&#xD;
	&lt;li>Change management goals&lt;/li>&#xD;
	&lt;li>Undocumented changes&lt;/li>. &lt;br />&#xD;
	The change request manager should review the metrics and report to the&#xD;
    appropriate teams for improvement.&lt;br />&#xD;
    &lt;br />&#xD;
	&lt;/ul>&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
