<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-qLOvh_iDbM12sc4QCcLeKw" name="identify_targets_test,_XL4SoHE4Edy8Ac588DXPCQ" guid="-qLOvh_iDbM12sc4QCcLeKw" changeDate="2007-12-20T12:34:42.281-0800" version="7.2.0">
  <sections xmi:id="_gg1MYHa1Edyn2eJAAk3RHw" name="Determine What Software Will Be Implemented" guid="_gg1MYHa1Edyn2eJAAk3RHw">
    <sectionDescription>&lt;p>&#xD;
    Using the Iteration Plan and other available sources, identify the individual software items that the development team&#xD;
    plan to produce for the forthcoming Iteration. Where the development effort is distributed to teams in various&#xD;
    locations, you may need to discuss the development plans with each team directly. Check to see whether any development&#xD;
    is subcontracted, and use whatever channels are available to you to gather details of the subcontractor's development&#xD;
    effort.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As well as new software, also note changes to infrastructure and shared components. These changes may effect other&#xD;
    dependent or associated software elements produced in previous development cycles, making it necessary to test the&#xD;
    effect of these changes on those elements. For similar reasons, you should identify any changes and additions to&#xD;
    third-party components that the development effort intends to make use of. This includes shared components, base or&#xD;
    common code libraries, GUI widgets, persistence utilities, and so on. Review the software architecture to determine&#xD;
    what mechanism are in use that may be effected by third-party component changes.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_i95EsHa1Edyn2eJAAk3RHw" name="Identify Candidate System Elements to Be Tested" guid="_i95EsHa1Edyn2eJAAk3RHw">
    <sectionDescription>&lt;p>&#xD;
    For each identified test motivator, examine the list of software items to delivered as part of this development cycle.&#xD;
    Make an initial list that excludes any items that cannot be justified as useful in terms of satisfying the test&#xD;
    motivators. Remember to include commercially-available software, as well as that to be developed directly by the&#xD;
    project development team.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    You will also need to consider what impact the various target deployment environments will have on the elements to be&#xD;
    tested. Your list of candidate system elements should be expanded to include both the software being developed, and the&#xD;
    candidate elements of the target environment. These elements will include hardware devices, device-driver software,&#xD;
    operating systems, network and communications software, and third-party base software components (for example, eMail&#xD;
    client software, Internet browsers, and so on). They also include various configurations and settings related to the&#xD;
    possible combinations of all of these elements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Where you have identified important target deployment environments, you should consider recording this information by&#xD;
    creating or updating one or more outlined Test Environment Configurations. This outline should provide a name and brief&#xD;
    description, and enumerate the main requirements or features of the configuration. Avoid spending a lot of time on&#xD;
    these outlines, because the list of requirements and features will be subsequently detailed in &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../practice.tech.independent_testing.base-ibm/tasks/structure_test_env_configuration_431EBC72.html&quot;&#xD;
    guid=&quot;_Ij_xUHE6Edy8Ac588DXPCQ&quot;>Task: Structure Test Environment Configuration&lt;/a>.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_llq_QHa1Edyn2eJAAk3RHw" name="Refine the Candidate List of Target Items" guid="_llq_QHa1Edyn2eJAAk3RHw">
    <sectionDescription>&lt;p>&#xD;
    Using the evaluation mission and scope of the test effort agreed upon with the evaluation stakeholders, examine the&#xD;
    list of target items and identify items that do not satisfy the evaluation mission (or are obviously out of the test&#xD;
    effort scope).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As an opposing check, critically examine the items again, and challenge whether the evaluation mission and test effort&#xD;
    scope will really be satisfied by the refined list of target items. It may be necessary to add additional elements to&#xD;
    the list of target items to ensure appropriate scope and the ability to achieve the evaluation mission.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_oTt54Ha1Edyn2eJAAk3RHw" name="Define the List of Target Items" guid="_oTt54Ha1Edyn2eJAAk3RHw">
    <sectionDescription>&lt;p>&#xD;
    Now that you have decided on the target test items, you need to communicate your choices to the test team and other&#xD;
    stakeholders in the test effort. Arguably the most common method is to document the decisions about the target items in&#xD;
    the Iteration Test Plan.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An alternative is to simply record this information in some form of table or spreadsheet and make use of it to govern&#xD;
    work and responsibility assignment. During test implementation and execution, individual testers will make use of this&#xD;
    information to make tactical decisions regarding the specific tests to implement, and what test results to capture in&#xD;
    relation to these target items.&#xD;
&lt;/p></sectionDescription>
  </sections>
  <sections xmi:id="_qHWasHa1Edyn2eJAAk3RHw" name="Evaluate and Verify Your Results" guid="_qHWasHa1Edyn2eJAAk3RHw">
    <sectionDescription>&lt;p>&#xD;
    You should evaluate whether your work is of appropriate quality, and that it is complete enough to be useful to those&#xD;
    team members who will make subsequent use of it as input to their work. Where possible, use checklists to verify that&#xD;
    quality and completeness are good enough.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Have the people who perform the downstream tasks that rely on your work as input review your interim work. Do this&#xD;
    while you still have time available to take action to address their concerns. You should also evaluate your work&#xD;
    against the key input work products to make sure that you have represented them accurately and sufficiently. It may be&#xD;
    useful to have the author of the input work product review your work on this basis.&#xD;
&lt;/p></sectionDescription>
  </sections>
</org.eclipse.epf.uma:TaskDescription>
