<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1">
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-clCdG9e6x08xCgZyj6RpEg" name="design_test,_G5QncYcrEdyuU5Sm8sc1Cw" guid="-clCdG9e6x08xCgZyj6RpEg" version="7.2.0"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Gj_yfNXZ4gPm9jnl76ucOQ" name="test_strategy,_GdEd4YcvEdyuU5Sm8sc1Cw" guid="-Gj_yfNXZ4gPm9jnl76ucOQ">
    <refinedDescription>&lt;p>&#xD;
    The Test Strategy is used to identify testing principles and practices that will be applied in order to mitigate the&#xD;
    project risks, manage the testing risks, and identify any exposures. This artifact provides a common approach and&#xD;
    terminology for the testing effort. It also gives a general direction of where the testing is headed. It emphasizes the&#xD;
    importance of a team approach to testing.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HsICZ6-uaRJic-TXWE_lLQ" name="test_env_configuration,_GdEd4ocvEdyuU5Sm8sc1Cw" guid="-HsICZ6-uaRJic-TXWE_lLQ">
    <refinedDescription>&lt;p>&#xD;
    Each Test Environment Configuration specifies an appropriate, controlled setting in which to conduct the required test&#xD;
    and evaluation activities. Providing a controlled environment, built from a known configuration in which to conduct&#xD;
    these activities, helps to ensure that the results of these efforts are accurate, valid, and have a higher likelihood&#xD;
    of being systematically reproduced. A well-controlled Test Environment is an important aspect of efficient failure&#xD;
    analysis and fault resolution.&#xD;
&lt;/p>&lt;!--EndFragment--></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NFH4SSa8os0ml0CRSKZcnA" name="test_automation_arch,_HGf1YIcvEdyuU5Sm8sc1Cw" guid="-NFH4SSa8os0ml0CRSKZcnA">
    <refinedDescription>&lt;p>&#xD;
    The Test Automation Architecture provides a comprehensive architectural overview of the test-automation system, using a&#xD;
    number of different architectural views to depict different aspects of the system. It serves as a means of reasoning&#xD;
    about, managing, and communicating the fundamental characteristics and features of the test-automation software system.&#xD;
    It provides a governing focus for the test-automation software that enables the required system to be realized in&#xD;
    respect to key aspects such as: maintainability, extensibility, reliability, concurrency, distribution, security, and&#xD;
    recovery.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wmUbQ0CezuJTHRYP1dVbZA" name="test_case,_HGf1YYcvEdyuU5Sm8sc1Cw" guid="-wmUbQ0CezuJTHRYP1dVbZA">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-i5bI85AgeUSvafYvIUGPfQ" name="test_data,_HGf1YocvEdyuU5Sm8sc1Cw" guid="-i5bI85AgeUSvafYvIUGPfQ">
    <keyConsiderations>When managed separately from the procedural aspects of the test, Test Data enables the unique characteristics of the&#xD;
test to be modified independently.</keyConsiderations>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0aA5Dy5Qe1gbs0BIL9o_PQ" name="test_interface_spec,_HGf1Y4cvEdyuU5Sm8sc1Cw" guid="-0aA5Dy5Qe1gbs0BIL9o_PQ">
    <refinedDescription>&lt;p>&#xD;
    Test Interface Specifications are used in situations where aspects of the system that do not normally have visibility&#xD;
    must be observed, or where control of the software is required in a way not normally available through the standard&#xD;
    interface. &lt;!--StartFragment-->Each test Interface should provide a unique and well-defined group of services. &#xD;
    &lt;!--EndFragment-->&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nijOysVRpjxDgw3RFDaa6g" name="test_design,_HGf1ZIcvEdyuU5Sm8sc1Cw" guid="-nijOysVRpjxDgw3RFDaa6g">
    <refinedDescription>&lt;p>&#xD;
    The Test Design incorporates all of the decisions regarding the test structural elements (and their collaborations)&#xD;
    required to enable testing of the already identified targets. This work product drives the test implementation&#xD;
    activities, and increases the testing focus during the design and implementation.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-j2qnzdFx34zFayTgYYJiOA" name="test_ideas_list,_IdXhsIcvEdyuU5Sm8sc1Cw" guid="-j2qnzdFx34zFayTgYYJiOA">
    <refinedDescription>The Test Ideas List provides a layer of abstraction between the conceptual Test Plan and the more detailed Test Case (or the&#xD;
concrete Test Script). It is used to capture initial ideas for potential tests (often ill-formed or partial ideas) so that the&#xD;
tests can be reasoned about. This work product is particularly useful earlier in the development cycle, or when supporting&#xD;
project work products are unavailable or incomplete.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-92fBIh9A7JRBB1ixMpBDsA" name="test_plan,_Gmbcwol1EdyJz-Y2MJegug" guid="-92fBIh9A7JRBB1ixMpBDsA">
    <refinedDescription>&lt;p>&#xD;
    The Test Plan forms the framework within which the team performing the testing will work for the given schedule. It&#xD;
    directs, guides, and constrains the test effort, focusing the work on the useful and necessary deliverables. It also&#xD;
    communicates the intent of the effort to stakeholders. As such, the Test Plan should avoid detail that would not be&#xD;
    understood, or would be considered irrelevant by the stakeholders in the test effort.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In cultures or domains in which this work product is not recognized as a formal work product, it is still important to&#xD;
    address the different aspects represented by the Test Plan as part of the planning effort, and make appropriate&#xD;
    decisions about what testing will be undertaken, and how the test effort will be conducted.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
</xmi:XMI>
