<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-Sti47GzRsEHBEp9dhWygKw" name="new_guideline,_EgX2cDt0Ed-0GPJdQkFa_A" guid="-Sti47GzRsEHBEp9dhWygKw" changeDate="2011-07-28T09:01:45.843-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Sketching a Method&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Sketching a method is all about brainstorming about what the method should contain and how it should be&#xD;
    organized.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Sketching is usually performed in a team environment in the context of a series of brainstorming sessions involving&#xD;
    method SMEs.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When sketching a method, it is important to identify the key method elements and their relationships, as well as an&#xD;
    early draft of a brief description. The key method elements may include any or all of the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Key content areas&lt;/strong>, especially if the method is large, and these may evolve into domains and&#xD;
        disciplines.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Key method content elements and their relationships&lt;/strong>: what work products are produced and what&#xD;
        roles are responsible for them?&amp;nbsp; What work products are consumed by the process (e.g., what are the input work&#xD;
        products)?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Key activities&lt;/strong>: What activities are performed to produce the work products, what work products do&#xD;
        those activities produce and consume?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Overall lifecycle and milestones&lt;/strong>.&amp;nbsp;What is the overall lifecycle that you are trying to&#xD;
        represent, organized by key milestones and milestone criteria?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    When sketching a method, it is important to leverage as much existing content as you can, both from the current&#xD;
    context, as well as from existing methods.&amp;nbsp;This is especially important if the ultimate objective is to customize&#xD;
    an existing method for the current context.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following describes an approach for&amp;nbsp;sketching a method:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        &lt;strong>Identify key work products&lt;/strong>. Sometimes starting with the key work products can be easiest, as this&#xD;
        gives you a set of terms to start working with. What are the key work products that are produced? Provide a brief&#xD;
        description that indicates their purpose and key contents. If the work products have significant state, it is a&#xD;
        good idea to capture that, as well. In addition to the work products that are produce by the method, it is&#xD;
        important to identify work products that are consumed by the method. What are the inputs to the method? What is&#xD;
        their expected contents? Can they be refined in any way, or should they be treated as input only?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Identify key activities&lt;/strong>. Once you have an initial list of work products, you can turn your&#xD;
        attention to the key activities that are performed and how those activities produce/consume the work products. If&#xD;
        they produce or refine a work product, what is the work product's resulting state after the activity is complete?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Identify key roles&lt;/strong>. You can also start thinking about what key roles that participate in the&#xD;
        process, what work products they are responsible for and any key activities they participate in.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Outline overall lifecycle, including key milestones&lt;/strong>. Once you have an idea of the key activities,&#xD;
        you can start to organize them into an overall lifecycle. First identify the key milestones and describe the&#xD;
        milestone criteria in terms of the work products produced and their state. You can then map the identified&#xD;
        activities to the milestones they support (i.e., the activities that support the reaching of the goal of the&#xD;
        milestone). This may result in additional activities. At this point, don't worry too much about individual tasks,&#xD;
        just capture the overall lifecycle in terms of milestones, key activities and their affect on key work products.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    Applying the above approach results in a high-level definition of an end-to-end process, including work products,&#xD;
    roles, activities,&amp;nbsp;milestones and overall lifecycle.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Sketching a Practice&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    When sketching a practice, you&amp;nbsp;must first name and briefly describe the practice.&amp;nbsp; Then identify the&#xD;
    practice's relationship with other practice and with other method framework elements.&amp;nbsp; Specifically, identify&#xD;
    what&amp;nbsp;work product slots will provide the inputs to the practices what the practice will produce in terms of work&#xD;
    products and what work product slots those work products will fill.&amp;nbsp; In addition you may want to identify any&#xD;
    known guidance that will be shared.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Once you have an understanding of&amp;nbsp;how the practice fits into the method framework, you can turn your attention to&#xD;
    what the practice&amp;nbsp;needs to&amp;nbsp;contain (method content&amp;nbsp;and/or process) and the relationships between these&#xD;
    practice elements.&amp;nbsp; If known, it is also a good idea to identify where the content will come from so decisions can&#xD;
    be made about the development of the practice.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Structuring a practice&amp;nbsp;is where the elements of the practice and their relationships are defined. Specifically,&#xD;
    structuring a practice involves:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Defining the practice -- where the practice fits in the overall practice framework&amp;nbsp;and what are its external&#xD;
        dependencies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining the practice elements -- what elements are contained within the practice and what are their relationships&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Categorizing the practice elements into standard and custom categories&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Each of these topics&amp;nbsp;are described in the following sections.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    General practice structuring guidelines&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The practice structure must be developed within the guiding principles and constraints of the practice&#xD;
    framework&amp;nbsp;in which the practice resides.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When structuring a practice, resist the temptation to enter detailed descriptions into the defined method&#xD;
    elements.&amp;nbsp;Instead, just name and briefly describe the elements and enter a few outline details, if they help to&#xD;
    more clearly describe the element's basic definition.&amp;nbsp;For more information, see the topics Method Element Naming&#xD;
    Conventions and Writing Brief Descriptions in&amp;nbsp;the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../practice.bus.mdev.base/guidances/guidelines/general_naming_conventions_5651B0CC.html&quot;&#xD;
    guid=&quot;__I8S0D2kEd-lU6YVR9_PJQ&quot;>Guideline: General Naming Conventions&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When structuring a practice, be sure to look for opportunities to leverage existing information in core elements and/or&#xD;
    in other practices.&amp;nbsp;If you find existing method elements in another practice that you would like to share, work&#xD;
    with the method architects to get the common information moved to&amp;nbsp;the core where it can be shared. Likewise,&#xD;
    method elements should be defined to maximize reuse.&amp;nbsp;If while structuring a practice you define an element that&#xD;
    can be shared across practices, it should be defined in&amp;nbsp;in the core where it can be shared, instead of in the&#xD;
    practice.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Develop a Proof-of-Concept&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The proof-of-concept of a &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.default.uma_concept.base/guidances/termdefinitions/method_content_6972AE81.html&quot;&#xD;
    guid=&quot;_Ts2joB_MEdq6CKKKq4D7YA&quot;>method content&lt;/a>&amp;nbsp;should be done using the implementation environment you plan to&#xD;
    use to author the actual method. That way you can test the technical feasibility of your architectural ideas in the&#xD;
    actual implementation environment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following are some things that you may want to test out:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Your proposed library structure, including the types of plug-ins you are considering creating, their relationships&#xD;
        and the types of configurations you are considering creating.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Strategy for defining navigation views, identifying any common navigation elements that you may want to share&#xD;
        between views and configurations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Strategy for handling copyrights and release information.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    As you develop the proof-of-concept, it is important to document any issues and risks that you encounter so that these&#xD;
    can be addressed when more formally defining the method.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When developing an proof-of-concept for a practice framework, be sure to include a set of &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.default.uma_concept.base/guidances/termdefinitions/practice_94B5C550.html&quot;&#xD;
    guid=&quot;_wxYvkMaGEduMlb2cQZNTYw&quot;>practice&lt;/a>s, some interfaces between those practices (e.g., &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.default.uma_concept.base/guidances/termdefinitions/work_product_826E4C22.html&quot;&#xD;
    guid=&quot;_H4JXwB_SEdq6CKKKq4D7YA&quot;>work product&lt;/a>&amp;nbsp;slots), as well as some configurations representing the &lt;a&#xD;
    class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../core.default.uma_concept.base/guidances/termdefinitions/method_configuration_C2B8FA8A.html&quot;&#xD;
    guid=&quot;__V7pAMaEEduMlb2cQZNTYw&quot;>method configuration&lt;/a>s those practices will be included in.&amp;nbsp;You may also want to&#xD;
    take into consideration any defined plug-in types and/or configuration types.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Structuring the Practice Framework Core&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Structuring the Practice Framework&amp;nbsp;core is where the core elements of the framework and their relationships are&#xD;
    defined. The core structure must be developed within the guiding principles and constraints of the practice&#xD;
    framework&amp;nbsp;in which the core resides.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When structuring a practice, resist the temptation to enter detailed descriptions into the defined core&#xD;
    elements.&amp;nbsp;Instead, just name and briefly describe the elements and enter a few outline details, if they help to&#xD;
    more clearly describe the element's basic definition.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When structuring the core elements, be sure to look for opportunities to leverage existing information in other core&#xD;
    elements (for example, core elements for a specific context may extend, customize and reuse elements from a more&#xD;
    general core). If you find existing core elements in another context-specific core that you would like to share, work&#xD;
    with the method architects to get the common information moved to&amp;nbsp;a more general core where it can be shared.&#xD;
    Likewise, core elements should be defined to maximize reuse.&amp;nbsp;If while structuring the core elements for a specific&#xD;
    context,&amp;nbsp;you define an element that can be shared across contexts, it should be defined in&amp;nbsp;in a more general&#xD;
    core where it can be shared.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Core elements are physically packaged in&amp;nbsp;Core plug-ins. For more information on Core plug-ins and what elements&#xD;
    should be placed in what plug-ins, see [Concept: Practice Library Plug-In Types]. For more information on defining&#xD;
    plug-ins, see the topic Defining Plug-ins in the&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../practice.bus.mdev.base/guidances/guidelines/creating_plugins_practices_configurations_4C84B4C2.html&quot;&#xD;
    guid=&quot;_EXvLwD3NEd-realK_We5vA&quot;>Guideline: Creating Plug-ins, Practices and Configurations&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Structuring the core elements involves:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Defining the Work Product Slot&lt;/strong>&lt;strong>s&lt;/strong>. For more information, see the topic&#xD;
        Defining&amp;nbsp;Work Product Slots below.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Defining the common method content&lt;/strong>&lt;strong>&amp;nbsp;elements and their relationships&lt;/strong>&#xD;
        (including shared roles, work products and guidance). For more information, see the &quot;Defining the common method&#xD;
        content elements&quot; section of this guideline.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Defining the shared standard categories&lt;/strong> (e.g., domains and disciplines). For more information, see&#xD;
        the &quot;Defining shared standard categories&quot; section of this guideline.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Defining the shared custom categories&lt;/strong> (including shared navigation views). For more information,&#xD;
        see the &quot;Defining shared custom categories&quot; section of this guideline.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Additional information on defining these core elements is provided in the following sections.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Defining a work product slot&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Work Product Slots are defined when you need to pass information between Practices.&amp;nbsp;They are defined in Core&#xD;
    plug-ins where their definition can be shared.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Work product slots are implemented as work products. However, they are &quot;special&quot; work products in that they are&#xD;
    implementation/representation agnostic. Thus, for general information on defining work products, see the topic Defining&#xD;
    Method Content Elements in the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../practice.bus.mdev.base/guidances/guidelines/defining_method_elements_CADE4FF6.html&quot;&#xD;
    guid=&quot;_fx7TMD3REd-realK_We5vA&quot;>Guideline: Defining Method Elements&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It&amp;nbsp;is important to remember that work products slots are not &quot;real&quot; elements, in the method sense.&amp;nbsp;Thus,&#xD;
    there are some additional authoring guidelines:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Work product slots may appear as inputs to tasks&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Work product slots may not appear as an output to tasks&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Work product slots are filled by real work products in specific practices&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Work product slots should not be categorized using standard categories&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        When naming separate work product slots, use a descriptive name that indicates explicitly that the element is a&#xD;
        slot.&amp;nbsp;Specifically, the slot's presentation name should be between brackets and it's internal name should end&#xD;
        in (&quot;_slot&quot;).&amp;nbsp; Such conventions make it easy to see what is a slot and what is an actual artifact that fills a&#xD;
        slot.&amp;nbsp;&lt;br />&#xD;
        For example:&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Presentation Name: [Specified System]&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Name: specified_system_slot&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    Defining the common method content elements&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In a practice framework, the common method elements usually include common roles definitions, work product definitions&#xD;
    and guidance. Tasks are not considered common elements (they defined in specific practices).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following sections provide core-specific recommendations for defining the common method content elements. For&#xD;
    general guidelines on defining method content elements, see the topic Defining Method Content Elements in the &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../practice.bus.mdev.base/guidances/guidelines/defining_method_elements_CADE4FF6.html&quot;&#xD;
    guid=&quot;_fx7TMD3REd-realK_We5vA&quot;>Guideline: Defining Method Elements&lt;/a>.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Defining common work products&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Work product definitions are provided in core to allow practices to share the common definition, even though they may&#xD;
    use the work product differently (e.g., provide different techniques for producing and consuming the work product).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Work products are not specified as fulfilling specific slots in the core. The fulfillment of slots is defined within&#xD;
    the practice (not in common).&amp;nbsp;&lt;br />&#xD;
    Note: Even though common work products are defined in&amp;nbsp;Core, they do not really &quot;exist&quot; as part of the method being&#xD;
    defined until they are placed in a slot by a practice. In that case, the work product is considered conceptually part&#xD;
    of that practice.&amp;nbsp;The only reason these work product definitions are physically placed in&amp;nbsp;the core&amp;nbsp;is so&#xD;
    their definition can be shared.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Work products in the core are generally &quot;state free&quot;.&amp;nbsp;Specific work product states are considered&#xD;
    practice-specific information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Work products in the core do not have an associated responsible role. What role is responsible for what work product is&#xD;
    a practice-specific decision.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Defining common roles&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Practice frameworks generally implement a Delayed Assignment&amp;nbsp;approach for roles and role&amp;nbsp;assignments so the&#xD;
    role definitions and/or assignments can be easily changed. Common role definitions are included in the core, but they&#xD;
    are not assigned to work products or tasks. These assignments are defined as part of the practice.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Defining common guidance&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Common guidance is guidance that can be shared across practices.&amp;nbsp;Such guidance is not associated to any method&#xD;
    content elements in the core. Such associations are done as part of defining the practice.&lt;br />&#xD;
    Note: Even though common guidance is defined in&amp;nbsp;the core, such guidance is considered conceptually part of the&#xD;
    practice where the guidance is associated to specific practice elements.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Defining shared standard categories&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Standard category definitions (domains, disciplines, work product kinds, role sets, tools) are are generally shared&#xD;
    across practices, so they are defined in the practice framework core. However, practice frameworks generally implement&#xD;
    a Delayed Assignment&amp;nbsp;approach for standard categories, except for tools (since what tool mentors are assigned to&#xD;
    what tools usually does not change). Thus these categories are defined in the core, but elements are not categorized&#xD;
    using these categories in the core. The categorization happens as part of the practice. For more information on&#xD;
    categorizing method elements into standard categories, see the topic Categorizing&amp;nbsp;Method Elements Using Standard&#xD;
    Categories in the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../practice.bus.mdev.base/guidances/guidelines/categorizing_7B37E584.html&quot;&#xD;
    guid=&quot;_kY8j4EH-Ed-bmYzvomIdMg&quot;>Guideline: Categorizing&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Defining shared custom categories&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Custom categories may be defined in the core that can be shared across practices. A common example of a shared custom&#xD;
    category is a navigation view, but other custom categories may be defined, as well.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Elements are added to the shared custom categories in the core and in practices, as desired. For more information on&#xD;
    categorizing method elements into custom categories, see the topic Categorizing Method Elements&amp;nbsp;Using&#xD;
    Custom&amp;nbsp;Categories&amp;nbsp;in the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../practice.bus.mdev.base/guidances/guidelines/categorizing_7B37E584.html&quot;&#xD;
    guid=&quot;_kY8j4EH-Ed-bmYzvomIdMg&quot;>Guideline: Categorizing&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    These custom categories&amp;nbsp;can then be&amp;nbsp;included, as desired, as part of&amp;nbsp;publishable method configurations.&#xD;
    For more information on publishable configurations, see [Concept: Practice Library Configuration Types].&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Customizing Practice Framework Core Elements&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Practice Framework&amp;nbsp;core&amp;nbsp;customizations are stored in a separate plug-ins from the&amp;nbsp;core elements being&#xD;
    customized. Specifically, all core element customizations should be defined in an Extend plug-in for the Core plug-in&#xD;
    that contains the element to be customized. For more information on Core and Extend plug-ins, see [Concept: Practice&#xD;
    Library Plug-In Types].&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There are a number of different ways that you can customize the practice framework core.&amp;nbsp;You can:&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Add a new work product slot&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Customize an existing work product slot&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Add a new common method content element (e.g., role, work product or guidance;&amp;nbsp;tasks are&amp;nbsp;generally stored&#xD;
        in &lt;a class=&quot;elementLink&quot; href=&quot;./../../../core.default.uma_concept.base/guidances/concepts/practice_F5C8EAAB.html&quot;&#xD;
        guid=&quot;_qhCTAFRREd2CWscN8Mx6rg&quot;>Practice&lt;/a>s)&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Customize an existing common method content element&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Add new shared domains or disciplines&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Customize existing shared domains or disciplines&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The following sections describe how you would structure these customizations.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Add a new work product slot&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Perform the following steps to define a new Work Product Slot:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        If it does not already exist, create an Extend plug-in to contain the new slot.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Define a new artifact and indicate that it is a slot.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;strong>Customize an existing work product slot&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Perform the following steps to customize (not just by adding guidance) an existing Work Product Slot:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        If one does not exist, create an Extends&amp;nbsp;plug-in to contain the slot customizations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Customize the slot the same way you customize any work product. However, since slots are shared across practices,&#xD;
        be sure that they adhere to guidelines for slots and that the changes are applicable across practices. For more&#xD;
        information on customizing work products, see the topic Customizing a Method Content Element in the&amp;nbsp;&lt;a&#xD;
        class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../practice.bus.mdev.base/guidances/guidelines/defining_method_elements_CADE4FF6.html&quot;&#xD;
        guid=&quot;_fx7TMD3REd-realK_We5vA&quot;>Guideline: Defining Method Elements&lt;/a>.&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;strong>Add a new common method content element&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Perform the following steps to add a new common method content&amp;nbsp;element (e.g., role, work product,&#xD;
    guidance)&amp;nbsp;to the core (tasks are generally not common, but are considered practice-specific):&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        If it does not already exist, create an Extend plug-in to contain the new common element.&lt;br />&#xD;
        Note: Practice frameworks generally&amp;nbsp;implement a Delayed Assignment&amp;nbsp;approach for roles, so it is&#xD;
        recommended that role definitions be placed in their own plug-in.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        In the new plug-in, define the new element.&amp;nbsp;These elements are common so be sure to only include information&#xD;
        that is common across practices. Do not include any associations between elements as such relationships are&#xD;
        better-defined in practices. For more information, see the topic Defining Method Content Elements in the&amp;nbsp;&lt;a&#xD;
        class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../practice.bus.mdev.base/guidances/guidelines/defining_method_elements_CADE4FF6.html&quot;&#xD;
        guid=&quot;_fx7TMD3REd-realK_We5vA&quot;>Guideline: Defining Method Elements&lt;/a>.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;strong>Customize an existing&amp;nbsp;common method content element&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Perform the following steps to customize&amp;nbsp;an existing common method content&amp;nbsp;element (e.g., role, work product,&#xD;
    guidance)&amp;nbsp;to the core (tasks are generally not common, but are considered practice-specific):&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        If one does not exist, create an Extends&amp;nbsp;plug-in to contain the customizations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Customize the elements the same way you customize any element. However, since common elements are shared across&#xD;
        practices, be sure to only include information that is common across practices. Do not include any associations&#xD;
        between elements as such relationships are better-defined in practices. For more information, see the topic&#xD;
        Customizing a Method Content Element in the&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../practice.bus.mdev.base/guidances/guidelines/defining_method_elements_CADE4FF6.html&quot;&#xD;
        guid=&quot;_fx7TMD3REd-realK_We5vA&quot;>Guideline: Defining Method Elements&lt;/a>.&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    Add a new shared domain or discipline&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Perform the following steps to add a new shared domain or discipline:&#xD;
&lt;/p>&#xD;
&lt;ul class=&quot;noindent&quot;>&#xD;
    &lt;li>&#xD;
        If one does not exist, create an Extends&amp;nbsp;plug-in to contain the domain or discipline definitions.&lt;br />&#xD;
        Note: Practice frameworks generally&amp;nbsp;implement a Delayed Assignment&amp;nbsp;approach for standard categories, so&#xD;
        it is recommended that domain and discipline definitions be placed in their own plug-in.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        In the new plug-in, define the new standard category. Do not assign any elements to the categories as the&#xD;
        categorization of elements to standard categories is done in the practices.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    Customize existing shared domains or disciplines&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Perform the following steps to customize and existing shared domain&amp;nbsp;or discipline:&#xD;
&lt;/p>&#xD;
&lt;ul class=&quot;noindent&quot;>&#xD;
    &lt;li>&#xD;
        If one does not exist, create an Extends&amp;nbsp;plug-in to contain the domain or discipline customizations.&lt;br />&#xD;
        Note: Practice frameworks generally&amp;nbsp;implement a Delayed Assignment&amp;nbsp;approach for standard categories, so&#xD;
        it is recommended that domain and discipline definitions be placed in their own plug-in.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        In the new plug-in, customize the standard category. Do not add any elements to the categories as the&#xD;
        categorization of elements to standard categories is done in the practices.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Documenting the Practice Framework Architecture&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Documenting the architecture of a Practice Framework&amp;nbsp;is critical to making sure that key decisions are captured&#xD;
    and communicated to the development team. Documenting the practice framework architecture involves defining and&#xD;
    capturing the key guiding principles and a consistent approaches for structuring the framework, as well as documenting&#xD;
    the key structural elements.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In general, don't spend much time:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        getting the architecture perfect -- it can evolve over time as the individual method elements are defined and&#xD;
        detailed.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        providing detailed descriptions of the method elements -- just name and briefly describe the elements and enter a&#xD;
        few outline details if it helps to more clearly describe the element's basic definition.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Note: While documenting the architecture is important, it is not enough to just define&amp;nbsp;it on paper.&amp;nbsp;It is&#xD;
    important that the architecturally-significant method elements be actually built using your selected method&#xD;
    implementation environment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When documenting the architecture, there are two key decisions that you need to make: what to include in the&#xD;
    architecture description and what level of detail. Each of these are described in the following sections.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Architecture content&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The &lt;strong>&lt;em>architecturally-significant method elements&lt;/em>&lt;/strong> in a practice framework&amp;nbsp;are the&#xD;
    following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Practices&lt;br />&#xD;
        &amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Core elements: Elements shared across practices:&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Work Product Slots: Information that passes between the practices,&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Common method content elements (especially, roles, guidance, work products) such as the definitions that&#xD;
                are shared across practices,&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Common&amp;nbsp;standard categories (especially domains, disciplines, work product kinds, role sets, tools),&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Common custom categories.&lt;br />&#xD;
                &amp;nbsp;&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Practice Configurations:&amp;nbsp;Assemble practices into usable methods for practitioners&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The following are some examples of the &lt;strong>&lt;em>types of decisions&lt;/em>&lt;/strong> you might make (and document) when&#xD;
    architecting a method framework:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Use a Delayed Assignment&amp;nbsp;approach for role&amp;nbsp;assignments and standard category assignments (except for&#xD;
        tools) in order to improve the flexibility and ability to configure the framework&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use a specific set of method plug-in&amp;nbsp;and method configuration&amp;nbsp;types in order to provide a consistent&#xD;
        approach for structuring the framework. We recommend the plug-in types defined in [Concept: Practice Library&#xD;
        Plug-In Types]&amp;nbsp;and the configuration types defined in [Concept: Practice Library Configuration Types].&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Follow a consistent set of naming conventions. We recommend the ones&amp;nbsp;defined in&amp;nbsp;&lt;a&#xD;
        class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../practice.bus.mdev.base/guidances/guidelines/general_naming_conventions_5651B0CC.html&quot;&#xD;
        guid=&quot;__I8S0D2kEd-lU6YVR9_PJQ&quot;>Guideline: General Naming Conventions&lt;/a>.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Provide recommendations and constraints for the following:&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                How navigation view should be built&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                How standard categorization should be handled (as well as any common standard categories)&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Approach for assigning roles&amp;nbsp;(as well as any common roles)&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Approach for scaling elements&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Approach for associating guidance&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Approach for dividing the architecture into smaller chunks to reduce complexity&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    Level of detail&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    There is a range of&amp;nbsp;options for the information that can be captured in an architecture description. In some&#xD;
    cases, where there is an architectural decision to be made, there are a set of architecture notes that are written up&#xD;
    proposing what to do, discussing all the choices and the tradeoffs that have been made. These notes can be an email&#xD;
    thread, a forum thread, or a Wiki. Then, the final decision is captured in an architecture document. The notes serve as&#xD;
    a historical record of decisions (if you keep them) and not a polished, maintained view of the architecture. The&#xD;
    maintained architecture document is a separate work product that is mainly targeted at new developers and maintainers&#xD;
    of the system, and to ensure the architecture does not degrade. The notes get filed in a notebook for later reference&#xD;
    in case people are curious why the team did something.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In summary, the following are the range of options for the architecture documentation:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Keep a set of notes that are a historical collection of architecture notes that are not maintained&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Keep a set of notes, plus define a high-level overview of the architecture&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Keep a set of notes, an architectural overview, plus a set of distilled key decisions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Keep a set of notes, an architectural overview, a set of distilled key decisions and a set of evolutionary models&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Keep a set of notes, an architectural overview, a set of distilled key decisions and a set of formal models at&#xD;
        different levels of abstraction&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    For each project, it is important to decide which of the above options makes the most sense.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
