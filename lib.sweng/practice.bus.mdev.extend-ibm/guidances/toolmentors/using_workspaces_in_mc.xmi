<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-uExRqTYqxgG4O3Q90mnjZA" name="new_toolmentor,_AKDiMFgpEd2AFZhgf_Sb-A" guid="-uExRqTYqxgG4O3Q90mnjZA" changeDate="2011-10-11T10:48:29.375-0700" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    This tool mentor includes some recommended best practices for setting up and working with workspaces in Method&#xD;
    Composer. For general information on setting up and using workspace libraries in Method Composer, see the Method&#xD;
    Composer online help topic: &lt;strong>Collaborating&lt;/strong> &amp;gt; &lt;strong>Sharing method libraries and elements with&#xD;
    version control systems&lt;/strong> &amp;gt; &lt;strong>Workspace method libraries&lt;/strong>.&amp;nbsp;The latest information on this&#xD;
    topic is also available from the &lt;a href=&quot;http://pic.dhe.ibm.com/infocenter/rmchelp/v7r5m1/index.jsp&quot;&#xD;
    target=&quot;_blank&quot;>RMC Information Center&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    General conventions&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    When using workspaces, you generally define three different physical directories:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>External Baseline&lt;/strong>: Directory where the content you are &lt;em>using&lt;/em>, but &lt;em>not&#xD;
        developing,&lt;/em>&amp;nbsp;is located. These should be treated as read-only and should not be placed under version&#xD;
        control since they are not being developed.&lt;br />&#xD;
        Note: There&amp;nbsp;can be more than one external baseline directory. For example, you may be dependent on content&#xD;
        that exists in multiple different repositories.&lt;br />&#xD;
        &amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Development Repository&lt;/strong>: Directory where you keep the projects that are under&#xD;
        development.&amp;nbsp;These should be placed under version control.&lt;br />&#xD;
        Note: There&amp;nbsp;can be more than one development repository directory. For example, you may be developing content&#xD;
        that is controlled using multiple version control systems.&lt;br />&#xD;
        &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Personal Workspace&lt;/strong>.&amp;nbsp; Directory where each method author maintains a selected set of elements&#xD;
        loaded from the External Baseline and the Development Repository.&amp;nbsp;This is the method&#xD;
        author's&amp;nbsp;&quot;development method library&quot;.&amp;nbsp;&lt;br />&#xD;
        Name: mam_ws.&amp;lt;rmc version number&amp;gt; (e.g., mam_ws.75). You may define as many of these as you like. For&#xD;
        example, you may want a workspace that contains everything and you may want a workspace that only includes a&#xD;
        specific set of elements. The files in the the personal workspace directory should not be placed under source&#xD;
        control, since the information kept in the workspace is specific to your particular instance of Method Composer.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Note: If you are not placing your elements under version control, a personal workspace could also serve as the&#xD;
    development repository (though it is recommended that a version control system be used).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For specific information on creating, loading and synchronizing a workspace-based method library, see the sections&#xD;
    below.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Creating an external baseline&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    External baselines should be placed in a location with read only access.&amp;nbsp; You can also choose to lock the plug-ins&#xD;
    to avoid inadvertent changes.&amp;nbsp; Note that configurations can not be locked.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If you are using the content that ships with Method Composer as an external baseline, then you can just use the&#xD;
    directories in the Method Composer install directory that contains the content as the External Baseline directories,&#xD;
    and there is no need to create new directories.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Creating a development repository&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Now you need to create a place where you can place the files that are under development.&amp;nbsp; This is typically a&#xD;
    directory structure within a version control system.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Loading content from CVS into a workspace&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    This section provides step-by-step instructions for loading from CVS. For general information on loading workspaces,&#xD;
    see the Method Composer online help topic: &lt;strong>Collaborating&lt;/strong> &amp;gt; &lt;strong>Sharing method libraries and&#xD;
    elements with version control systems&lt;/strong> &amp;gt; &lt;strong>Workspace method libraries&lt;/strong> &amp;gt; &lt;strong>Importing&#xD;
    method plug-in projects or method configuration projects into a workspace method library&lt;/strong>. The latest&#xD;
    information on this topic is also available from the &lt;a&#xD;
    href=&quot;http://publib.boulder.ibm.com/infocenter/rmchelp/v7r5m1/index.jsp&quot; target=&quot;_blank&quot;>RMC Information Center&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Perform the following steps to load an Method Composer workspace with content from CVS:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Set the preferences for CVS (open source content that has been donated resides in CVS).&lt;br />&#xD;
        Select &lt;strong>Windows &amp;gt; Preferences&lt;/strong>.&lt;br />&#xD;
        Click on &lt;strong>Team &amp;gt; CVS &amp;gt; Watch/Edit&lt;/strong> and select the following options:&lt;br />&#xD;
        Click &lt;strong>OK&lt;/strong>.&lt;br />&#xD;
        Note: These preferences must be set for each individual workspace!&lt;br />&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Indicate what CVS repository you want to load from.&amp;nbsp; In this example, we use the CVS repository that contains&#xD;
        the content we have donated to the EPF project (the open source UMF content).&lt;br />&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                In RMC, open the &quot;&lt;strong>CVS Repository Exploring&lt;/strong>&quot; perspective&lt;br />&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Create a new repository location in the &lt;strong>CVS Repositories&lt;/strong> view:&lt;br />&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Enter the repository and your account information and review other settings&lt;br />&#xD;
                &lt;br />&#xD;
                &amp;nbsp;Note: Non-committers use 'anonymous' for the user, leave the password empty, and select 'pserver' for&#xD;
                the connection type. Committers use their Eclipse account user ID and password, and select extssh for the&#xD;
                connection type.&lt;br />&#xD;
                &lt;br />&#xD;
                Click Finish.&lt;br />&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Expand the HEAD branch of the tree.&lt;br />&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Expand org.eclipse.epf, and find the library folders you are interested in importing.&lt;br />&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Select the content you want to load (you can shift-click and/or control-click to select multiple&#xD;
        elements).&amp;nbsp;&lt;br />&#xD;
        In this example, we will be importing content from libraries/EPF_Practices_Library (all core.gen and core.default&#xD;
        folders).&lt;br />&#xD;
        &lt;br />&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Right-click and select &quot;Check Out As&quot;.&amp;nbsp; Don't worry, you are not really checking anything out ;-).&lt;br />&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        On the next dialog box, select &quot;Check out into the workspace as projects&quot; option as shown below:&amp;nbsp;&lt;br />&#xD;
        &lt;br />&#xD;
        Click Next.&lt;br />&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        On the next screen, select the project location. Check the &quot;use default workspace location&quot; option. Click Next.&#xD;
        Click Finish.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    Note: You can just ignore any errors that you get or see in the Problems view.&amp;nbsp; Re-opening the library should&#xD;
    eliminate those errors.&amp;nbsp; If it does not,&amp;nbsp;you may have not loaded a library element that is needed by another&#xD;
    library element that you did load (i.e., you missed a needed plug-in), or the plug-in you are trying to import has&#xD;
    improper references.&amp;nbsp; For more information on processing errors&amp;nbsp;reported in the Problem View, see the Method&#xD;
    Composer online help topic:&lt;strong>Designing and managing process&lt;/strong> &amp;gt; &lt;strong>Getting started with&#xD;
    authoring&lt;/strong> &amp;gt; &lt;strong>Working with Problems view&lt;/strong>. The latest information on this topic is also&#xD;
    available from the &lt;a href=&quot;http://publib.boulder.ibm.com/infocenter/rmchelp/v7r5m1/index.jsp&quot; target=&quot;_blank&quot;>RMC&#xD;
    Information Center&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Now you have loaded the CVS content into your workspace.&amp;nbsp;To see the result, go back to the RMC Authoring&#xD;
    perspective and select &lt;strong>File&lt;/strong> &amp;gt; &lt;strong>Open&lt;/strong> &lt;strong>Method&lt;/strong>&#xD;
    &lt;strong>Library&lt;/strong> (being sure to check the &quot;open from workspace&quot; option).&amp;nbsp; You should see the loaded&#xD;
    content in your library.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Renaming plug-ins in a workspace that reside in a separate version control system&amp;nbsp;&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    When a plug-in is created in a workspace-based method library, three elements are created:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        A directory to contain all of the plug-in files (the directory name is the same as the plug-in name,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A plug-in.xmi file the defines the structure of the plug-in (the plug-in name is specified in the file),&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A .project file that defines the associated project (the plug-in name is specified in the file as the project&#xD;
        name).&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    Method Composer works fine if the name used for the plug-in and project are different, but it can get confusing, so&#xD;
    it's best to keep them the same. Thus, when you change the name of a plug-in, you need to make sure you rename the&#xD;
    associated plug-in directory and the project name in the .project file.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Perform the following steps to rename a version controlled plug-in:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    1.&amp;nbsp;Rename the plug-in in Method Composer. Right click the plug-in and select Rename. Enter the new name. Edit the&#xD;
    plug-in description, adjusting the &lt;strong>Presentation name&lt;/strong> and &lt;strong>Brief description&lt;/strong>, as&#xD;
    needed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    2.&amp;nbsp;Remove the project associated with the plug-in from your workspace without deleting the source.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Right click on plug-in name in the &lt;strong>Library&lt;/strong> view.&amp;nbsp;Select &quot;&lt;strong>Show in Resource&#xD;
        Navigator&lt;/strong>&quot;.&amp;nbsp; The associated plug-in,xmi file will be highlighted in the &lt;strong>Navigator&lt;/strong>&#xD;
        view.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Right click the containing folder in the &lt;strong>Navigator&lt;/strong> view and select&#xD;
        &lt;strong>Delete&lt;/strong>.&amp;nbsp;Click the &quot;&lt;strong>Do Not Delete Contents&lt;/strong>&quot; button.&amp;nbsp;The plug-in will be&#xD;
        removed from the workspace and method library, but not from the file system.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    3.&amp;nbsp;Rename the plug-in project elements in your version control system:&lt;br />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Rename the folder&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Check out and edit the .project file and change the &amp;lt;name&amp;gt; tag to the new plug-in name.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Check in the .project file&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    4. Reimport the plug-in project into your workspace.&amp;nbsp;Be sure to import a reference and not &quot;copy the projects&quot;&#xD;
    into your workspace. For more information, see the &quot;import&quot; section above.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Moving elements from the workspace to&amp;nbsp;another location&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Perform the following steps to move&amp;nbsp;elements in a workspace from the workspace to another location:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Remove the project from your workspace without deleting the source.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Right click on the element name in the &lt;strong>Library&lt;/strong> view.&amp;nbsp; Select &quot;&lt;strong>Show in&#xD;
                Resource Navigator&lt;/strong>&quot;. The element will be highlighted in the &lt;strong>Navigator&lt;/strong> view.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Right click the element name in the &lt;strong>Navigator&lt;/strong> view and select&#xD;
                &lt;strong>Delete&lt;/strong>.&amp;nbsp;Click the &quot;&lt;strong>Do Not Delete Contents&lt;/strong>&quot; button.&amp;nbsp; The element&#xD;
                will be removed from the workspace and method library, but not from the file system.&lt;br />&#xD;
                &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Manually move the element from the workspace directory to the new location.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reimport the elements from the new location.&amp;nbsp;For more information, see the &quot;import&quot; section above.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;h3>&#xD;
    Removing elements from the workspace&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Perform the following steps to remove&amp;nbsp;elements from a workspace:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Right click on the element name in the &lt;strong>Library&lt;/strong> view.&amp;nbsp; Select &quot;&lt;strong>Show in Resource&#xD;
        Navigator&lt;/strong>&quot;.&amp;nbsp;The element will be highlighted in the &lt;strong>Navigator&lt;/strong> view.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Right click the element name in the &lt;strong>Navigator&lt;/strong> view and select &quot;&lt;strong>Delete&lt;/strong>&quot;.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                If you want to remove the element from the file system too, click &quot;&lt;strong>Yes&lt;/strong>&quot; button when asked&#xD;
                if the source should be deleted.&amp;nbsp;The element will be removed&amp;nbsp;from the workspace, method library&#xD;
                and file system.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                If you want the element to remain on the file system, but want it to be removed from the workspace and&#xD;
                hence the&amp;nbsp;method library, click &quot;&lt;strong>do not delete contents&lt;/strong>&quot;. The element will be&#xD;
                removed&amp;nbsp;from the workspace and method library, but not the file system.&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ol></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
