<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-eA1MPLrYcJGL0czUk2sO3w" name="new_guideline,_wRikIOLAEd-G2pDngtqTxA" guid="-eA1MPLrYcJGL0czUk2sO3w" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    Most classes in an analysis collaboration will function perfectly well in a design collaboration. There are a few&#xD;
    classes that may have &quot;special needs&quot; because they are highly complex - either in terms of functionality or data&#xD;
    structuring - or because they are a part of a path or environment that has critical performance or quality of service&#xD;
    requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A class requires special optimization when it is either complex or when it is part of a path which requires&#xD;
    optimization. Complexity can be structural (data structures or relationship sets) or behavioral (functional complexity&#xD;
    of operations or state machines). Frequently, collections of classes work together in high-bandwidth paths that require&#xD;
    special optimization as well.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &quot;special needs&quot; classes may be optimized in terms of&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        function/method decomposition&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        data typing and structuring&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        relations to other elements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        state machine execution&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        activity diagram execution&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        port structure&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        internal part decomposition&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        pre- and post-condition checking&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        error handling and correction&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        safety and fault tolerance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        memory or resource usage&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        time (e.g. worst case, average case, predictability)&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
