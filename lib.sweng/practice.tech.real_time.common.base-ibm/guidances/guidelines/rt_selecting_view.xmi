<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-ndvlh48Tf0gYJ08XaQ00ow" name="new_guideline,_fiNAYOK9Ed-G2pDngtqTxA" guid="-ndvlh48Tf0gYJ08XaQ00ow" changeDate="2010-10-28T11:03:10.765-0700" version="7.5.0">
  <mainDescription>&lt;p>&#xD;
    Design is all about optimization of an object analysis model (also known as Platform Independent Model). As such, all&#xD;
    of design is driven by various design constraints, including, but not limited to, QoS requirements. The optimization is&#xD;
    applied at three levels of abstraction: architectural (system-wide), mechanistic (collaboration-wide), and detailed&#xD;
    (class-wide).&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Architectural optimization&amp;nbsp;is decomposed into&amp;nbsp;five key&amp;nbsp;aspects or viewpoints:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Subsystem and Component View&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Concurrency and Resource View&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Distribution View&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Safety and Reliability View&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Deployment View&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Each of the viewpoints has its own literature and set of design patterns. Each design pattern is a generalized solution&#xD;
    to a commonly occurring problem that occurs within that viewpoint. The overall architecture is the sum of the design&#xD;
    pattern selection from all the architectural views. In addition to these key architectural views, there are secondary&#xD;
    views that may be important in some real-time and embedded systems. Common secondary architectural concerns include:&#xD;
&lt;/p>&#xD;
&lt;ul class=&quot;noindent&quot;>&#xD;
    &lt;li>&#xD;
        Security&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Quality of Service management&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Error and exceptional handling policies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Service Oriented Architecture (SOA)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business Process Management (BPM)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In the context of a spiral lifecycle, architectural design patterns are applied iteratively, in subsequent microcycles&#xD;
    (spiral instances). In fact, not all aspects of architecture need be applied within any specific prototype. For&#xD;
    example, in a&amp;nbsp;5 microcycle development project, the subsystem architecture and the safety architecture may be&#xD;
    specified in prototype 1, the distribution architecture in prototype 2, the concurrency and resource architecture in&#xD;
    prototype 4. Nor. must all views be present in all systems. Safety and reliability view only appears in safety- or&#xD;
    reliability-critical applications..&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Be careful not to apply design patterns too soon - the object analysis (PIM) model should be as design-free as&#xD;
    possible. Before settling on a particular design solution, explicitly identify and rank the design criteria, and weigh&#xD;
    the design patterns against these.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
