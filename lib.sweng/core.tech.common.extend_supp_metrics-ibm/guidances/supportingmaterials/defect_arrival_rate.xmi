<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-X3mimOu2IE1P2WCzCcNjQw" name="new_supporting_material,_XkY_kNbPEd6JeoTJ0wTEGQ" guid="-X3mimOu2IE1P2WCzCcNjQw" changeDate="2011-06-29T14:27:38.390-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Purpose&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A project's pattern of defect arrival helps the team understand their likelihood of achieving their release&#xD;
    commitments. It indicates how much more testing is needed before the system can be released, because a high defect&#xD;
    arrival rate typically indicates unstable code. The team can also use this metric to forecast the number of customer&#xD;
    reported problems post-ship.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This metric is also used to determine the completeness of the testing process, the ability of the team to find&#xD;
    defects (the rate of defect discovery)&amp;nbsp;and to monitor process improvements.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Definition&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;span&#xD;
        style=&quot;FONT-FAMILY: Verdana; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: TH&quot;>&lt;font&#xD;
         face=&quot;Arial&quot;>Count the number of defects found in each unit of time (usually week, but could be day or month,&#xD;
        depending on iteration length).&lt;/font>&lt;/span>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;span&#xD;
        style=&quot;FONT-FAMILY: Verdana; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: TH&quot;>&lt;font&#xD;
         face=&quot;Arial&quot;>Count total cumulative defects found&lt;/font>&lt;/span>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Defect arrival data can be grouped&amp;nbsp;by activity (i.e. the activity performed which discovered the defect).&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Analysis&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Monitor defect arrivals using a trend line for each severity. Plot the number of defects on the Y axis and iterations&#xD;
    on the X axis.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Expected trend&lt;/strong> - Ideally, the defect arrival rate will slow down over time for each severity type. As&#xD;
    defect arrivals diminish, confidence in meeting release goals increases.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Increasing defect arrivals&lt;/strong> - When defect arrivals are not tapering down (especially in the last half&#xD;
    of the lifecycle), it suggests the team may continue to find defects at a rate that impacts the release date. It can&#xD;
    also forecast more defects found after the software ships. This trend can occur as a result of increased testing&#xD;
    efforts, the injection of more code defects, or increased code development activity (the more code is created, the more&#xD;
    defects are likely to be introduced). Perform analysis to determine the cause of the increasing defect arrival rate in&#xD;
    order to take the appropriate corrective action. The team may not be successfully adopting best practices of Test&#xD;
    Management.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Below is an example of a Defect Arrival Rate report, which shows the number of defects across the development&#xD;
    lifecycle. The high severity lines trending upward&amp;nbsp;in this example indicate the project is not stabilizing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img alt=&quot;Defect Arrival Rate chart&quot; src=&quot;resources/defect_arrival_rate.gif&quot; width=&quot;600&quot; height=&quot;385&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For Agile and/ or iterative development approaches, testing starts early in the development lifecycle.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        An upward trend of defects found (cumulative) from the beginning of the lifecycle is expected&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The number of defects found (in each iteration) should be consistent across the lifecycle. Expect a reduction in&#xD;
        defects found at the end of lifecycle (if testing has been performed properly)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The number of closed defects should be equal or very close to the number of defects found in that iteration (i.e.&#xD;
        the opened defects should burn down to zero)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    For waterfall or non-iterative development projects, the test cycle usually begins late in the development lifecycle.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The number of defects found trends upward toward the middle to the end of the development lifecycle. The defect&#xD;
        discovery rate slows down at the end of development. Expect a bell curve for defect arrival.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The number of opened defects trends downward to zero when development is coming to an end.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;br />&#xD;
    Frequency and reporting&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Data is typically reported weekly, or at a minimum at the end of every iteration. Defect Arrival are discussed as part&#xD;
    of the readiness-to-ship review meeting.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Collection and reporting tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    IBM&amp;reg; Rational&amp;reg; ClearQuest&amp;reg; and IBM&amp;reg; Rational&amp;reg; Team Concert&amp;reg; collect defect arrival data. IBM&amp;reg; Rational&amp;reg; Insight&amp;reg;&#xD;
    reports on this metric.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Assumptions and prerequisites&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Defects are captured in a tool and categorized by their severity and the activity performed to discover them.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br />&#xD;
&lt;h3>&#xD;
    Pitfalls, advice, and countermeasures&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        When the defect arrival rate falls, confirm that testing efforts have not reduced and that test coverage is high.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        When defect arrivals decrease at a specific point in the lifecycle, it could be that testing has slowed due to&#xD;
        reduced testing staff availability, or because the development team is focused on release preparation and has asked&#xD;
        that testing efforts slow down.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        In some cases, feature requests are mistakenly classified as defects. This can affect the defect arrival rate.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Be aware of the potential for conflict between developers and testers when this metric is tracked. Developers are&#xD;
        incented to keep the defect arrival rate low so that the system can be released. Testers, however, are often&#xD;
        incented based on the number of defects they identify. Confirm that data is reported accurately with no bias based&#xD;
        on this conflict of interest.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Confirm that defects are not being masked or downgraded in severity as the release date nears&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        This metric should be used as an indicator of team performance rather than individual performance (e.g. testers not&#xD;
        finding enough defects, or developers introducing too many defects)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensure that the organization emphasizes defect identification as a positive driver in achieving customer&#xD;
        satisfaction&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
