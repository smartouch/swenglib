<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-FmHPIMYpkbSqvB2dlmswRw" name="new_supporting_material,_BYrPQNxJEd6gZeszDx04Hw" guid="-FmHPIMYpkbSqvB2dlmswRw" changeDate="2010-10-20T07:46:13.902-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Purpose&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Defect Removal Efficiency is a key indicator of process effectiveness as well as quality. It is a measure of the&#xD;
    percentage of defects eliminated in various phases and activities of the lifecycle during development and after the&#xD;
    software is released. An effective defect removal process will limit the number of latent defects, and increase&#xD;
    customer satisfaction.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Definition&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Count:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        the number of defects found, by severity, in each test cycle (unit testing, system testing, etc) or phase&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the number of defects removed, by severity, in each test cycle or phase&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Calculate the Defect Removal Efficiency for each severity in each test cycle as follows:&#xD;
&lt;/p>&#xD;
&lt;blockquote style=&quot;MARGIN-RIGHT: 0px&quot; dir=&quot;ltr&quot;>&#xD;
    &lt;p>&#xD;
        Defect Removal Efficiency = (Total Defects Removed / Total Defects Found) * 100&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p dir=&quot;ltr&quot;>&#xD;
    Defect Removal Efficiency scope can be expanded to include defects found in formal design and code reviews, and other&#xD;
    project activities.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Analysis&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Use a set of trend lines to monitor Defect Removal Efficiency (one for each test cycle, activity, or phase measured).&#xD;
    Plot Defect Removal Efficiency percentage on the Y axis and test cycles/ phase/ activity on the X axis.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Expected trend&lt;/strong> - The percentage of defects found and removed in development compared to after the&#xD;
    product ships is very high. Most teams set a target of 85-95%. Monitor the effectiveness for each activity/ phase to&#xD;
    determine where the team is most and least effective in finding and removing defects.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For Agile and/ or iterative development approaches, testing begins early in the development lifecycle.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        An upward trend of defects&amp;nbsp;found (cumulative) from the beginning of the lifecycle is expected&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The number of defects found (in each iteration) should be consistent across the lifecycle. Expect&amp;nbsp;a reduction&#xD;
        in defects found at the end of lifecycle (if testing has been performed&amp;nbsp;properly)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The number of closed defects should be&amp;nbsp;equal or very close&amp;nbsp;to the number of defects found in that&#xD;
        iteration (i.e.&amp;nbsp;the opened defects should&amp;nbsp;burn down to&amp;nbsp;zero)&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    For waterfall or non-iterative development projects, the test cycle usually begins late in the development lifecycle.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The number of defects found&amp;nbsp;trends upward&amp;nbsp;toward the middle to the end of the development lifecycle. The&#xD;
        defect discovery rate slows down at the end of development.&amp;nbsp;Expect a&amp;nbsp;bell curve for defect arrival.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The number of opened defects&amp;nbsp;trends downward to zero when development is coming to an end.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;strong>Low Defect Removal Efficiency&lt;/strong> - When the Defect Removal Efficiency percentage is low, it is an&#xD;
    indication of poor processes. Confirm that the team has implemented effective practices and tools to identify defects&#xD;
    in each phase of development&amp;nbsp;(and throughout when following an iterative approach).&amp;nbsp;For example, if the&#xD;
    percentage of defect removal is low during testing activities, the team may need to improve the quality of their test&#xD;
    cases or their test coverage of requirements. If reviews aren't effective in the defect removal process, examine your&#xD;
    review processes to see why defects are missed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The potential for increasing the percentage increases dramatically when a combination of unit and system testing, code&#xD;
    and design reviews are implemented. The team should balance the benefit of implementing these practices with the&#xD;
    overhead based on the complexity and scale of the project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For an Agile development approach, the majority of defects are expected to be removed by developer&#xD;
    test and integration test (regression test/ build test). Performing functional test or system test should yield a low&#xD;
    number of defects.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Frequency and reporting&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Data is collected and reported at the end of each test cycle and phase. Defect Removal Efficiency targets are set by&#xD;
    the team.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Collection and reporting tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    IBM&amp;reg; Rational&amp;reg; Quality Manager&amp;reg; collects Defect Removal Efficiency Data.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Assumptions and prerequisites&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Each identified defect is counted in the test cycle/ phase/ activity in which it was found&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each removed defect is counted in the test cycle/ phase/ activity in which it was removed&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Pitfalls, advice, and countermeasures&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        High Defect Removal Efficiency is an indicator of customer satisfaction. Fewer defects post-ship typically&#xD;
        correlates to high customer satisfaction levels.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        While defect discovery and removal is important, defect prevention is much more efficient and effective in reducing&#xD;
        defects.&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
