<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-9kCQsW7FRhB_CXiTkZmY2Q" name="new_supporting_material,_4I994Nb3Ed6JeoTJ0wTEGQ" guid="-9kCQsW7FRhB_CXiTkZmY2Q" changeDate="2010-09-27T19:54:50.609-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Purpose&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Teams monitor this metric to ensure that all code components are tested and work as designed when they are integrated.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Definition&#xD;
&lt;/h3>&#xD;
&lt;p style=&quot;MARGIN: 0in 0in 0pt; mso-outline-level: 3&quot; class=&quot;MsoNormal&quot;>&#xD;
    &lt;span style=&quot;FONT-FAMILY: Verdana; COLOR: black; FONT-SIZE: 10pt; mso-bidi-font-family: 'Times New Roman'&quot;>&lt;font     face=&quot;Arial&quot;>Count:&lt;/font>&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;ul style=&quot;MARGIN-TOP: 0in&quot; type=&quot;disc&quot;>&#xD;
    &lt;li style=&quot;MARGIN: 3.75pt 0in; COLOR: black; mso-list: l0 level1 lfo1; tab-stops: list .5in&quot; class=&quot;MsoNormal&quot;>&#xD;
        &lt;font face=&quot;Arial&quot;>number of test cases per identified code component&lt;/font>&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;MARGIN: 3.75pt 0in; COLOR: black; mso-list: l0 level1 lfo1; tab-stops: list .5in&quot; class=&quot;MsoNormal&quot;>&#xD;
        &lt;font face=&quot;Arial&quot;>number of code components with code changes but no associated test cases&lt;/font>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Analysis&lt;br />&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Ensure that code components are covered by test cases, so defects are not lurking in untested components. Typical code&#xD;
    coverage is 60-80%. New functionality or new components should have 50 - 90% test coverage.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;br />&#xD;
    Collection and reporting tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    IBM&amp;reg; Rational&amp;reg; PurifyPlus&amp;reg; collects code coverage data. &amp;nbsp;IBM&amp;reg; Rational&amp;reg; Quality manager&amp;reg; collects test case data.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;h3>&#xD;
    Assumptions and prerequisites&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Traceability must be established between code components and test artifacts.&lt;br />&#xD;
        &lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Pitfalls, advice, and countermeasures&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The team should&amp;nbsp;balance code coverage with risk. Only aim for 100% coverage when required by regulation as&#xD;
        this is not&amp;nbsp;viable economically otherwise.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Not all code requires testing, or the same amount of testing.&amp;nbsp;The team should&amp;nbsp;consider and plan code&#xD;
        coverage, and be able to justify decisions in test allocation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use a combination of tools and automated test scripts to increase test coverage.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each time there is a change in a component (at least) regression testing should be&amp;nbsp;performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The coverage percentage is not the only indicator of the effective testing process. The team should also consider&#xD;
        the quality of the tests.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
