<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-VMCrLWIyAAni4zW7PuZBvQ" name="new_supporting_material,_4xnmwLUgEd6FZfmcIw9rww" guid="-VMCrLWIyAAni4zW7PuZBvQ" changeDate="2010-01-08T10:47:00.375-0800" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Purpose&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Monitoring the percentage of automated testing in a project helps the team identify the potential for, and progress&#xD;
    toward, test-case automation in order to reduce costs and effort.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test automation reduces labor costs up to 30-40% in the first year (one-time, not counting effort to automate).&#xD;
    Automated testing is essential for reducing development risk, especially in iterative development. With numerous builds&#xD;
    or executable releases, it becomes more difficult to fully test and therefore validate quality without automated&#xD;
    testing.&lt;br />&#xD;
    &lt;br />&#xD;
    The initial test design effort for an automated test case is typically 30-40% more than for a manual test case, since&#xD;
    you must code the design and validate the test code. However, the payback is in test execution, where automated tests&#xD;
    can decrease test times by up to 80%-90%.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Definition&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Calculate the percentage of total test cases that are automated as follows:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    (Total Number of Automated Test Cases / Total Number of Test Cases) * 100&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;br />&#xD;
    Analysis&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A good way to monitor Percentage of Automated Testing over time is to use a stacked bar chart which has the added&#xD;
    benefit of showing the growth in overall number of test cases. The percentage should increase over time.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Typical ROI case:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Assume the following - Time to execute manual test is T&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assume that - Coding an automated test is 1.3* T&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assume that - Automated test is 0.2 *T per instance&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assume that maintenance of automated test is 0.3 * T annually&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assume that test is run N times where N is an integer of 1 to 6&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Thus cost of running manual test over a year is N*T&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Thus cost of executing automated tests over a year is 1.3*T+(N*0.2T)+0.3T&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    The following table shows projected cost savings for a year of automated versus manual testing:&lt;br />&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br />&#xD;
&lt;table title=&quot;&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;85%&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;strong>Value for N&lt;/strong>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;strong>Manual Test Cost&lt;/strong>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;strong>Automated Test Cost&lt;/strong>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                1&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                n&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                1.8n&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                2&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                2n&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                2n&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                3&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                3n&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                2.2n&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                4&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                4n&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                2.4n&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                5&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                5n&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                2.6n&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                6&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                6n&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                2.8n&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&lt;br />&#xD;
&lt;br />&#xD;
&lt;p>&#xD;
    Based on the above, the break-even point is about two test iterations per year. If you run the manual test more than&#xD;
    twice a year, you can see a significant return of about 30% labor cost for three iterations, and 55% for six&#xD;
    iterations. Note that this does not include maintenance estimates.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Frequency and reporting&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Data is collected and reviewed at the end of each iteration.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Collection and reporting tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Test case data is captured in IBM&amp;reg; Rational&amp;reg; Quality Manager&amp;reg;. IBM&amp;reg; Rational&amp;reg; Functional Tester&amp;reg; and IBM&amp;reg; Rational&amp;reg;&#xD;
    Performance Tester&amp;reg; both capture test case automation data.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Pitfalls, advice, and countermeasures&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        There is some effort required to maintain automated tests (e.g. updating scripts). Test code should be placed under&#xD;
        source control just like development code. This often requires a dedicated centralized team that can manage the&#xD;
        code and provide core expertise to projects.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Automate most-frequently-run test cases first (see theTest-Case Defect Yield metric). You may need to separate out&#xD;
        test cases with high level of graphical user interface change or other inhibitors to automation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Percent of automated test coverage is not an indicator of test effectiveness.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Automated testing is not suitable for all projects. In some cases (such as in very small projects) the time to&#xD;
        create and maintain an automated test script is greater than the time required to create a manual test.&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
