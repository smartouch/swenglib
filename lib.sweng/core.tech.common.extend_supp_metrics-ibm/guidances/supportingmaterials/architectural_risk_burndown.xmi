<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-GoC-dJDTBmNrdY7ME-tFYw" name="architectural_risk_burndown,_snPBUMyJEd6AlLazTePGRg" guid="-GoC-dJDTBmNrdY7ME-tFYw" changeDate="2010-09-29T12:40:50.827-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Purpose&#xD;
&lt;/h3>&#xD;
&lt;p style=&quot;MARGIN-RIGHT: 0px&quot; dir=&quot;ltr&quot;>&#xD;
    Risk is a key driver of architecture and design activities. In order to deliver a feasible architecture, the team must&#xD;
    identify, analyze, communicate, and mitigate risk throughout the project lifecycle. Monitoring the progress of risk&#xD;
    reduction in a burndown chart provides several benefits:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Drives iteration plans and design activities&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Illustrates progress made in early iterations at addressing architectural issues (when velocity may be low from not&#xD;
        delivering more functionality)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Provides an easily understood summary of architectural risk that could impact project success. New and escalating&#xD;
        risks are visible.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reduces the likelihood of focusing on the wrong issues early in the lifecycle that can result in large surprises at&#xD;
        the end of the project. Encourages ongoing and active mitigation efforts and increased communication.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Useful for explaining the team's confidence in their estimates based on remaining uncertainty. Helps describe the&#xD;
        predictability of the project based on remaining risk.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;p>&#xD;
            Helps the team understand the effectiveness of their architectural risk mitigation activities&#xD;
        &lt;/p>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Definition&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    To calculate remaining risk:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Assign the following values to each identified architectural risk (still outstanding):&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;div style=&quot;MARGIN-LEFT: 2em&quot;>&#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            Likelihood of occurrence - defined as a percentage (using a standard scale such as 20%, 40%, 60%, 80%)&#xD;
        &lt;/li>&#xD;
        &lt;li>&#xD;
            Estimated Cost of Impact - defined in hours or days&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    2. Calculate a score for each risk:&#xD;
&lt;/p>&#xD;
&lt;div style=&quot;MARGIN-LEFT: 2em&quot;>&#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            Risk Score = Likelihood of occurrence * Estimated Cost of Impact&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    3. Determine Overall Architectural Risk&#xD;
&lt;/p>&#xD;
&lt;div style=&quot;MARGIN-LEFT: 2em&quot;>&#xD;
    &lt;ul>&#xD;
        &lt;li>&#xD;
            Total Risk Score = the sum of all individual Risk Score values&#xD;
        &lt;/li>&#xD;
    &lt;/ul>&#xD;
&lt;/div>&#xD;
&lt;p>&#xD;
    A good way to monitor Architectural Risk over time is to use a trend line in a burndown chart. The Total Risk Score is&#xD;
    plotted on the Y axis, and the iterations are on the X axis.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;h3>&#xD;
    Analysis&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    As outstanding risks are tracked, trends are identified to help the team understand the predictability of their project&#xD;
    and overall risk status in terms of the architecture. If sufficient burndown of risk isn't occurring the team can take&#xD;
    appropriate corrective action.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Architectural Risk Burndown is used as a capability improvement metric. It helps a team and middle management (project&#xD;
    manager, product owner) monitor improvements made during the project lifecycle in adopting the Evolutionary&#xD;
    Architecture and Iterative Development practices.&lt;br />&#xD;
    &lt;br />&#xD;
    Operational Executives can also use this metric to monitor systemic improvement in reducing time to delivery, improving&#xD;
    predictability, increasing value, and improving quality across the organization by adopting Evolutionary Architecture&#xD;
    and Iterative Development.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Expected trend&lt;/strong> - Ideally, risk is decreasing over time through active efforts to drive open risks to&#xD;
    closure as the team learns more about the problem domain and the architecture. The team is reducing uncertainty in each&#xD;
    iteration, focusing first on risks with the highest likelihood of impact and cost, and is providing better estimates,&#xD;
    resulting in a more predictable project. Architectural risks are discovered during the elaboration phase and reduced by&#xD;
    80% before moving into the construction phase.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Flat or rising near the middle of lifecycle&lt;/strong> - This trend indicates that the team isn't actively&#xD;
    working to address risk and there is too much uncertainty in the project. The team should base their iteration planning&#xD;
    around the architecturally significant and high risk use cases and non-functional requirements to drive down the&#xD;
    outstanding risk. Ensure that test coverage of these requirements is sufficient. Reassess architectural risk during&#xD;
    each iteration retrospective and as needed during daily meetings to ensure that high risk items are communicated.&#xD;
    Confirm that the architecture is sufficiently captured and communicated so that the team can continue to evolve and&#xD;
    deliver it. Provide coaching in architectural risk mitigation techniques. Use the remaining risk level to determine the&#xD;
    level of uncertainty in project estimates. If the number of architectural risks remains high through the planned end of&#xD;
    elaboration, the team should consider extending the elaboration phase to address those risks.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Fast incline near the end of the lifecycle&lt;/strong> - This trend can occur when the team did not actively work&#xD;
    to identify risks from the earliest iterations (when the impacts of change are least costly) and is presented with&#xD;
    surprises at the end of the lifecycle. This can result from waiting too long to deliver working software that proves&#xD;
    the architecture. The team should prioritize work items in early iterations that represent architecturally significant&#xD;
    use cases, and continue to focus on work items based on coverage and criticality. It can also occur when there has been&#xD;
    insufficient test coverage to confirm that the architecture addresses the major aspects of the system, even when there&#xD;
    is no expected risk for particular areas. If the team determines that the schedule and cost will be impacted as a&#xD;
    result of required work to mitigate late-breaking, newly identified risks, they should collaborate with stakeholders to&#xD;
    determine if scope should be cut or the release date adjusted. Determine if it is possible to negotiate impacted&#xD;
    architecturally significant requirements in order to reduce high impact risk.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;h3>&#xD;
    Frequency and reporting&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The team should evaluate architectural risk at the end of each iteration during a retrospective meeting. Risk Scores&#xD;
    are adjusted as needed, and risks that have been addressed are closed so that the team can update the burndown chart.&#xD;
    Trends are monitored and analyzed to help prioritize activities in the next iteration planning session. Stakeholders&#xD;
    are routinely apprised of current risks and collaborate with the team for impact assessment and mitigation.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Collection and reporting tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Risks can be captured in&amp;nbsp;&amp;nbsp;IBM&amp;reg; Rational&amp;reg; Team Concert&amp;reg;, IBM&amp;reg; Rational&amp;reg; Project Conductor&amp;reg;, IBM&amp;reg; Rational&amp;reg;&#xD;
    ReqPro&amp;reg; using custom attributes, or in a simple spreadsheet. Generate the burndown report by using charting&#xD;
    capabilities in a basic spreadsheet tool.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Assumptions and prerequisites&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Time-boxed iterations are scheduled, and iteration length is consistent&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Risks are captured, and the team collaborates with stakeholders to determine likelihood and impact.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&lt;br />&#xD;
&lt;h3>&#xD;
    Pitfalls, advice, and countermeasures&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        If risk is not managed consistently throughout the lifecycle, the team will likely begin to act in a reactive,&#xD;
        crisis mode as risks emerge. A consistent, repeatable risk mitigation process enables better project predictability&#xD;
        and higher levels of trust by project stakeholders.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The need to identify and monitor risk increases with the complexity of the system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The effort to reduce uncertainty has an associated cost. The team must balance the cost of this effort against the&#xD;
        potential impact of not addressing the risk. Not all candidate risks are actively managed. Mitigation effort and&#xD;
        degree of monitoring depend on the likelihood of impact and the risk tolerance for the project.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use the Test Coverage of Requirements metric as a countermeasure for this metric. The team may report low&#xD;
        architectural risk, but the system may not have been tested sufficiently to prove the architecture.&lt;br />&#xD;
        &lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
