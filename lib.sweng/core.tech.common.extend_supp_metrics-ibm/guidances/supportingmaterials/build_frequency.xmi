<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-NKgVQCnmanPB5_fK4X43yA" name="build_frequency,_e1zvkLUhEd6FZfmcIw9rww" guid="-NKgVQCnmanPB5_fK4X43yA" changeDate="2011-06-30T09:05:06.328-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Purpose&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Teams build frequently in order to deliver high quality software on schedule. Rather than waiting until the final&#xD;
    stages of development to integrate the system components, teams strive to develop, perform unit testing, and integrate&#xD;
    early and often (typically several times per day).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    By integrating the system more frequently, integration issues are identified earlier, when they are easier to fix, and&#xD;
    the overall integration effort is reduced. The result is a higher-quality product and more predictable delivery&#xD;
    schedules.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Definition&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Count the number of builds per unit of time (per day is standard for teams adopting continuous integration). Calculate&#xD;
    the average to monitor over time.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Analysis&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A good way to monitor Build Frequency over time is to use a trend line. Plot the number of builds on the Y axis and&#xD;
    time on the X axis. The results can be grouped by build status (passed/ failed).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Expected trend -&lt;/strong> Builds are frequent (several per day). Integration errors are manageable (because&#xD;
    they are discovered early) and overall quality is supported by faster, easier defect identification and diagnosis.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Infrequent builds or inconsistent frequency&lt;/strong> - When builds are infrequent or inconsistent (less than&#xD;
    once per day), integration takes longer, there is a higher risk of integration issues, and bug fixing is more&#xD;
    difficult. Developers' code may be out of synch. Rework is typically high. Project schedule may be impacted. Confirm an&#xD;
    automated build process is in place and is working efficiently. Encourage developers to integrate their code more&#xD;
    frequently, following continuous integration best practices.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the example below, which shows number of builds passed/failed for the Online Auction project in Smarter Planet,&#xD;
    builds are counted per week.&amp;nbsp;Also note in the following chart&amp;nbsp;that the number of builds failed is indicated&#xD;
    by the red bar (on top) and the number of builds passed is indicated by the green bar (bottom).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img alt=&quot;Build Frequency&quot; src=&quot;./resources/build_frequency.gif&quot; width=&quot;433&quot; height=&quot;342&quot; />&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Frequency and reporting&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Build Frequency data is&amp;nbsp;typically tracked daily (or&amp;nbsp;appropriate unit of time&amp;nbsp;based on the team's&#xD;
    target&amp;nbsp;build frequency), and reviewed by the team during iteration assessment.&amp;nbsp;Trends are monitored across&#xD;
    iterations.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Collection and reporting tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    IBM&amp;reg; Rational&amp;reg; Team Concert&amp;reg; collects build frequency data. IBM&amp;reg; Rational&amp;reg; Insight&amp;reg; reports on this metric.&#xD;
&lt;/p>&lt;br />&#xD;
&lt;h3>&#xD;
    Assumptions and prerequisites&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The team has a target build frequency, and conditions specified for when change sets are integrated and a build&#xD;
        created.&lt;br />&#xD;
        &lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Pitfalls, advice, and countermeasures&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Frequent builds improve team morale. Consistently having a working build that grows in functionality helps the team&#xD;
        understand their progress and represents the results of their hard work.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Frequent builds enforce discipline when teams are facing an aggressive deadline. When developers might take&#xD;
        shortcuts in order to deliver more (for example, less unit testing) daily builds will help the team maintain&#xD;
        quality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use this metric with Build Status and Build Health metrics to have a better understanding of the success of builds.&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
