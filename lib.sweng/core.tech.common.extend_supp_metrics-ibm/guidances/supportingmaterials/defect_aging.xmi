<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-3TTcFMoUaBZcBpJFnNDbww" name="new_supporting_material,_7X8_wNxEEd6gZeszDx04Hw" guid="-3TTcFMoUaBZcBpJFnNDbww" changeDate="2011-06-29T14:25:41.875-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Purpose&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Defect Aging is a measurement of team capacity, process efficiency, and defect complexity. Teams monitor Defect Aging&#xD;
    trends in order to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        determine whether defects are being addressed in a timely manner&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        understand the capacity of the team to resolve past defects to help with future planning&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        determine if there is a problem with high severity, critical defects taking too long to fix&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Definition&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Count the number of days each defect spends in each state (e.g. submitted, assigned, resolved).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Calculate the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Average number of days defects spend in each state.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Maximum number of days defects spend in each state.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Minimum number of days defects spend in each state.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Analysis&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Use a bar chart to monitor Defect Aging trends. Plot the number of days on the Y axis, and the states on the X axis.&#xD;
    Plot a vertical bar for the average, maximum, and minimum days for each state. Use stacked bars to group by severity.&#xD;
    Another useful way to monitor defect aging is to monitor how many defects have remained in specific date ranges by&#xD;
    severity. Typically teams track under 3 days, 3-5 days, and over 5 days.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Expected trend -&lt;/strong> The average time in each state is acceptable (meeting the team's established target)&#xD;
    and there are no excessive maximum times. The average should not necessarily be the same for all states. For example, a&#xD;
    defect should move quickly from Submitted to Assigned if the team's process is working efficiently.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>High average in assigned state -&lt;/strong> This trend occurs when defects spend a long time in the submitted&#xD;
    state prior to resolution. This can occur when low priority is placed by the developers on debugging and fixing. Or,&#xD;
    when defects are identified late in the process. The older a defect is, the more difficult it may be to correct, since&#xD;
    additional code may be created based upon it, and correcting the defect may have larger impact throughout the system.&#xD;
    When developers don't fix defects quickly, testers may run into a related defect in another area, creating a duplicate&#xD;
    report. Confirm that the team is working to address defects by priority in each iteration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>High average time in submitted state&lt;/strong> - Defects that are not promptly assigned (according to their&#xD;
    priority) indicate a problem with the team's process. Either analysis is taking too long, or the team is not placing&#xD;
    high enough priority on reviewing submitted defects. Confirm there is sufficient, consistent process and tooling in&#xD;
    place that will alert the team to newly submitted defects and that necessary information is captured with each report&#xD;
    for efficient analysis. Confirm the team works to move submissions through the process as quickly as possible.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Confirm that average Defect Aging is acceptable in all states to avoid the risk of impacting the project schedule. This&#xD;
    metric can be used to monitor adoption of Iterative Development.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following figure is an example of a Defect Aging report, which shows days spent in each state.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img alt=&quot;Defect Aging Report&quot; src=&quot;./resources/defect_aging.gif&quot; width=&quot;600&quot; height=&quot;280&quot; />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;br />&#xD;
    Frequency and reporting&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Data should be harvested for reporting purposes before the end of each iteration. The team should review any defect&#xD;
    aging issues during their iteration assessment meetings.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;br />&#xD;
    Collection and reporting tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    &amp;nbsp;&amp;nbsp;IBM&amp;reg; Rational&amp;reg; Quality Manager&amp;reg;,&amp;nbsp;&amp;nbsp;&amp;nbsp;IBM&amp;reg; Rational&amp;reg; ClearQuest&#xD;
    Enterprise&amp;reg;&amp;nbsp;&amp;nbsp;and&amp;nbsp;IBM&amp;reg; Rational&amp;reg; Team Concert&amp;reg; collect Defect Aging Data. IBM&amp;reg; Rational&amp;reg; Insight&amp;reg; reports&#xD;
    on this metric.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;br />&#xD;
    Assumptions and prerequisites&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The team has a tool in place to collect defect data, and has identified states for measurement&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defect status updates are collected with date stamps&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;br />&#xD;
    Pitfalls, advice, and countermeasures&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Defects may be in some states more than once. Confirm the tool used accounts for this.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Priority of defects should be considered when setting target average Defect Aging for each state.&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
