<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-ynp3xc_mrEZlWkUa0lAiFA" name="new_guideline,_7Pp9YI3hEd2xw7y9LRwo-A" guid="-ynp3xc_mrEZlWkUa0lAiFA" authors="Patrick McDaid" changeDate="2010-10-20T09:41:10.049-0700" version="7.5.0">
  <mainDescription>&lt;h3>&#xD;
    Purpose&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Defects may&amp;nbsp;result due&amp;nbsp;to missing, incorrect, ambiguous, or extraneous requirements. These defects may be&#xD;
    found at any phase of the project lifecycle, and in the performance of any discipline, but you will most likely find&#xD;
    them during testing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This measure reflects a form of root cause analysis of defects, attributing defects with one or more attributes to&#xD;
    perform analysis and modeling.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There is a range of possible methods for identifying and analyzing this measure. Really simply, this can be measured&#xD;
    with a single attribute on defects, which attribute identifies the root cause. With this approach, the possible values&#xD;
    could be as simple as: requirements, design, code, or test.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For a more complex and thorough approach, consider Orthogonal Defect Classification, or ODC. In this approach, defects&#xD;
    have&amp;nbsp;eight orthogonal attributes that characterize the defects, from which a comprehensive analysis and modeling&#xD;
    can be performed. The Impact and Target attributes can reflect upon the quality of the requirements. For more&#xD;
    information, see &lt;a href=&quot;http://w3.research.ibm.com/softeng/ODC/DETODC.HTM&quot; target=&quot;_blank&quot;>Details of Orthogonal&#xD;
    Defect Classification&lt;/a>&amp;nbsp;and &lt;a href=&quot;http://www.ibm.com/developerworks/rational/library/aug06/gu/index.html&quot; target=&quot;_blank&quot;>Adopting ODC to improve software quality: A case study&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Within the project lifecycle, it is most effective to find the defects attributed to a requirement as early as&#xD;
    possible. The later defects are found, the more that has been invested in the system based upon missing, incorrect,&#xD;
    ambiguous, or extraneous requirements.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Definition&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    &lt;strong>Count:&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Number of product defects attributed to requirements management.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Within a project lifecycle, a good way to monitor requirement defects is using a line chart that maps the following&#xD;
    through the project lifecycle:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The cumulative number of requirement defects over time&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The number of unresolved defects attributed to requirements over time&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The number of new requirement defects identified over time&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Analysis&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The cumulative measure will identify the magnitude of defects that are rooted in the requirements management. If a high&#xD;
    percentage of defects are attributed to the requirements, then more skills development in requirements development and&#xD;
    management&amp;nbsp;or increased formality in the requirements process&amp;nbsp;may be necessary.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The unresolved defect chart will identify the responsiveness to making the necessary requirements additions or changes,&#xD;
    and any subsequent design and coding changes (for instance, to resolve the defect). A highly responsive team will have&#xD;
    a reduced number of unresolved requirement defects. However, the impact of defects due to requirements is usually&#xD;
    greater as the lifecycle progresses.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A high number of defects associated with a single requirement indicates instability of that requirement. Invest time in&#xD;
    testing the requirement to ensure system quality. A low number of defects associated with a single requirement does not&#xD;
    guarantee that the requirement is of high quality. This could be&amp;nbsp;the result of&amp;nbsp;insufficient testing of the&#xD;
    requirement.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Watch for requirement defects identified late in the project lifecycle. This is an indication that insufficient&#xD;
    validation of the requirements is taking place early in the project lifecycle (before significant investment has been&#xD;
    made in implementation and testing). It is important to include stakeholders and the project team in the validation&#xD;
    activity. Again, more skills development or increased formality may be necessary.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the latter half of the project lifecycle, it is more difficult to expediently resolve requirement defects, because&#xD;
    the impact of change is greater because of the greater investment already made in design, code, and testing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If you compare these measures across projects, it gives you an indication and feedback on which projects and project&#xD;
    teams are more effective, and will identify where additional skills development and formality in their requirements&#xD;
    management may be necessary.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If you use the ODC method described previously, the Activity and Trigger attributes will indicate in which activity the&#xD;
    defect was found, and thus, how much investment was made in the requirement before it was discovered.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Collection and reporting tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    IBM&amp;reg; Rational&amp;reg; Quality Manager&amp;reg;is used to collect data for this metric.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
