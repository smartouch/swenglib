<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-W4pm5GmylMcytnInTuXNvw" name="how_to_adopt_team_mgmt,_GiA1QNTAEdydm4hTqzqMwQ" guid="-W4pm5GmylMcytnInTuXNvw" changeDate="2009-03-16T10:44:27.953-0700" version="7.2.0">
  <mainDescription>&lt;h3>&#xD;
    Getting Started&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Requirements management requires a repository (and related tooling) to store and manage the requirements.&amp;nbsp; You&#xD;
    also need to decide what attributes to store, and what traceability to maintain.&amp;nbsp; This practice provides some&#xD;
    default attributes and traceability, which are a good starting point.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Requirement repository&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The requirements repository must have the following functionalities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Add new requirements and&amp;nbsp;edit existing requirements&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Support requirements attributes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Provide traceability between requirements and other work products&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Store history of editing transactions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Report/sort/filter based on requirements attributes&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    This practice is a good starting point that provides some basic attributes and traceability.&amp;nbsp;Larger or more complex&#xD;
    projects (such as systems of systems) might need additional attributes and traceability.&amp;nbsp; However, consider&#xD;
    starting with this basic set, and then adding additional attributes and traceability as needed.&amp;nbsp;&amp;nbsp;If you have&#xD;
    a small number of requirements, you might be able to manage requirements with simple tools like spreadsheets, but&#xD;
    larger projects will need effective requirements management tools.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Common Pitfalls&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The most common pitfall with requirements management in general is excessive overhead.&amp;nbsp; There is always a tradeoff&#xD;
    between maintaining information, and the value that you get from that information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For example, if you decide to extend traceability to design and/or code, then you&amp;nbsp;need to&amp;nbsp;start by tracing to&#xD;
    components, rather than low level elements such as operations or data items.&amp;nbsp; If you trace to low level items,&#xD;
    then you will spend a lot more time maintaining that traceability as the code changes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another common pitfall is not maintaining the information in your requirements repository, and thereby creating&#xD;
    confusion in the team, and drawing wrong conclusions, such as prioritizing incorrectly.&lt;br />&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
